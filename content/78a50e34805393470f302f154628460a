<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" dir="ltr">
<head>
<title>Git for the lazy - Spheriki</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="MediaWiki 1.16.0" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Spheriki (en)" />
<link title="Creative Commons" type="application/rdf+xml" href="/w/index.php?title=Git_for_the_lazy&amp;action=creativecommons" rel="meta" />
<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
<link rel="alternate" type="application/atom+xml" title="Spheriki Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="/w/skins/common/shared.css?270" media="screen" />
<link rel="stylesheet" href="/w/skins/common/commonPrint.css?270" media="print" />
<link rel="stylesheet" href="/w/skins/monobook/main.css?270" media="screen" />
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE50Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE55Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/w/skins/monobook/IE60Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/w/skins/monobook/IE70Fixes.css?270" media="screen" /><![endif]-->
<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" />
<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" media="print" />
<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" />
<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;gen=css" />
<script>
var skin="monobook",
stylepath="/w/skins",
wgUrlProtocols="http\\:\\/\\/|https\\:\\/\\/|ftp\\:\\/\\/|irc\\:\\/\\/|gopher\\:\\/\\/|telnet\\:\\/\\/|nntp\\:\\/\\/|worldwind\\:\\/\\/|mailto\\:|news\\:|svn\\:\\/\\/",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://spheredev.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Git_for_the_lazy",
wgTitle="Git for the lazy",
wgAction="view",
wgArticleId=2122,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=5302,
wgVersion="1.16.0",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Spheriki", "5": "Spheriki talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "spheriki": 4, "spheriki_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "image": 6, "image_talk": 7},
wgSiteName="Spheriki",
wgCategories=["Tutorials"],
wgRestrictionEdit=[],
wgRestrictionMove=[];
</script><script src="/w/skins/common/wikibits.js?270"></script>
<script src="/w/skins/common/ajax.js?270"></script>
<script src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook&amp;270"></script>

</head>
<body class="mediawiki ltr ns-0 ns-subject page-Git_for_the_lazy skin-monobook">
<div id="globalWrapper">
<div id="column-content"><div id="content" >
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading">Git for the lazy</h1>
	<div id="bodyContent">
		<h3 id="siteSub">From Spheriki</h3>
		<div id="contentSub"></div>
		<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>
		<!-- start content -->
<p><a href="http://git-scm.com/" class="external text" rel="nofollow">Git</a> is a <a href="http://en.wikipedia.org/wiki/Distributed_revision_control" class="external text" rel="nofollow">distributed version control system</a>. No, you don't need to know what that means to use this guide. Think of it as a time machine: <a href="/wiki/Subversion" title="Subversion">Subversion</a> or <a href="/w/index.php?title=CVS&amp;action=edit&amp;redlink=1" class="new" title="CVS (page does not exist)">CVS</a> without the cruft.
</p><p>If you make a lot of changes, but decided you made a mistake, this will save your butt.
</p><p>This guide is for people who want to jump to any point in time with their project/game/whatever, and want something to use for themselves.
</p><p><br />
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Install_git"><span class="tocnumber">1</span> <span class="toctext">Install git</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Windows"><span class="tocnumber">1.1</span> <span class="toctext">Windows</span></a>
<ul>
<li class="toclevel-3 tocsection-3"><a href="#msysGit"><span class="tocnumber">1.1.1</span> <span class="toctext">msysGit</span></a></li>
<li class="toclevel-3 tocsection-4"><a href="#Cygwin"><span class="tocnumber">1.1.2</span> <span class="toctext">Cygwin</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-5"><a href="#Linux"><span class="tocnumber">1.2</span> <span class="toctext">Linux</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Introduce_yourself_to_git"><span class="tocnumber">2</span> <span class="toctext">Introduce yourself to git</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Start_your_project"><span class="tocnumber">3</span> <span class="toctext">Start your project</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Work_in_bits"><span class="tocnumber">4</span> <span class="toctext">Work in bits</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Admire_your_work"><span class="tocnumber">5</span> <span class="toctext">Admire your work</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#View_changes"><span class="tocnumber">6</span> <span class="toctext">View changes</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#How_to_fix_mistakes"><span class="tocnumber">7</span> <span class="toctext">How to fix mistakes</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#For_the_not_so_lazy"><span class="tocnumber">8</span> <span class="toctext">For the not so lazy</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="#Writing_good_commit_messages"><span class="tocnumber">8.1</span> <span class="toctext">Writing good commit messages</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="#Ignoring_files"><span class="tocnumber">8.2</span> <span class="toctext">Ignoring files</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#Branching_and_merging"><span class="tocnumber">8.3</span> <span class="toctext">Branching and merging</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Tags"><span class="tocnumber">8.4</span> <span class="toctext">Tags</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-17"><a href="#What_now.3F"><span class="tocnumber">9</span> <span class="toctext">What now?</span></a></li>
</ul>
</td></tr></table><script>if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<h1> <span class="mw-headline" id="Install_git"> Install git </span></h1>
<h2> <span class="mw-headline" id="Windows"> Windows</span></h2>
<p>For Windows, you have two options:
</p>
<h3> <span class="mw-headline" id="msysGit">msysGit </span></h3>
<p>Download and install <a href="https://git.wiki.kernel.org/index.php/MSysGit:InstallMSysGit#How_to_install_it" class="external text" rel="nofollow">msysGit</a> to use Git in Windows's cmd.exe console.
</p>
<h3> <span class="mw-headline" id="Cygwin">Cygwin</span></h3>
<ol><li> Download <a href="http://www.cygwin.com/" class="external text" rel="nofollow">Cygwin</a>.
</li><li> Put <tt>setup.exe</tt> in a folder of its own in your documents.
</li><li> Launch <tt>setup.exe</tt>.
</li><li> While installing Cygwin, pick these packages:
<ul><li> <b>git</b> from the DEVEL category
</li><li> <b>nano</b> (if you're wimpy) or <b>vim</b> (if you know it), both in the EDITORS category
</li></ul>
</li></ol>
<p>You'll now have a shortcut to launch Cygwin, which brings up something like the Linux terminal.
</p>
<h2> <span class="mw-headline" id="Linux"> Linux </span></h2>
<p>Install the <tt>git</tt> package using your preferred method (package manager or from source).
</p>
<h1> <span class="mw-headline" id="Introduce_yourself_to_git"> Introduce yourself to git </span></h1>
<p>Fire up your Cygwin/Linux terminal, and type:
</p>
<pre>git config --global user.name "Joey Joejoe"
git config --global user.email "joey@joejoe.com"
</pre>
<p>You only need to do this once.
</p><p><br />
</p>
<h1> <span class="mw-headline" id="Start_your_project"> Start your project </span></h1>
<p>Start your project using the Sphere editor, or from a ZIP file, or just by making the directory and adding files yourself.
</p><p>Now <tt>cd</tt> to your project directory:
</p>
<pre>cd myproject/
</pre>
<p>Tell git to start giving a damn about your project:
</p>
<pre>git init
</pre>
<p>... and your files in it:
</p>
<pre>git add .
</pre>
<p>Wrap it up:
</p>
<pre>git commit
</pre>
<p>Now type in a "commit message": a reminder to yourself of what you've just done, like:
</p>
<pre>Initial commit.
</pre>
<p>Save it and quit (type <tt>Ctrl+o Ctrl+x</tt> if you're in nano, <tt>:x</tt> if you're in vim) and you're done!
</p><p><br />
</p>
<h1> <span class="mw-headline" id="Work_in_bits"> Work in bits </span></h1>
<p>When dealing with git, it's best to work in small bits. Rule of thumb: if you can't summarise it in a sentence, you've gone too long without committing.
</p><p>This section is your typical work cycle:
</p>
<ol>
<li>Work on your project.</li>
<li>Check which files you've changed: <pre>git status</pre></li>
<li>Check what the actual changes were: <pre>git diff</pre></li>
<li>Add any files/folders mentioned in step 2 (or new ones): <pre>git add file1 newfile2 newfolder3</pre></li>
<li>Commit your work: <pre>git commit</pre></li>
<li>Enter and save your commit message. If you want to back out, just quit the editor.</li>
</ol>
<p>Repeat as much as you like. Just remember to always end with a commit.
</p><p><br />
</p>
<h1> <span class="mw-headline" id="Admire_your_work"> Admire your work </span></h1>
<p>To see what you've done so far, type:
</p>
<pre>git log
</pre>
<p>To just see the last few commits you've made:
</p>
<pre>git log -n3
</pre>
<p>Replace 3 with whatever you feel like.
</p><p>For a complete overview, type:
</p>
<pre>git log --stat --summary
</pre>
<p>Browse at your leisure.
</p><p><br />
</p>
<h1> <span class="mw-headline" id="View_changes"> View changes </span></h1>
<p>To view changes you haven't committed yet:
</p>
<pre>git diff
</pre>
<p>If you want changes between versions of your project, first you'll need to know the commit ID for the changes:
</p>
<pre>git log --pretty=oneline
</pre>
<pre>6c93a1960072710c6677682a7816ba9e48b7528f Remove persist.clearScriptCache() function.
c6e7f6e685edbb414c676df259aab989b617b018 Make git ignore logs directory.
8fefbce334d30466e3bb8f24d11202a8f535301c Initial commit.
</pre>
<p>The 40 characters at the front of each line is the commit ID. You'll also see them when you <tt>git commit</tt>. You can use it to show differences between commits.
</p><p>To view the changes between the 1st and 2nd commits, type:
</p>
<pre>git diff 8fef..c6e7
</pre>
<p>Note how you didn't have to type the whole thing, just the first few unique characters are enough.
</p><p>To view the last changes you made:
</p>
<pre>git diff HEAD^..HEAD
</pre>
<p><br />
</p>
<h1> <span class="mw-headline" id="How_to_fix_mistakes"> How to fix mistakes </span></h1>
<p>Haven't committed yet, but don't want to save the changes? You can throw them away:
</p>
<pre>git reset --hard
</pre>
<p><br />
You can also do it for individual files, but it's a bit different:
</p>
<pre>git checkout myfile.txt
</pre>
<p><br />
Messed up the commit message? This will let you re-enter it:
</p>
<pre>git commit --amend
</pre>
<p><br />
Forgot something in your last commit? That's easy to fix.
</p>
<pre>git reset --soft HEAD^
</pre>
<p>Add that stuff you forgot:
</p>
<pre>git add forgot.txt these.txt
</pre>
<p>Then write over the last commit:
</p>
<pre>git commit
</pre>
<p>Don't make a habit of overwriting/changing history if it's a public repo you're working with, though.
</p><p><br />
</p>
<h1> <span class="mw-headline" id="For_the_not_so_lazy"> For the not so lazy </span></h1>
<p>Just some extra reading here. Skip it if you're lazy.
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Writing_good_commit_messages"> Writing good commit messages </span></h2>
<p>The author of <a href="http://progit.org/book/ch5-2.html" class="external text" rel="nofollow">Pro Git</a> (an excellent online book) gives this advice for commit messages:
</p>
<blockquote>
Getting in the habit of creating quality commit messages makes using and collaborating with Git a lot easier. As a general rule, your messages should start with a single line that's no more than about 50 characters and that describes the changeset concisely, followed by a blank line, followed by a more detailed explanation. The Git project requires that the more detailed explanation include your motivation for the change and contrast its implementation with previous behavior — this is a good guideline to follow. It's also a good idea to use the imperative present tense in these messages. In other words, use commands. Instead of "I added tests for" or "Adding tests for," use "Add tests for." Here is a template originally written by Tim Pope at tpope.net:

<pre>
Short (50 chars or less) summary of changes

More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Further paragraphs come after blank lines.

 - Bullet points are okay, too

 - Typically a hyphen or asterisk is used for the bullet, preceded by a
   single space, with blank lines in between, but conventions vary here
</pre>
<p>If all your commit messages look like this, things will be a lot easier for you and the developers you work with. The Git project has well-formatted commit messages — I encourage you to run <tt>git log --no-merges</tt> there to see what a nicely formatted project-commit history looks like.
</p>
</blockquote>
<p><br />
</p>
<h2> <span class="mw-headline" id="Ignoring_files"> Ignoring files </span></h2>
<p>When you check your project status, sometimes you'll get something like this:
</p>
<pre>git status
</pre>
<pre># On branch master
# Untracked files:
#   (use "git add &lt;file&gt;..." to include in what will be committed)
#
#       bleh.txt
#       module.c~
nothing added to commit but untracked files present (use "git add" to track)
</pre>
<p>If you don't want git to track these files, you can add entries to <tt>.gitignore</tt>:
</p>
<pre>nano .gitignore
</pre>
<p>And add the files you want ignored:
</p>
<pre>bleh.txt
*~
</pre>
<p>The first line ignores <tt>bleh.txt</tt> the second line ignores all files and directories ending with a tilde (~), i.e. backup files.
</p><p>You can check if you got it right:
</p>
<pre>git status
</pre>
<pre># On branch master
# Changed but not updated:
#   (use "git add &lt;file&gt;..." to update what will be committed)
#
#       modified:   .gitignore
#
no changes added to commit (use "git add" and/or "git commit -a")
</pre>
<p>Don't forget to commit your changes to <tt>.gitignore</tt>!
</p>
<pre>git add .gitignore
git commit
</pre>
<p>With something like this for your commit message:
</p>
<pre>Make git ignore bleh.txt and backup files.
</pre>
<p>Use <tt>.gitignore</tt> to keep your messages clean, and stop git from bugging you about stuff you don't care about. It's a good idea to ignore things like executable binaries, object files, etc. Pretty much anything that can be regenerated from source.
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Branching_and_merging"> Branching and merging </span></h2>
<p>A branch is a separate line of development. If you're going to make a bunch of changes related to a single feature, it might be a good idea to make a "topic branch": a branch related to a topic/feature.
</p><p>To make a new branch:
</p>
<pre>git branch feature_x
</pre>
<p>To view the current branches:
</p>
<pre>git branch
</pre>
<pre>  feature_x
* master
</pre>
<p>The asterisk (*) shows your current branch. <var>master</var> is the default branch, like the trunk in CVS or Subversion.
</p><p>To switch to your new branch, just type:
</p>
<pre>git checkout feature_x
</pre>
<p>If you check the branches again, you'll see the switch:
</p>
<pre>git branch
</pre>
<pre>* feature_x
  master
</pre>
<p>Now go through the usual edit/commit cycle. Your changes will go onto the new branch.
</p><p>When you want to put your branch changes back onto <var>master</var>, first switch to <var>master</var>:
</p>
<pre>git checkout master
</pre>
<p>Then merge the branch changes:
</p>
<pre>git merge feature_x
</pre>
<p>This will combine the changes of the <var>master</var> and <var>feature_x</var> branches. If you didn't change the <var>master</var> branch, git will just "fast-forward" the <var>feature_x</var> changes so <var>master</var> is up to date. Otherwise, the changes from <var>master</var> and <var>feature_x</var> will be combined.
</p><p>You can see the commit in your project's log:
</p>
<pre>git log -n1
</pre>
<p>If you're happy with the result, and don't need the branch any more, you can delete it:
</p>
<pre>git branch -d feature_x
</pre>
<p>Now when you see the branches, you'll only see the <var>master</var> branch:
</p>
<pre>git branch
</pre>
<pre>* master
</pre>
<p>You can make as many branches as you need at once.
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Tags"> Tags </span></h2>
<p>If you hit a new version of your project, it may be a good idea to mark it with a tag. Tags can be used to easily refer to older commits.
</p><p>To tag the current version of your project as "v1.4.2", for example:
</p>
<pre>git tag v1.4.2
</pre>
<p>You can use these tags in places where those 40-character IDs appear.
</p><p><br />
</p>
<h1> <span class="mw-headline" id="What_now.3F"> What now? </span></h1>
<p>git can help with working with other people too. Of course, then you <i>do</i> have to learn about distributed version control. Until then, just enjoy this page.
</p><p>But if you want to learn:
</p>
<ul><li> <a href="http://progit.org/book/" class="external text" rel="nofollow">Pro Git online book</a>
</li><li> <a href="http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html" class="external text" rel="nofollow">gittutorial manual page online</a>
</li><li> <a href="http://www.kernel.org/pub/software/scm/git/docs/everyday.html" class="external text" rel="nofollow">Everyday git with 20 commands or so</a>
</li><li> <a href="http://git-scm.com/" class="external text" rel="nofollow">The official git web site</a>
</li></ul>
<p>Main git selling points (ripped off the main site):
</p>
<ul><li> Distributed development, i.e. working with other people.
</li><li> Strong support for non-linear development, i.e. working with other people <i>at the same time!</i>
</li><li> Efficient handling of large projects, i.e. fast!
</li><li> Cryptographic authentication of history, for the paranoid.
</li><li> Scriptable toolkit design, you can script pretty much any git task.
</li></ul>
<p><br />
If something doesn't seem right or is confusing, contact me at my <a href="http://tunginobi.spheredev.org/site/" class="external text" rel="nofollow">blog</a>. --<a href="/wiki/User:Tunginobi" title="User:Tunginobi">tunginobi</a> 07:42, 5 August 2009 (IST)
</p>
<!-- 
NewPP limit report
Preprocessor node count: 112/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikiDB:pcache:idhash:2122-0!1!0!!en!2!edit=0 and timestamp 20101220062425 -->
<div class="printfooter">
Retrieved from "<a href="http://spheredev.org/wiki/Git_for_the_lazy">http://spheredev.org/wiki/Git_for_the_lazy</a>"</div>
		<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Category</a>: <span dir='ltr'><a href="/wiki/Category:Tutorials" title="Category:Tutorials">Tutorials</a></span></div></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Git_for_the_lazy" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk" class="new"><a href="/w/index.php?title=Talk:Git_for_the_lazy&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/w/index.php?title=Git_for_the_lazy&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Git_for_the_lazy&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Git_for_the_lazy" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/w/skins/common/spheriki.png);" href="/wiki/Main_Page" title="Visit the main page"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
				<li id="n-Forums"><a href="http://www.spheredev.org/forums">Forums</a></li>
				<li id="n-portal"><a href="/wiki/Spheriki:Community_Portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-currentevents"><a href="/wiki/Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="The place to find out">Help</a></li>
				<li id="n-sitesupport"><a href="/wiki/Spheriki:Site_support">Donations</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-sphere'>
		<h5>sphere</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Latest-Version"><a href="/wiki/Sphere:Latest">Latest Version</a></li>
				<li id="n-Functions"><a href="/wiki/Functions">Functions</a></li>
				<li id="n-Scripts"><a href="/wiki/Scripts">Scripts</a></li>
				<li id="n-Tutorials"><a href="/wiki/Tutorials">Tutorials</a></li>
				<li id="n-Repo"><a href="http://spheredev.org/downloads">Repo</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" title="Search Spheriki" accesskey="f" type="search" name="search" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Git_for_the_lazy" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Git_for_the_lazy" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Git_for_the_lazy&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Git_for_the_lazy&amp;oldid=5302" title="Permanent link to this revision of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer">
	<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/w/skins/common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
	<div id="f-copyrightico"><a href="http://www.gnu.org/copyleft/fdl.html"><img src="/w/skins/common/images/gnu-fdl.png" alt="GNU Free Documentation License 1.2" width="88" height="31" /></a></div>
	<ul id="f-list">
		<li id="lastmod"> This page was last modified on 9 August 2010, at 16:48.</li>
		<li id="viewcount">This page has been accessed 321,116 times.</li>
		<li id="copyright">Content is available under <a href="http://www.gnu.org/copyleft/fdl.html" class="external ">GNU Free Documentation License 1.2</a>.</li>
		<li id="privacy"><a href="/wiki/Spheriki:Privacy_policy" title="Spheriki:Privacy policy">Privacy policy</a></li>
		<li id="about"><a href="/wiki/Spheriki:About" title="Spheriki:About">About Spheriki</a></li>
		<li id="disclaimer"><a href="/wiki/Spheriki:General_disclaimer" title="Spheriki:General disclaimer">Disclaimers</a></li>
	</ul>
</div>
</div>

<script>if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served in 4.034 secs. --></body></html>
