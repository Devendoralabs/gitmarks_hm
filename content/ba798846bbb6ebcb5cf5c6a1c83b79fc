<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en">

<!--
	generated in 1.004 seconds
	53462 bytes batcached for 300 seconds
-->
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title> Programming Praxis</title>

<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/pub/ambiru/style.css?m=1292395449g" type="text/css" media="screen" />
<link rel="pingback" href="http://programmingpraxis.com/xmlrpc.php" />

		<script src='http://wordpress.com/remote-login.php?action=js&amp;host=programmingpraxis.com&amp;id=6649073&amp;t=1292854293&amp;back=programmingpraxis.com%2F' type="text/javascript"></script>
		<script type="text/javascript">
		/* <![CDATA[ */
			if ( 'function' === typeof WPRemoteLogin ) {
				document.cookie = "wordpress_test_cookie=test; path=/";
				if ( document.cookie.match( /(;|^)\s*wordpress_test_cookie\=/ ) ) {
					WPRemoteLogin();
				}
			}
		/* ]]> */
		</script>
		<link rel="alternate" type="application/rss+xml" title="Programming Praxis &raquo; Feed" href="http://programmingpraxis.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Programming Praxis &raquo; Comments Feed" href="http://programmingpraxis.com/comments/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/h4/global.css?m=1291749258g" type="text/css" />
<script type='text/javascript' src='http://s2.wp.com/wp-includes/js/l10n.js?m=1290133841g&amp;ver=20101110'></script>
<script type='text/javascript' src='http://s1.wp.com/wp-includes/js/jquery/jquery.js?m=1290133841g&amp;ver=1.4.4'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://programmingpraxis.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://programmingpraxis.wordpress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Programming Praxis' href='http://programmingpraxis.com/' />
<meta name="generator" content="WordPress.com" />
<link rel='shortlink' href='http://wp.me/rTJ7' />
<link rel="shortcut icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1284002170g" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1284002170g" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon" href="http://s0.wp.com/wp-content/themes/h4/i/webclip.png?m=1255092717g" />
	<style type="text/css">
	/* <![CDATA[ */
				div#likes { margin-top: 15px; }
		.like-button { border: 1px solid #eee; padding: 2px 6px; font-size: 13px; font-family: arial, tahoma, sans-serif; }
		#wpl-likebox { clear: left; font-size: 11px; font-family: arial, tahoma, verdana, sans-serif !important; min-height: 30px; margin: 10px 0 !important; padding: 5px 0 10px 0 !important; }
		#wpl-button { float: left; background: url( /i/buttonbg.png ) top left repeat-x; margin-right: 7px; border: 1px solid #d4d4d4; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; }
		#wpl-button a { color: #666 !important; line-height: 130% !important; text-decoration: none !important; outline: none; float: left; padding: 3px 6px 2px 24px !important; font-size: 11px !important; background: url( /i/likestar.png ) 6px 49.8% no-repeat; }
		#wpl-button.liked { background: #feffce; border: 1px solid #f3e389; }
		#wpl-button.liked a { color: #ba871b !important; }
		#wpl-likebox #wpl-count { min-height: 25px; line-height: 130% !important; float: left; padding-top: 4px; }
		#wpl-likebox #wpl-avatars { clear: left; max-height: 98px; overflow: hidden; margin-top: 15px; line-height: 130% !important; }
		#wpl-likebox #wpl-avatars img { border: none !important; }
		#wpl-likebox #wpl-mustlogin { line-height: 14px !important; font-size: 11px; clear: left; margin-top: 5px; background: #f0f0f0; padding: 10px; width: 65%; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; }
		#wpl-likebox #wpl-mustlogin a { color: #888; text-decoration: underline; }
		#wpl-likebox #wpl-mustlogin p { margin: 5px 0; padding: 0 }
		#wpl-likebox #wpl-mustlogin input.input { padding: 2px; background: #fff; font-size: 11px; font-family: inherit; border: 1px solid #ccc; -moz-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset; -webkit-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset; line-height: 12px; }
		#wpl-likebox #wpl-mustlogin input#wp-submit { border: 1px solid #ccc; font-size: 11px; background: #fafafa; repeat-x; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; padding: 2px 4px !important; line-height: 12px; }
		#wpl-likebox #wpl-mustlogin label { position: relative; cursor: text; }
		#wpl-likebox #wpl-mustlogin label span { position: absolute; top: 0px; left: 5px; padding: 0 !important; }
		#wpl-likebox #wpl-mustlogin label span { top /*\**/: -10px\9; }
	/* ]]> */
	</style>
	<link rel='openid.server' href='http://programmingpraxis.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='http://programmingpraxis.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="http://programmingpraxis.com/osd.xml" title="Programming Praxis" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com" />
<style type="text/css">
#header{
	background: url(http://programmingpraxis.files.wordpress.com/2009/06/cropped-programming-praxis3.jpg) no-repeat;
}
#header h1, #header #desc {
	display: none;
}
</style>
<meta name="application-name" content="Programming Praxis" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="A collection of etudes, updated weekly, for the education and enjoyment of the savvy programmer" /><meta name="msapplication-task" content="name=Subscribe;action-uri=http://programmingpraxis.com/feed/;icon-uri=http://s1.wp.com/i/favicon-stacked.ico" /><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" />
<script type='text/javascript'>/*<![CDATA[*/if(typeof(addLoadEvent)!='undefined'){addLoadEvent(function(){if(top==self){i=document.createElement('img');i.src='http://botd2.wordpress.com/botd.gif?blog=6649073&post=0&lang=en&date=1292576439&ip=96.239.59.178&url=http://programmingpraxis.com/';i.style.width='0px';i.style.height='0px';i.style.overflow='hidden';document.body.appendChild(i);}});}/*]]>*/</script>

	<link rel="stylesheet" type="text/css" href="http://programmingpraxis.com?custom-css=1&#038;csblog=rTJ7&#038;cscache=5&#038;csrev=3" />
</head>
<body id="home">
<div id="wrap" class="clearfix">
<div id="header">
	<h1><a href="http://programmingpraxis.com/">Programming Praxis</a></h1>
	<p id="desc">A collection of etudes, updated weekly, for the education and enjoyment of the savvy programmer</p>
</div>
<div id="nav" class="clearfix">
	<ul id="menu-main-menu" class="menu"><li id="menu-item-2565" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-home menu-item-2565"><a href="http://programmingpraxis.com">Home</a></li>
<li id="menu-item-2566" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2566"><a href="http://programmingpraxis.com/contents/about/">About</a></li>
<li id="menu-item-2567" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2567"><a href="http://programmingpraxis.com/contents/howto-posting-source-code/">HOWTO:  Posting Source Code</a></li>
<li id="menu-item-2568" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2568"><a href="http://programmingpraxis.com/contents/language-resources/">Language Resources</a>
<ul class="sub-menu">
	<li id="menu-item-2569" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2569"><a href="http://programmingpraxis.com/contents/language-resources/awk/">Awk</a></li>
	<li id="menu-item-2570" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2570"><a href="http://programmingpraxis.com/contents/language-resources/haskell/">Haskell</a></li>
	<li id="menu-item-2571" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2571"><a href="http://programmingpraxis.com/contents/language-resources/lua/">Lua</a></li>
	<li id="menu-item-2572" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2572"><a href="http://programmingpraxis.com/contents/language-resources/python/">Python</a></li>
	<li id="menu-item-2573" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2573"><a href="http://programmingpraxis.com/contents/language-resources/scheme/">Scheme</a></li>
</ul>
</li>
<li id="menu-item-2574" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2574"><a href="http://programmingpraxis.com/contents/standard-prelude/">Standard Prelude</a>
<ul class="sub-menu">
	<li id="menu-item-2580" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2580"><a href="http://programmingpraxis.com/standard-prelude/#list-utilities">List Utilities</a></li>
	<li id="menu-item-2581" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2581"><a href="http://programmingpraxis.com/standard-prelude/#list-comprehensions">List Comprehensions</a></li>
	<li id="menu-item-2582" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2582"><a href="http://programmingpraxis.com/standard-prelude/#pattern-matching">Pattern Matching</a></li>
	<li id="menu-item-2583" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2583"><a href="http://programmingpraxis.com/standard-prelude/#matrices">Matrices</a></li>
	<li id="menu-item-2584" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2584"><a href="http://programmingpraxis.com/standard-prelude/#hash-tables">Hash Tables</a></li>
	<li id="menu-item-2585" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2585"><a href="http://programmingpraxis.com/standard-prelude/#input-output">Input/Output</a></li>
	<li id="menu-item-2586" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2586"><a href="http://programmingpraxis.com/standard-prelude/#strings">Strings</a></li>
	<li id="menu-item-2587" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2587"><a href="http://programmingpraxis.com/standard-prelude/#sorting">Sorting</a></li>
	<li id="menu-item-2588" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2588"><a href="http://programmingpraxis.com/standard-prelude/#higher-order-functions">Higher-Order Funcs</a></li>
	<li id="menu-item-2589" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2589"><a href="http://programmingpraxis.com/standard-prelude/#math-functions">Math Functions</a></li>
	<li id="menu-item-2799" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2799"><a href="http://programmingpraxis.com/standard-prelude/#bits">Bits</a></li>
	<li id="menu-item-2590" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2590"><a href="http://programmingpraxis.com/standard-prelude/#random-numbers">Random Numbers</a></li>
	<li id="menu-item-2592" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2592"><a href="http://programmingpraxis.com/standard-prelude/#control-flow">Control Flow</a></li>
	<li id="menu-item-2591" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2591"><a href="http://programmingpraxis.com/standard-prelude/#date-arithmetic">Date Arithmetic</a></li>
	<li id="menu-item-2593" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2593"><a href="http://programmingpraxis.com/standard-prelude/#unit-testing">Unit Testing</a></li>
	<li id="menu-item-2594" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2594"><a href="http://programmingpraxis.com/standard-prelude/#miscellaneous">Miscellaneous</a></li>
</ul>
</li>
<li id="menu-item-2575" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2575"><a>Exercises</a>
<ul class="sub-menu">
	<li id="menu-item-2576" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2576"><a href="http://programmingpraxis.com/contents/chron/">Chronological</a></li>
	<li id="menu-item-2577" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2577"><a href="http://programmingpraxis.com/contents/revchron/">Reverse</a></li>
	<li id="menu-item-2578" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2578"><a href="http://programmingpraxis.com/contents/permuted/">Permuted</a></li>
	<li id="menu-item-2579" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2579"><a href="http://programmingpraxis.com/contents/themes/">Themes</a></li>
</ul>
</li>
<li id="menu-item-2607" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2607"><a href="mailto://programmingpraxis@gmail.com">Contact</a></li>
</ul></div><div id="content">
									<div id="post-3472" class="post-3472 post type-post status-publish format-standard hentry category-exercises entry entry-1">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/12/17/polite-numbers/" rel="bookmark" title="Permanent Link to Polite&nbsp;Numbers">Polite&nbsp;Numbers</a></h2> 
			<h3>December 17, 2010</h3>
		</div>
		<div class="entrybody">
			<p>A number is <a href="http://en.wikipedia.org/wiki/Polite_number"><em>polite</em></a> if it can be written as the sum of two or more consecutive numbers; for instance, 7 is polite because it can be written at 3 + 4.  Some numbers can be written as the sum of two or more consecutive numbers in more than one way; for instance, 15 = 1 + 2 + 3 + 4 + 5 = 4 + 5 + 6 = 7 + 8.  The number of ways that a number can be written as the sum of two or more consecutive numbers is its <em>politeness</em>.  Any number that is a power of 2 cannot be written as the sum of two or more consecutive numbers; such a number has a politeness of 0, and is thus <em>impolite</em>.</p>
<p>There is a set of consecutive integers that sum to a given number for each odd divisor of the number greater than 1.  For instance, the divisors of 28 are 1, 2, 4, 7, 14, 28.  The only odd divisor of 28 greater than 1 is 7, so 28 has a politeness of 1.  The set of consecutive integers has length 7 (the divisor) and is centered at 4 = 28 &divide; 7: 1 + 2 + 3 + 4 + 5 + 6 + 7; that works because there are 7 numbers with an average of 4 (since they are centered on 4).  In some cases, such as the divisor 11 of the number 33, the set of numbers includes negative integers: -2 + -1 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8; in that case, the negative integers cancel out the corresponding positive integers, so the remaining set is 3 + 4 + 5 + 6 + 7 + 8 = 33.</p>
<p>Your task is to write a program that calculates all the ways that a number can be written as the sum of two or more consecutive numbers.  When you are finished, you are welcome to <a href="/2010/12/17/polite-numbers/2/">read</a> or <a href="http://programmingpraxis.codepad.org/YgFEcg8Q">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/12/17/polite-numbers/">1</a> <a href="http://programmingpraxis.com/2010/12/17/polite-numbers/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/12/17/polite-numbers/#comments" class="commentslink"  title="Comment on Polite&nbsp;Numbers">5 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3466" class="post-3466 post type-post status-publish format-standard hentry category-exercises entry entry-2">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/12/14/longest-duplicated-substring/" rel="bookmark" title="Permanent Link to Longest Duplicated&nbsp;Substring">Longest Duplicated&nbsp;Substring</a></h2> 
			<h3>December 14, 2010</h3>
		</div>
		<div class="entrybody">
			<p>In a previous exercise, we looked at the problem of finding the longest palindrome in a string.  In today&#8217;s exercise, we look at a similar problem, finding the longest duplicated substring in a string.</p>
<p>The algorithm for this task is well known.  First build a <em>suffix list</em> that has all the substring suffices of the input string.  For instance, if the input is &#8220;banana&#8221;, the suffix list is &#8220;a&#8221;, &#8220;na&#8221;, &#8220;ana&#8221;, &#8220;nana&#8221;, &#8220;anana&#8221;, &#8220;banana&#8221;.  Then sort the suffix list, bringing suffices with common beginnings together.  Finally, scan the sorted suffix list, computing the common lengths of adjacent pairs, and report the longest.</p>
<p>Your task is to write a program to find the longest duplicated substring within a string.  When you are finished, you are welcome to <a href="/2010/12/14/longest-duplicated-substring/2/">read</a> or <a href="http://programmingpraxis.codepad.org/dY3aGxru">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/12/14/longest-duplicated-substring/">1</a> <a href="http://programmingpraxis.com/2010/12/14/longest-duplicated-substring/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/12/14/longest-duplicated-substring/#comments" class="commentslink"  title="Comment on Longest Duplicated&nbsp;Substring">7 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3460" class="post-3460 post type-post status-publish format-standard hentry category-exercises entry entry-3">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/12/10/two-random-selections/" rel="bookmark" title="Permanent Link to Two Random&nbsp;Selections">Two Random&nbsp;Selections</a></h2> 
			<h3>December 10, 2010</h3>
		</div>
		<div class="entrybody">
			<p>In today&#8217;s exercise, we look at two programs that make random selections.</p>
<p>The first program picks an item from a list whose size is not known in advance, making a single pass through the list.  The algorithm selects the first item in the list with probability <sup>1</sup>/<sub>1</sub>, then replaces that item with the second item in the list with probability <sup>1</sup>/<sub>2</sub>, then replaces whichever item is currently selected with the third item in the list with probability <sup>1</sup>/<sub>3</sub>, and so on; when the end of the list is reached, each item will be selected with probability <sup>1</sup>/<sub><em>n</em></sub>, where <em>n</em> is the number of items in the list.  This algorithm is used in the unix <code>fortune</code> program, which randomly selects a line from a file of pithy sayings, and appears in the <a href="standard-prelude">Standard Prelude</a> under the name <a href="standard-prelude/#fortune"><code>fortune</code></a>.</p>
<p>The second program is used by auditors, pollsters, and others who need to randomly select <em>m</em> items from a population of <em>n</em> items.  The program outputs a list of <em>m</em> numbers in the range 1 to <em>n</em>, in order; the user then selects the sampled items from a numbered list of the items in the population.  The algorithm runs through the integers from 1 to <em>n</em> and selects each item with probability <sup><em>m</em></sup>/<sub><em>n</em></sub>, where at each step <em>m</em> is the number remaining to be selected and <em>n</em> is the number remaining in the population.</p>
<p>Your task is to write the two programs described above.  When you are finished, you are welcome to <a href="/2010/12/10/two-random-selections/2/">read</a> or <a href="http://programmingpraxis.codepad.org/6raHapY0">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/12/10/two-random-selections/">1</a> <a href="http://programmingpraxis.com/2010/12/10/two-random-selections/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/12/10/two-random-selections/#comments" class="commentslink"  title="Comment on Two Random&nbsp;Selections">4 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3440" class="post-3440 post type-post status-publish format-standard hentry category-exercises entry entry-4">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/12/07/ullmans-puzzle/" rel="bookmark" title="Permanent Link to Ullman&#8217;s&nbsp;Puzzle">Ullman&#8217;s&nbsp;Puzzle</a></h2> 
			<h3>December 7, 2010</h3>
		</div>
		<div class="entrybody">
			<p>This puzzle is due to Jeffrey Ullman:</p>
<blockquote><p>Given a list of <em>n</em> real numbers, a real number <em>t</em>, and an integer <em>k</em>, determine if there exists a <em>k</em>-element subset of the original list of <em>n</em> real numbers that is less than <em>t</em>.</p></blockquote>
<p>For instance, given the list of 25 real numbers 18.1, 55.1, 91.2, 74.6, 73.0, 85.9, 73.9, 81.4, 87.1, 49.3, 88.8, 5.7, 26.3, 7.1, 58.2, 31.7, 5.8, 76.9, 16.5, 8.1, 48.3, 6.8, 92.4, 83.0, 19.6, <em>t</em> = 98.2 and <em>k</em> = 3, the 3-element subset 31.7, 16.5 and 19.6 sums to 67.8, which is less than 98.2, so the result is <em>true</em>.</p>
<p>This is a puzzle, so you&#8217;re not allowed to look at the suggested solution until you have your own solution.</p>
<p>Your task is to write a function that makes that determination.  When you are finished, you are welcome to <a href="/2010/12/07/ullmans-puzzle/2/">read</a> or <a href="http://programmingpraxis.codepad.org/i7HUvdFb">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/12/07/ullmans-puzzle/">1</a> <a href="http://programmingpraxis.com/2010/12/07/ullmans-puzzle/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/12/07/ullmans-puzzle/#comments" class="commentslink"  title="Comment on Ullman&#8217;s&nbsp;Puzzle">15 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3424" class="post-3424 post type-post status-publish format-standard hentry category-exercises entry entry-5">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/12/03/maximum-sum-subsequence/" rel="bookmark" title="Permanent Link to Maximum Sum&nbsp;Subsequence">Maximum Sum&nbsp;Subsequence</a></h2> 
			<h3>December 3, 2010</h3>
		</div>
		<div class="entrybody">
			<p>We&#8217;ll categorize today&#8217;s exercise as part of our on-going series of interview questions, but it&#8217;s really more than that:</p>
<blockquote><p>Given a sequence of integers, both positive and negative, find the contiguous subsequence with the maximum sum.  For instance, given the sequence 31, -41, 59, 26, -53, 58, 97, -93, -23, 84, the maximum sum subsequence is 59, 26, -53, 58, 97, which sums to 187.</p></blockquote>
<p>Your task is to write a series of functions that takes a sequence (use either a list or an array, whichever is convenient for your programming language) and returns the sum of the maximum sum subsequence; you should find solutions with time complexities of <em>O</em>(<em>n</em><sup>3</sup>),  <em>O</em>(<em>n</em><sup>2</sup>),  <em>O</em>(<em>n</em> log <em>n</em>), and  <em>O</em>(<em>n</em>).  When you are finished, you are welcome to <a href="/2010/12/03/maximum-sum-subsequence/2/">read</a> or <a href="http://programmingpraxis.codepad.org/eM3jPDSO">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/12/03/maximum-sum-subsequence/">1</a> <a href="http://programmingpraxis.com/2010/12/03/maximum-sum-subsequence/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/12/03/maximum-sum-subsequence/#comments" class="commentslink"  title="Comment on Maximum Sum&nbsp;Subsequence">13 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3444" class="post-3444 post type-post status-publish format-standard hentry category-exercises entry entry-6">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/11/30/form-letters/" rel="bookmark" title="Permanent Link to Form&nbsp;Letters">Form&nbsp;Letters</a></h2> 
			<h3>November 30, 2010</h3>
		</div>
		<div class="entrybody">
			<blockquote><p><code>Welcome back, Jane!<br />
We hope that you and all the members<br />
of the Public family are constantly<br />
reminding your neighbors there<br />
on Maple Street to shop with us.<br />
As usual, we will ship your order to<br />
&nbsp;&nbsp;&nbsp;&nbsp;Ms. Jane Q. Public<br />
&nbsp;&nbsp;&nbsp;&nbsp;600 Maple Street<br />
&nbsp;&nbsp;&nbsp;&nbsp;Your Town, Iowa 12345</code></p></blockquote>
<p>Everybody hates form letters.  But they are part of the computing universe, and today&#8217;s exercise asks you to print them.  Input to the form letter generator comes in two parts.  First, there is a schema that defines the letter to be written.  Here is the schema for the letter shown above:</p>
<p><code>Welcome back, $1!<br />
We hope that you and all the members<br />
of the $0 family are constantly<br />
reminding your neighbors there<br />
on $5 to shop with us.<br />
As usual, we will ship your order to<br />
&nbsp;&nbsp;&nbsp;&nbsp;$3 $1 $2. $0<br />
&nbsp;&nbsp;&nbsp;&nbsp;$4 $5<br />
&nbsp;&nbsp;&nbsp;&nbsp;$6, $7 $8</code></p>
<p>Variable text is identified as $<em>n</em>, where <em>n</em> is the field number from a database; although it&#8217;s not shown above, <em>n</em> can be larger than 9, extending right-ward until a non-digit is encountered.  Also not shown above is the construct $$, which prints a literal dollar sign.</p>
<p>The data comes from a comma-separated values file, of the type we have previously encountered.  In this case, records have nine fields: last name, first name, middle initial, title, street number, street name, city, state, and zip code.  Here is a sample two-record data file:</p>
<p><code>Public,Jane,Q,Ms.,600,Maple Street,Your Town, Iowa,12345<br />
Smith,John,Z,Dr.,1234,Main Street,Anytown,Missouri,63011</code></p>
<p>Your task is to write a program that takes a schema and a data file and writes a series of form letters.  When you are finished, you are welcome to <a href="/2010/11/30/form-letters/2/">read</a> or <a href="http://programmingpraxis.codepad.org/IU214JGT">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/11/30/form-letters/">1</a> <a href="http://programmingpraxis.com/2010/11/30/form-letters/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/11/30/form-letters/#comments" class="commentslink"  title="Comment on Form&nbsp;Letters">12 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3413" class="post-3413 post type-post status-publish format-standard hentry category-exercises entry entry-7">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/11/26/divisors-and-totatives/" rel="bookmark" title="Permanent Link to Divisors And&nbsp;Totatives">Divisors And&nbsp;Totatives</a></h2> 
			<h3>November 26, 2010</h3>
		</div>
		<div class="entrybody">
			<p>We have examined functions to compute the factors of a number in <a href="/2009/06/19/monte-carlo-factorization/">several</a> <a href="/2009/07/21/pollards-p-1-factorization-algorithm/">previous</a> <a href="/2010/04/27/modern-elliptic-curve-factorization-part-2/">exercises</a>.  In today&#8217;s exercise we examine functions to compute divisors and totients, which are concepts of number theory closely related to factors.</p>
<p>The <em>divisors</em> of a number are those numbers that divide it evenly; for example, the divisors of 60 are 1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, and 60.  The sum of the divisors of 60 is 168, and the number of divisors of 60 is 12.</p>
<p>The <em>totatives</em> of a number are those numbers less than the given number and coprime to it; two numbers are coprime if they have no common factors other than 1.  The number of totatives of a given number is called its <em>totient</em>.  For example, the totatives of 30 are 1, 7, 11, 13, 17, 19, 23, and 29, and the totient of 30 is 8.  The totient function was discovered by Leonhard Euler, and it pops up in all kinds of strange places in number theory; for instance, the totatives of 30 are the spokes on a 2,3,5 factorization <a href="/2009/05/08/wheel-factorization/">wheel</a>.</p>
<p>Your task is to write a small library of five functions that compute the divisors of a number, the sum and number of its divisors, the totatives of a number, and its totient.  When you are finished, you are welcome to <a href="/2010/11/26/divisors-and-totatives/2/">read</a> or <a href="http://programmingpraxis.codepad.org/SmASe1eC">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/11/26/divisors-and-totatives/">1</a> <a href="http://programmingpraxis.com/2010/11/26/divisors-and-totatives/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/11/26/divisors-and-totatives/#comments" class="commentslink"  title="Comment on Divisors And&nbsp;Totatives">9 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3385" class="post-3385 post type-post status-publish format-standard hentry category-exercises entry entry-8">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/11/23/string-subsets/" rel="bookmark" title="Permanent Link to String&nbsp;Subsets">String&nbsp;Subsets</a></h2> 
			<h3>November 23, 2010</h3>
		</div>
		<div class="entrybody">
			<p>This exercise is part of our on-going series of interview questions:</p>
<blockquote><p>Given two strings, determine if all the characters in the second string appear in the first string; thus, DA is a subset of ABCD.  Counts matter, so DAD is not a subset of ABCD, since there are two D in the second string but only one D in the first string.  You may assume that the second string is no longer than the first string.</p></blockquote>
<p>Your task is to write a function to determine if one string is a subset of another string.  You should work as you would in a programming interview; if you find one solution, search for a better solution.  When you are finished, you are welcome to <a href="/2010/11/23/string-subsets/2/">read</a> or <a href="http://programmingpraxis.codepad.org/qH8N4FfU">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/11/23/string-subsets/">1</a> <a href="http://programmingpraxis.com/2010/11/23/string-subsets/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/11/23/string-subsets/#comments" class="commentslink"  title="Comment on String&nbsp;Subsets">20 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3367" class="post-3367 post type-post status-publish format-standard hentry category-exercises entry entry-9">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/11/19/topological-sort/" rel="bookmark" title="Permanent Link to Topological&nbsp;Sort">Topological&nbsp;Sort</a></h2> 
			<h3>November 19, 2010</h3>
		</div>
		<div class="entrybody">
			<p><img src="http://programmingpraxis.files.wordpress.com/2010/11/acyclic.png?w=640" align="right" />A graph <em>G</em> is a collection of its vertices <em>V</em> and the edges <em>E</em> between them: <em>G</em>(<em>V</em>, <em>E</em>); the interstate highway system is an example of a graph, with cities as vertices and highways as edges.  A directed graph is a graph in which each edge is identified with a <em>from</em> vertex and a <em>to</em> vertex; the roads in some city centers can be considered a directed graph, because one-way roads only allow traffic in a single direction (Venice has one-way canals, which blew my mind the first time I saw a <em>sensico unico</em> sign).  A directed acyclic graph, sometimes called a DAG, is a directed graph in which there are no cycles, that is, by following the successors of a vertex you can never return to that vertex; the tasks involved in building a house form a DAG, in which the framing must be done before drywall can be installed, and the modules of a program library form a DAG, in which some modules must be compiled before others that depend on them.</p>
<p>A topological sort is an ordering of the vertices of a DAG in which each vertex appears before any of the vertices that depend on it.  Topological sorts are typically messy, with multiple right answers; a fireman can spray water on a burning building even while his colleagues are searching for anyone still inside.  There are many possible topological sorts of the sample graph; one of them is 7 5 11 2 3 8 9 10.</p>
<p>There are many ways to perform a topological sort.  Perhaps the simplest is to pick a vertex that has no incoming edges; put it at the head of the sorted output, delete it and all the edges that come from it, and recur until no vertices remain.  If there is more than one vertex that has no incoming edges, any of them may be chosen.</p>
<p>Your task is to write functions to identify cyclic graphs and perform topological sort of a graph.  When you are finished, you are welcome to <a href="/2010/11/19/topological-sort/2/">read</a> or <a href="http://programmingpraxis.codepad.org/RjhH0OAK">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/11/19/topological-sort/">1</a> <a href="http://programmingpraxis.com/2010/11/19/topological-sort/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/11/19/topological-sort/#comments" class="commentslink"  title="Comment on Topological&nbsp;Sort">9 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
						<div id="post-3342" class="post-3342 post type-post status-publish format-standard hentry category-exercises entry entry-10">
		<div class="entrytitle">
			<h2><a href="http://programmingpraxis.com/2010/11/16/rsa-cryptography/" rel="bookmark" title="Permanent Link to RSA&nbsp;Cryptography">RSA&nbsp;Cryptography</a></h2> 
			<h3>November 16, 2010</h3>
		</div>
		<div class="entrybody">
			<p>In 1973, Clifford Cocks invented a method of public-key cryptography in which the recipient of a message holds a private key, known only to himself, and publishes a public key, which may be used by anyone to send him a message that only he will be able to read.  Cocks worked for the British security service GCHQ, so he was unable to publish his work.  In 1978, three MIT professors, Ronald L. Rivest, Leonard M. Adelman and Adi Shamir invented the same algorithm, independently, which they patented in 1983.  The algorithm is now known as RSA, after their initials.</p>
<p>The basic idea of RSA starts with two large prime numbers of equal bit-length, <em>p</em> and <em>q</em>; their product <em>n</em> becomes the modulus of the cryptosystem.  The totient of <em>n</em> is computed as &phi;(<em>pq</em>) = (<em>p</em>&minus;1) &times; (<em>q</em>&minus;1).  Then two keys are chosen, the encryption key <em>e</em> and the decryption key <em>d</em>, such that <em>de</em> &equiv; 1 (mod &phi;(<em>pq</em>)) and gcd(<em>e</em>, &phi;(<em>pq</em>)) = 1.  Then, given a message <em>m</em>, an integer on the range 0 &lt; <em>m</em> &lt;<em>n</em>, the message is encrypted by computing <em>m<sup>e</sup></em> (mod <em>n</em>) and the resulting cipher-text <em>c</em> is decrypted by computing <em>c<sup>d</sup></em> (mod <em>n</em>).</p>
<p>In practice, the keys are generated by selecting a bit-length <em>k</em> and and arbitrary encryption key <em>e</em>.  A longer bit-length provides more security than a shorter bit-length; a 768-bit key has recently been factored, albeit with <a href="http://eprint.iacr.org/2010/006.pdf">extreme effort</a> (about 2000 PC-years), most commercial users of RSA are probably using 1024- or 2048-bit keys these days, and high-security users (banks, military, government, criminals) are probably using 4096- or 8192-bit keys. <em>E</em> must be odd, is frequently chosen to be prime to force the condition that it is co-prime to the totient, and is generally fairly small; <em>e</em> = 2<sup>16</sup>+1 = 65537 is common.  Then the key generator chooses <em>p</em> and <em>q</em> at random, computes <em>d</em> as the modular inverse of <em>e</em>, and reports <em>n</em> and <em>d</em>.  In that way, nobody, not even the person generating the keys, knows <em>p</em> and <em>q</em>.</p>
<p>Here is a simple example from <a href="http://en.wikipedia.org/wiki/Rsa">Wikipedia</a>:  Choose <em>p</em> = 61 and <em>q</em> = 53.  Then <em>n</em> = <em>p</em>&times;<em>q</em> = 3233 and the totient &phi;(<em>pq</em>) = 60&times;52 = 3120.  Choose <em>e</em>=17 which is co-prime to 3120 since 17 is prime and 17&#8740;3120; the corresponding <em>d</em> is the inverse of 17 with respect to the modulus 3120, so <em>d</em> = 2753.  Then the message <em>m</em> = 65 is encrypted as <em>c</em> = <em>m<sup>e</sup></em> (mod <em>n</em>) = 65<sup>17</sup> (mod 3233) = 2790, and the cipher-text 2790 is decrypted as <em>m</em> = <em>c<sup>d</sup></em> (mod <em>n</em>) = 2790<sup>2753</sup> (mod 3233) = 65.</p>
<p>The standard definition of RSA cryptography is known as <a href="http://www.rsa.com/rsalabs/node.asp?id=2125">PKCS #1</a>.  It provides a method for converting a text message to a number <em>m</em> suitable for encryption, and converting it back to the original text message, but we won&#8217;t examine that algorithm today.  It is also possible to use RSA to provide non-forgeable signatures; the basic idea is that the sender encrypts a message hash with his decryption key, so the receiver can decrypt the message hash with the sender&#8217;s public key, which works because only the sender knows his private decryption key. </p>
<p>Your task is to write an RSA key generator and procedures to encrypt and decrypt messages using the RSA algorithm as described above.  When you are finished, you are welcome to <a href="/2010/11/16/rsa-cryptography/2/">read</a> or <a href="http://programmingpraxis.codepad.org/rRxeR2C9">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p>
			<p>Pages: <a href="http://programmingpraxis.com/2010/11/16/rsa-cryptography/">1</a> <a href="http://programmingpraxis.com/2010/11/16/rsa-cryptography/2/">2</a></p>		</div>

		
		<div class="entrymeta">
		<div class="postinfo">
			<div class="postedby">Posted by programmingpraxis</div>
			<div class="filedto">Filed in <a href="http://en.wordpress.com/tag/exercises/" title="View all posts in Exercises" rel="category tag">Exercises</a>  </div>
		</div>
		
		<a href="http://programmingpraxis.com/2010/11/16/rsa-cryptography/#comments" class="commentslink"  title="Comment on RSA&nbsp;Cryptography">3 Comments &#187;</a>		
		</div>
		
	</div>
	<div class="commentsblock">
			</div>
				<div class="navigation">
			<div class="alignleft"><a href="http://programmingpraxis.com/page/2/" >&laquo; Previous Entries</a></div>
			<div class="alignright"></div>
		</div>
		
		
</div>


<div id="sidebar">
<div class="sec-a">
<h2>Categories</h2>
<ul>
	<li class="cat-item cat-item-31297"><a href="http://programmingpraxis.com/category/administrivia/" title="View all posts filed under Administrivia">Administrivia</a>
</li>
	<li class="cat-item cat-item-18744"><a href="http://programmingpraxis.com/category/exercises/" title="View all posts filed under Exercises">Exercises</a>
</li>
</ul>
<h2>Archives</h2>
<ul>
 	<li><a href='http://programmingpraxis.com/2010/12/' title='December 2010'>December 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/11/' title='November 2010'>November 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/10/' title='October 2010'>October 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/09/' title='September 2010'>September 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/08/' title='August 2010'>August 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/07/' title='July 2010'>July 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/06/' title='June 2010'>June 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/05/' title='May 2010'>May 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/04/' title='April 2010'>April 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/03/' title='March 2010'>March 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/02/' title='February 2010'>February 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/01/' title='January 2010'>January 2010</a></li>
	<li><a href='http://programmingpraxis.com/2009/12/' title='December 2009'>December 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/11/' title='November 2009'>November 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/10/' title='October 2009'>October 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/09/' title='September 2009'>September 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/08/' title='August 2009'>August 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/07/' title='July 2009'>July 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/06/' title='June 2009'>June 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/05/' title='May 2009'>May 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/04/' title='April 2009'>April 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/03/' title='March 2009'>March 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/02/' title='February 2009'>February 2009</a></li>
</ul>
</div>
<div class="sec-a">
<h2>&nbsp;</h2><div id="calendar_wrap"><table id="wp-calendar" summary="Calendar">
	<caption>December 2010</caption>
	<thead>
	<tr>
		<th scope="col" title="Sunday">S</th>
		<th scope="col" title="Monday">M</th>
		<th scope="col" title="Tuesday">T</th>
		<th scope="col" title="Wednesday">W</th>
		<th scope="col" title="Thursday">T</th>
		<th scope="col" title="Friday">F</th>
		<th scope="col" title="Saturday">S</th>
	</tr>
	</thead>

	<tfoot>
	<tr>
		<td colspan="3" id="prev"><a href="http://programmingpraxis.com/2010/11/" title="View posts for November 2010">&laquo; Nov</a></td>
		<td class="pad">&nbsp;</td>
		<td colspan="3" id="next" class="pad">&nbsp;</td>
	</tr>
	</tfoot>

	<tbody>
	<tr>
		<td colspan="3" class="pad">&nbsp;</td><td>1</td><td>2</td><td><a href="http://programmingpraxis.com/2010/12/03/" title="Maximum Sum&nbsp;Subsequence">3</a></td><td>4</td>
	</tr>
	<tr>
		<td>5</td><td>6</td><td><a href="http://programmingpraxis.com/2010/12/07/" title="Ullman&#8217;s&nbsp;Puzzle">7</a></td><td>8</td><td>9</td><td><a href="http://programmingpraxis.com/2010/12/10/" title="Two Random&nbsp;Selections">10</a></td><td>11</td>
	</tr>
	<tr>
		<td>12</td><td>13</td><td><a href="http://programmingpraxis.com/2010/12/14/" title="Longest Duplicated&nbsp;Substring">14</a></td><td>15</td><td>16</td><td><a href="http://programmingpraxis.com/2010/12/17/" title="Polite&nbsp;Numbers">17</a></td><td>18</td>
	</tr>
	<tr>
		<td id="today">19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td>
	</tr>
	<tr>
		<td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td>
		<td class="pad" colspan="1">&nbsp;</td>
	</tr>
	</tbody>
	</table></div><h2>Archives</h2>		<ul>
			<li><a href='http://programmingpraxis.com/2010/12/' title='December 2010'>December 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/11/' title='November 2010'>November 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/10/' title='October 2010'>October 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/09/' title='September 2010'>September 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/08/' title='August 2010'>August 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/07/' title='July 2010'>July 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/06/' title='June 2010'>June 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/05/' title='May 2010'>May 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/04/' title='April 2010'>April 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/03/' title='March 2010'>March 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/02/' title='February 2010'>February 2010</a></li>
	<li><a href='http://programmingpraxis.com/2010/01/' title='January 2010'>January 2010</a></li>
	<li><a href='http://programmingpraxis.com/2009/12/' title='December 2009'>December 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/11/' title='November 2009'>November 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/10/' title='October 2009'>October 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/09/' title='September 2009'>September 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/08/' title='August 2009'>August 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/07/' title='July 2009'>July 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/06/' title='June 2009'>June 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/05/' title='May 2009'>May 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/04/' title='April 2009'>April 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/03/' title='March 2009'>March 2009</a></li>
	<li><a href='http://programmingpraxis.com/2009/02/' title='February 2009'>February 2009</a></li>
		</ul>
<h2>Blogroll</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://wordpress.com/">WordPress.com</a></li>
<li><a href="http://wordpress.org/">WordPress.org</a></li>

	</ul>

</div>
</div>


</div>
<div id="footer">Theme: Ambiru by <a href="http://ifelse.co.uk" rel="designer">Phu</a>. <a href="http://wordpress.com/?ref=footer" rel="generator">Blog at WordPress.com</a>. 
</div>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script type="text/javascript">_qoptions={qacct:'p-18-mFEk4J448M',labels:'language.en,type.wpcom'};</script>
<script type="text/javascript" src="http://edge.quantserve.com/quant.js"></script>
<noscript><p><img class="robots-nocontent" src="http://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=language.en%2Ctype.wpcom" style="display:none" height="1" width="1" alt="" /></p></noscript>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?n&#038;ver=MU'></script>
	<script type="text/javascript">	
	// <![CDATA[
	WPGroHo = {
		data: {},
		renderers: {},
		syncProfileData: function( hash, id ) {
			if ( !WPGroHo.data[hash] ) {
				WPGroHo.data[hash] = {};
				a = jQuery( 'div.grofile-hash-map-' + hash + ' span' ).each( function() {
					WPGroHo.data[hash][this.className] = jQuery( this ).text();
				} );
			}

			WPGroHo.appendProfileData( WPGroHo.data[hash], hash, id );
		},
		appendProfileData: function( data, hash, id ) {
			for ( var key in data ) {
				if ( jQuery.isFunction( WPGroHo.renderers[key] ) ) {
					return WPGroHo.renderers[key]( data[key], hash, id, key );
				}

				jQuery( '#' + id ).find( 'h4' ).after( jQuery( '<p class="grav-extra ' + key + '" />' ).html( data[key] ) );
			}
		}
	};
	jQuery(document).ready(function($){
		Gravatar.profile_cb = function( h, d ) {
			WPGroHo.syncProfileData( h, d );
		};
		Gravatar.attach_profiles();
	});
	// ]]>
	</script>
	<div style="display:none">
	</div>
<script type="text/javascript" src="http://b.scorecardresearch.com/beacon.js"></script><script type="text/javascript">try{COMSCORE.beacon({c1:2,c2:7518284});}catch(e){}</script><noscript><p class="robots-nocontent"><img src="http://b.scorecardresearch.com/p?cj=1c1=2&#038;c2=7518284" alt="" style="display:none" width="1" height="1" /></p></noscript><script src="http://s.stats.wordpress.com/w.js?19" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'6649073','v':'wpcom','user_id':'0','post':'0','subd':'programmingpraxis'});
ex_go({'crypt':'RDZ8LFkxbXEvL3NieHF4bFpWUE9XbTdUOFQsRHUzNzBCQltDQyUlcVZPNz1zWlV5fHNZWjZ4OC9UL2xjL3xmK2NFRWRTczVLJWh6di8zaGUsPUdBUD1ESC8mLkc1Li16ZXYmbz9sZz1sZjNOSVJwaEsxcz1FZH4ySHIsWXxJPWxweFtoaV8wYVJXUUMuKzh8c2xYVXZ6UHJnYlguPzVaZGJwN2hsanErUXxuTHx5'});
addLoadEvent(function(){linktracker_init('6649073',0);});
	</script>
</body>
</html>