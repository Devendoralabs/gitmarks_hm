<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">


<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<title>Ruby off the Rails</title>
<meta http-equiv="PICS-Label" content='(PICS-1.1 "http://www.icra.org/ratingsv02.html" l gen true r (cz 1 lz 1 nz 1 oz 1 vz 1) "http://www.rsac.org/ratingsv01.html" l gen true r (n 0 s 0 v 0 l 0) "http://www.classify.org/safesurf/" l gen true r (SS~~000 1))'/>
<link rel="schema.DC" href="http://purl.org/DC/elements/1.0/"/>
<link rel="SHORTCUT ICON" href="http://www.ibm.com/favicon.ico"/>
<meta name="Owner" content="developerWorks Content/Raleigh/IBM"/>
<meta name="DC.Language" scheme="rfc1766" content="en"/>
<meta name="IBM.Country" content="ZZ"/>
<meta name="Security" content="Public"/>
<meta name="IBM.SpecialPurpose" content="SP001"/>
<meta name="IBM.PageAttributes" content="sid=1003"/>
<meta name="Source" content="v16 Template Generator"/>
<meta name="Robots" content="index,follow"/>
<meta name="Abstract" content="Ruby on Rails is just one facet of what makes Ruby great, just like EJB is only part of the Java enterprise platform. Andrew Glover digs beneath the hype for a look at what Java developers can do with Ruby, all by itself."/>
<meta name="Description" content="Ruby on Rails is just one facet of what makes Ruby great, just like EJB is only part of the Java enterprise platform. Andrew Glover digs beneath the hype for a look at what Java developers can do with Ruby, all by itself."/>
<meta name="Keywords" content="Andrew Glover, Ruby, Rails, Java, versus, duck typing, mix-ins, alt.lang.jre, languages, scripting, programming, production, Groovy, instantiation, collections, conditionals, mix-ins, polymorphism, iteration, duck typing, ducks, dynamic, dynamically, types, typed, tttjca"/>
<meta name="DC.Date" scheme="iso8601" content="2005-12-20"/>
<meta name="DC.Type" scheme="IBM_ContentClassTaxonomy" content="CT316"/>
<meta name="DC.Subject" scheme="IBM_SubjectTaxonomy" content="TT300"/>
<meta scheme="IBM_WTMCategory" name="IBM.WTMCategory" content="SOFDCJVAZZ" />
<meta name="DC.Rights" content="© Copyright IBM Corporation 2005"/>
<meta name="IBM.Effective" scheme="W3CDTF" content="2005-12-20"/>
<meta name="title" content="Ruby off the Rails"/>

<!-- HEADER_SCRIPTS_AND_CSS_INCLUDE -->
<link href="//dw1.s81c.com/common/v16/css/all.css" media="all" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/screen.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/screen-uas.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/zz/en/screen-fonts.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/handheld.css" media="handheld" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/print.css" media="print" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/common/v16/css/overlay.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>

<!-- dW-specific CSS -->
<link href="//dw1.s81c.com/developerworks/css/dw-screen.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/developerworks/css/dw-screen-comments-ratings-signin.css" media="screen,projection" rel="stylesheet" title="www" type="text/css"/>
<link href="//dw1.s81c.com/developerworks/js/jquery/cluetip98/jquery.cluetip.css" media="screen,projection" rel="stylesheet"  title="www" type="text/css" />

<script src="//dw1.s81c.com/common/js/ibmcommon.js" type="text/javascript">//</script>
<script src="//dw1.s81c.com/common/js/dynamicnav.js" type="text/javascript">//</script>

<!-- dW functional JS -->
<script language="JavaScript" src="//dw1.s81c.com/developerworks/js/urltactic.js" type="text/javascript"></script>
<!-- Rating_START -->
<script language="JavaScript" src="//dw1.s81c.com/developerworks/js/artrating/showrating.js" type="text/javascript"></script>
<style type="text/css">
.metavalue {
  display: none;
}
</style>
<!-- Rating_END --><!-- RESERVED_HEADER_INCLUDE -->
<script language="javascript" src="//dw1.s81c.com/developerworks/js/ajax1.js" type="text/javascript"></script>
<script language="javascript" src="//dw1.s81c.com/developerworks/js/search_counter-maverick.js" type="text/javascript"></script>
<script language="javascript" src="//dw1.s81c.com/developerworks/js/request_referer_capture-maverick.js" type="text/javascript"></script>
<script language="JavaScript" type="text/javascript">
 <!--
 setDefaultQuery('');
 //-->
</script>
<script language="JavaScript" type="text/javascript">
 <!--
 function openNewWindow(url,tar,arg){window.open(url,tar,arg);}
 //-->
</script>
<!-- Include file support -->
<script language="JavaScript" type="text/javascript">
(function($) {
	jQuery.extend({
		getInc: function(u,d){
			if(u==null)return;
			jQuery.ajax({
	    		type: "GET",
			url: u,
			dataType: "text",
	        	success: function(t) {
				jQuery(d).html(t);
				ibmCommon.initShowHide(jQuery(d).children()[0]);			
			},
			async: true
			});
		}
	});
})(jQuery);
</script>
</head>

<body id="ibm-com">
<div id="ibm-top" class="ibm-landing-page">

<!-- MASTHEAD_BEGIN -->
<div class="ibm-access"><a href="#ibm-content">Skip to main content</a></div>
<div id="ibm-masthead">
<div id="ibm-logo"><a href="http://www.ibm.com/"><img height="50" src="//dw1.s81c.com/i/v16/t/ibm-logo.gif" width="110" alt="IBM®" /></a></div>
<ul id="ibm-geo"><li id="ibm-country" class="ibm-first">Country/region</li><li id="ibm-change-country">[ <a href="http://www.ibm.com/developerworks/country/">select</a> ]</li></ul>
  <form id="ibm-search-form" action="//www.ibm.com/developerworks/search/searchResults.jsp" method="get" name="form1"><input type="hidden" name="searchType" value="1"/><input type="hidden" name="searchSite" value="dW"/><p>
<span id="ibm-search-scope">
<label for="sn"><img src="//dw1.s81c.com/i/c.gif" width="1" height="1" alt="Search in:"/></label>
<select name="searchScope" id="sn">
<option value="dW" selected="selected">All of dW</option>
<option value="dW">-----------------</option>
<option value="aixunix">&nbsp;AIX and UNIX</option>
<option value="db2">&nbsp;Information Mgmt</option>
<option value="lotus">&nbsp;Lotus</option>
<option value="rdd">&nbsp;Rational</option>
<option value="tivoli">&nbsp;Tivoli</option>  
<option value="WSDD">&nbsp;WebSphere</option>
<option value="dW">-----------------</option> 
<option value="javaZ">&nbsp;Java technology</option> 
<option value="linuxZ">&nbsp;Linux</option> 
<option value="opensrcZ">&nbsp;Open source</option>
<option value="webservZ">&nbsp;SOA/Web services</option>
<option value="webarchZ">&nbsp;Web development</option>  
<option value="xmlZ">&nbsp;XML</option>
<option value="dW">-----------------</option>
<option value="forums">&nbsp;dW forums</option> 
<option value="dW">-----------------</option>
<option value="aI">University</option>
<option value="dW">-----------------</option>
<option value="aW">alphaWorks</option>
<option value="dW">-----------------</option>
<option value="all">All of IBM</option>
</select>
</span>

<label for="q"><img alt="Search for:" height="1" width="1" src="//dw1.s81c.com/i/c.gif" /></label><input type="text" name="query" maxlength="100" id="q"/><input type="submit" id="ibm-search" class="ibm-btn-search" name="Search" value="Search" /></p></form>
<div id="ibm-site-name">
<!-- IBM site name container -->
</div>
<div id="ibm-universal-nav">
<ul><li id="ibm-unav-home" class="ibm-first"><a href="http://www.ibm.com/">Home</a></li><li id="ibm-unav-solutions"><a href="http://www.ibm.com/solutions/">Solutions</a></li><li id="ibm-unav-services"><a href="http://www.ibm.com/technologyservices/">Services</a></li><li id="ibm-unav-products"><a href="http://www.ibm.com/products/">Products</a></li><li id="ibm-unav-support"><a href="http://www.ibm.com/support/">Support &amp; downloads</a></li><li id="ibm-unav-myibm"><a href="http://www.ibm.com/account/">My IBM</a></li></ul>
</div>
</div>
<!-- MASTHEAD_END -->

<div id="ibm-pcon">

<!-- CONTENT_BEGIN -->
<div id="ibm-content">

<!-- Navigation_Trail_BEGIN -->
<!-- &nbsp; -->
        <div id="ibm-content-head"><ul id="ibm-navigation-trail"><li class="ibm-first"><a href="http://www.ibm.com/developerworks/">developerWorks</a></li><li><a href="http://www.ibm.com/developerworks/java/">Java technology</a></li><li><a href="http://www.ibm.com/developerworks/views/java/library.jsp">Technical library</a></li></ul></div>
<!-- Navigation_Trail_END -->

<!-- dW_Summary Area_START -->
<div id="dw-summary-article">

<div class="dw-content-head">
<h1>Ruby off the Rails</h1><p><em>Get to know Ruby before you hop on (or off) the Rails bandwagon</em></p>
</div>

<div class="ibm-container-body ibm-two-column">

<div class="ibm-column ibm-first">
<div class="author"><a class="dwauthor" rel="#authortip1" href="#author1">Andrew Glover</a> (<a href="mailto:aglover@stelligent.com?subject=Ruby off the Rails">aglover@stelligent.com</a>), President, Stelligent Incorporated</div><div id="authortip1" class="dwauthor-onload-state ibm-no-print"><div class="position"><img src="http://www-106.ibm.com/developerworks/i/p-aglover.jpg" width="64" height="80" alt="" /></div>Andrew Glover is the President of <a href="http://www.stelligent.com/">Stelligent Incorporated</a>, a <a href="http://www.jnetdirect.com">JNetDirect</a> company. Stelligent Incorporated helps companies address software quality <i>early</i> with effective developer testing strategies and frameworks, software metric analysis and correlations, and continuous integration techniques that enable development teams and management to monitor code quality continuously. He is the co-author of <a href="http://www.amazon.com/gp/product/047144846X/104-1464220-8871162?n=283155">Java Testing Patterns</a> (Wiley, September 2004).</div>
<p></p>
<p><b>Summary:</b>&nbsp; Ruby on Rails is just one facet of what makes Ruby great, just like EJB is only part of the Java&#8482; enterprise platform. Andrew Glover digs beneath the hype for a look at what Java developers can do with Ruby, all by itself.</p>

<div id="dw-tag-content" class="ibm-no-print"></div><div id="dw-moretags-access" class="ibm-access"></div>
<p class="ibm-no-print"><div id="dw-tag-this" class="ibm-no-print"><a class="ibm-external-link" onclick="jQuery.launchTagThisWindow(); return false;" href="#">Tag this!</a></div><div id="interestShow" class="ibm-no-print"></div></p>
</div>

<div class="ibm-column ibm-second">
<p class="leading"><b>Date:</b>&nbsp; 20 Dec  2005
<br /><b>Level: </b>&nbsp;Introductory









<br />
<br /><b>Activity:</b>&nbsp; 24785 views
<br /><b>Comments:</b> &nbsp; <span id="nCmts"><img alt="" src="//dw1.s81c.com/developerworks/i/circle-preloader.gif" height="12" width="50" /><img alt="" src="//dw1.s81c.com/i/c.gif" height="14" width="1" /></span>
<!-- Rating_Area_Begin -->
<div id="art-rating-summary"></div>
<!-- Rating_Area_End -->
</p>
</div>

</div>
</div>
<!-- dW_Summary_Area_END -->

<!-- CONTENT_BODY -->
<div id="ibm-content-body">

<!-- MAIN_COLUMN_BEGIN -->
<div id="ibm-content-main">

<!-- Related_Searches_Area -->
<!-- Related_Searches_Area_Begin -->
<script type="text/javascript" language="javascript">
	     capture_referrer();
</script>

<div id="dw-related-searches-article" style="display:none">
<div class="ibm-container ibm-alternate-two">
<div class="ibm-container-body">

<!--  START : HTML FOR ARTICLE SEARCH -->
  <div id="article_results" style="display:block"></div>
<!--  END : HTML FOR ARTICLE SEARCH -->

</div>
</div>
</div>
<!-- Related_Searches_Area_End -->
<!-- MAIN_COLUMN_CONTAINER_BEGIN -->
<div class="ibm-container">

<!-- MAIN_COLUMN_CONTENT_BEGIN -->
<p>Before I can even begin this article, I need to clarify something.
First, this is not an article about Ruby on Rails. If you want to read
about Rails, articles and blogs are published weekly (maybe hourly)
extolling the manifold features of this exciting framework; see <a href="#resources">Resources</a> for a list to start from. Second, this
article does not foretell the collapse of the Java platform in the face
of <i>better</i> languages, tools, and frameworks <i>like</i> Ruby on
Rails. So this article is about neither of the subjects most commonly
associated with Ruby of late.</p>

<p>Don't get me wrong -- I think Rails is fabulous! It's amazingly
powerful and has clearly changed the face <i>and pace</i> of Web
development. My only point is that there's more to Ruby than Rails,
especially from a Java developer's perspective.</p>

<p>The specialty of Rails is Web site development; however, I don't find
myself building Web sites all that often. Most of the Web sites I work
on have <i>already</i> been built using Struts, Tapestry, or some other
technology. Primarily, when I utilize Ruby, I use it as part of a
development practice that hinges on the Java platform. So in this
article, I'll write about how to develop in Ruby if you're primarily a
Java developer. </p>

<div class="ibm-container ibm-alt-header dw-container-sidebar"><h2>In praise of the polyglot</h2><div class="ibm-container-body">

<p>If you've ever envied the ability of multilingual friends to bridge
language gaps wherever they travel or gained new appreciation for your
native language by learning a new one, then you can probably see the
advantage of being a <i>programming language polyglot</i>. Developer
polyglots travel the IT world more freely than do monolinguists (sure
that they can apply their skills in any environment), and they also tend to
better appreciate the programming language called <i>home</i>, because
among other things they know the roots from which that home is 
sprung. Isn't it time you became a polyglot?</p>
</div></div>


<p><a name="N10081"><span class="atitle">Feels so different</span></a></p>
<p>Ruby's syntax is different from that of the Java language. First, Ruby has no brackets or semicolons, and it makes types completely optional. Some might say
that Ruby's syntax is terse, and it's that way <i>with a purpose</i>: this language lets you create concise working code in short order. </p>

<p>You can see this for yourself by comparing the same classes, defined
first in the Java language and then in Ruby. I'll start with two
classes -- <code>Word</code> and <code>Definition</code> (like in a dictionary) -- in the Java
language. In the simple class diagram of Figure 1, you can see that the
two classes share a few relationships (just bear with me if all this
complexity seems contrived: it serves a purpose!):</p>

<ul>

<li>A <code>Word</code> can have a collection of synonyms
(which are instances of <code>Word</code>s). </li>

<li>A <code>Word</code> also has a collection of <code>Definition</code>s. </li>

<li>A <code>Definition</code> has an aggregation
association to a <code>Word</code>. </li>
</ul>


<br /><a name="N100BE"><b>Figure 1. A simple dictionary with words and definitions</b></a><br />
<img alt="" border="0" height="197" src="dictionary_v.gif" width="496"/>
<br />

<p><a name="N100CD"><span class="smalltitle">Class definition in the Java language</span></a></p>
<p>In Listing 1, I define the <code>Word</code> class in the Java language.
Note the relationship validation I had to do with respect to my
collection of <code>Definition</code>s and synonyms. This
is necessary because in the example (as coded), <code>Definition</code>s can be created <i>without</i> a <code>Word</code> relationship initially and <code>Word</code>s can be defined <i>without</i> <code>Definition</code>s initially, too. </p>

<br /><a name="code1"><b>Listing 1. A Word class in the Java language</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

package com.vanward.dictionary;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

public class Word {	

  private String spelling; 
  private String partOfSpeech;
  private Collection definitions;
  private Collection synonyms;

  public Word(String spelling, String partOfSpeech) {
    this.spelling = spelling;
    this.partOfSpeech = partOfSpeech;
    this.definitions = new ArrayList();
    this.synonyms = new ArrayList();
  } 

  public Word(String spelling, String partOfSpeech, 
    Collection definitions) {
      this(spelling, partOfSpeech);
      if(definitions != null){
        for(Iterator iter = definitions.iterator(); iter.hasNext();){
          this.validateRelationship((Definition)iter.next());
        }
        this.definitions = definitions;
      }		
  }

  public Word(String spelling, String partOfSpeech, 
    Collection definitions, Collection synonyms) {
      this(spelling, partOfSpeech, definitions);
      if(synonyms != null){
        this.synonyms = synonyms;
      }
  }

  private void validateRelationship(Definition def){
    if(def.getWord() == null || def.getWord() != this){
      def.setWord(this);
    }
  }

  public Collection getDefinitions() {
    return definitions;
  }	

  public void addDefinition(Definition definition) {
    this.validateRelationship(definition);		
    this.definitions.add(definition);
  }

  public String getPartOfSpeech() {
    return partOfSpeech;
  }

  public void setPartOfSpeech(String partOfSpeech) {
    this.partOfSpeech = partOfSpeech;
  }

  public String getSpelling() {
    return spelling;
  }

  public void setSpelling(String spelling) {
    this.spelling = spelling;
  }

  public Collection getSynonyms() {
    return synonyms;
  }

  public void addSynonym(Word synonym) {
    this.synonyms.add(synonym);
  }	
}
</pre></td></tr></table><br />

<p>The <code>Word</code>
class in Listing 1 is fairly simple -- it's a JavaBean with a constructor chain
allowing users to create <code>Word</code>s with various
properties set. Also note that both its <code>synonyms</code> and <code>definitions</code>
properties are <i>intended</i> to be read-only (that is, there is no setter
for them). You can only <i>add</i> an instance of a <code>Definition</code> or another <code>Word</code> for a synonym. </p>

<p>In Listing 2, you see the related <code>Definition</code> class, which is similar to the <code>Word</code> class in that its <code>exampleSentences</code> property doesn't have a
corresponding <code>set()</code> method: </p>

<br /><a name="code2"><b>Listing 2. A Definition class in the Java language</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

package com.vanward.dictionary;

import java.util.Collection;

public class Definition {

  private Word word;
  private String definition;
  private Collection exampleSentences;

  public Definition(String definition){
    this.definition = definition;
	this.exampleSentences = new ArrayList();
  }
  
  public Definition(String definition, Word word) {			
    this(definition);
    this.word = word;
  }

  public Definition(String definition, Word word, 
    Collection exampleSentences) {
      this(definition, word);
      if(exampleSentences != null){
        this.exampleSentences = exampleSentences;
      }
  }

  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }

  public Collection getExampleSentences() {
    return exampleSentences;
  }

  public void addExampleSentence(String exampleSentence) {
    this.exampleSentences.add(exampleSentence);
  }

  public Word getWord() {
    return word;
  }
  
  public void setWord(Word word) {
    this.word = word;
  }
}
</pre></td></tr></table><br />

<p><a name="N1013C"><span class="smalltitle">Class definition ala Ruby</span></a></p>
<p>In Listing 3, you can see the same two classes defined in Ruby. Listing 3 <i>does</i> look quite different, doesn't it?</p>

<br /><a name="code3"><b>Listing 3. The same classes in Ruby</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

module Dictionary

  class Word

    attr_reader :spelling, :part_of_speech, :definitions, :synonyms
    attr_writer :spelling, :part_of_speech

    def initialize(spelling, part_of_speech, definitions = [], synonyms = [])
      @spelling = spelling
      @part_of_speech = part_of_speech      
      definitions.each{ |idef| idef.word = self}       
      @definitions = definitions      
      @synonyms = synonyms
    end 

    def add_definition(definition)
      definition.word = self if definition.word != self
      @definitions &lt;&lt; definition    
    end

    def add_synonym(synonym)
      @synonyms &lt;&lt; synonym
    end

  end


  class Definition

    attr_reader :definition, :word, :example_sentences
    attr_writer :definition, :word

    def initialize(definition, word = nil, example_sentences = [])       
      @definition = definition
      @word = word
      @example_sentences = example_sentences
    end

  end

end
</pre></td></tr></table><br />

<p>If there's one thing you'll notice from Listing 3, it's that Ruby's
syntax is quite terse. But don't let its brevity fool you -- there's a lot going on in that code! First, both classes are defined in a
<i>module</i>, which is essentially a <code>package</code>
in the Java language. Moreover, I was able to define the classes in one
file -- not two -- as required in the Java language. You'll also note
that Ruby's constructors are named <code>initialize</code>, whereas in the Java language,
constructors are named using the class name.</p>

<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N10160"><span class="atitle">Fast moving objects</span></a></p>
<p>Creating new object instances is different in Ruby. Rather
than the <code>new ObjectInstance()</code> syntax used in
Java code, Ruby actually supports calling a <code>new</code> method on an object, which internally calls the
<code>initialize</code> method. In Listing 4, you can see how
I create an  instance of a <code>Word</code> and some
corresponding <code>Definition</code>s in Ruby:</p>

<br /><a name="code4"><b>Listing 4. Creating a new object 
instance in Ruby</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

require "dictionary"

happy_wrd = Dictionary::Word.new("ebullient", "adjective")
		
defin_one = Dictionary::Definition.new("Overflowing with enthusiasm")
defin_two = Dictionary::Definition.new("Boiling up or over")

happy_wrd.add_definition(defin_one)
happy_wrd.add_definition(defin_two)
</pre></td></tr></table><br />

<p>In Listing 4, I "imported" the <code>dictionary</code> module with Ruby's <code>require</code> method (which can be found in the <code>Kernel</code> class). I then proceeded to create a new
instance of a <code>Word</code> (<i>ebullient</i>) via the
<code>Object.new</code> syntax. Even though I imported
the <code>dictionary</code> module, I still need to qualify
object instances, hence the <code>Dictionary::Word</code>
qualification. I could have also dropped the <code>Dictionary::</code> prefix code if I had written <code>include Dictionary</code> after the <code>require</code> clause. </p>


<p><a name="N101B5"><span class="smalltitle">Default parameter
values</span></a></p>
<p>Did you notice how I <i>didn't</i> specify a collection of <code>Definition</code>s or synonyms when I created the <code>happy_wrd</code> instance shown in Listing 4? I only
passed in values for <code>spelling</code> and <code>part_of_speech</code>. I got away with that omission
because Ruby supports default values for parameters. In <code>Word</code>'s <code>initialize</code> method
defined in Listing 3, I've specified <code>definitions =
[]</code> and <code>synonyms = []</code> as parameters,
which basically says to Ruby <i>if they are not included by the caller,
then default them to empty collections</i>.</p>

<p>Note also in <a href="#code3">Listing 3</a> how <code>Definition</code>'s <code>initialize</code>
method supports default parameters by setting <code>example_sentences</code> to an empty collection (<code>word</code>'s default value of <code>nil</code> is Ruby's version of <code>null</code> in the Java language). Back in <a href="#code1">Listing 1</a>, I had to create <i>three constructors</i> to get
that same flexibility from the Java language! </p>

<p>Now watch as I create a different <code>Word</code>
instance with my flexible <code>initialize()</code> method,
in Listing 5:</p>

<br /><a name="code5"><b>Listing 5. Flexibility is the name of the game!</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

require "dictionary"

defin = Dictionary::Definition.new("Skill in or performance of tricks")
defin_two = Dictionary::Definition.new("sleight of hand")
        
defs = [defin, defin_two]
        
tricky_wrd = Dictionary::Word.new("prestidigitation", "noun", defs)
</pre></td></tr></table><br />

<p>After I define two <code>Definition</code>s, I add them
to a collection (which looks just like an array in the Java language). I then pass that collection to <code>Word</code>'s <code>initialize()</code> method.</p>

<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N1022E"><span class="atitle">Collections done right</span></a></p>
<p>Ruby's collections handling is amazingly simple too -- see the <code>add_definition</code> and <code>add_synonym</code> methods in the <code>Word</code> class? The <code>&lt;&lt;</code>
syntax is overloaded to mean <code>add</code>. If you look
back to the <code>Definition</code> class in <a href="#code2">Listing 2</a>, you'll see that the corresponding code in
the Java language is a much bigger mouthful: <code>this.exampleSentences.add(exampleSentence)</code>.</p>

<div class="ibm-container ibm-alt-header dw-container-sidebar"><h2>Slick squares</h2><div class="ibm-container-body">

Speaking of collections, isn't Ruby's <code>[]</code>
syntax slick? If you're a Groovy user, it should look familiar to you as well.
</div></div>

<p>Ruby's collection handling is extremely concise. In Listing 6, you can
see how easy it is to combine collections (using the <code>+</code> operator) and access members (via <code>[</code><i>position</i><code>]</code>) --
and do so <i>without</i> the fear of things blowing up on you!</p>

<br /><a name="code6"><b>Listing 6. Shorthand collections</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

require "dictionary"

idef_1 = Dictionary::Definition.new("Sad and lonely because deserted")
idef_2 = Dictionary::Definition.new("Bereft; forsaken")

defs = [idef_1, idef_2]

idef_3 = Dictionary::Definition.new("Wretched in appearance or condition")
idef_4 = Dictionary::Definition.new("Almost hopeless; desperate")

defs_2 =  [idef_3, idef_4]

n_def = defs + defs_2  #n_def is now [idef_1, idef_2, idef_3, idef_4]

n_def[1]    # produces idef_2
n_def[9]    # produces nil
n_def[1..2] # produces [idef_2, idef_3]
</pre></td></tr></table><br />

<p>The code in Listing 6 only scratches the surface of Ruby's collection handling!</p>

<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N10285"><span class="atitle">RubyBeans?</span></a></p>
<p>You may have noticed in both classes of <a href="#code3">Listing 3</a> that Ruby supports a shortcut notation for defining properties: <code>attr_reader</code> and <code>attr_writer</code>. Because I used this notation, I can <i>set</i> and <i>get</i> corresponding properties in my <code>Word</code> class, as shown in Listing 7:</p>

<br /><a name="code7"><b>Listing 7.  attr_reader and attr_writer in action</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

require "dictionary"

wrd = Dictionary::Word.new("turpitude", "Noun")

wrd.part_of_speech  # "Noun"
wrd.spelling        # "turpitude"

wrd.spelling = "bibulous"

wrd.spelling        # "bibulous"

syns = [Dictionary::Word.new("absorptive", "Adjective"), 
  Dictionary::Word.new("imbibing", "Noun") ]

# Danger! 
wrd.synonyms = syns = syns #Exception: undefined method `synonyms='...
</pre></td></tr></table><br />

<p>Both <code>attr_reader</code> and <code>attr_writer</code> are not keywords but are actual
methods in Ruby (found in the <code>Module</code>
class) that take symbols as arguments. A <i>symbol</i> is
any variable that is preceded by a colon (<code>:</code>),
and what's even neater is that symbols themselves are objects!</p>

<p>Note that because I made <code>synonyms</code>
read-only in <a href="#code3">Listing 3</a>, Ruby denied my attempt in
the last line of code in Listing 7. Also, I could have written the
property declaration code using the <code>attr_accessor</code> method to indicate that a property
was both readable <i>and</i> writeable.</p>

<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N102D6"><span class="atitle">Watch Ruby iterate</span></a></p>
<p>Flexible iteration is one of the joys of coding in Ruby. Look at Listing 8, where I've singled out <code>Word</code>'s <code>initialize()</code> method:
</p>

<br /><a name="code8"><b>Listing 8. Closures are handy</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

def initialize(spelling, part_of_speech, definitions = [], synonyms = [])
  @spelling = spelling
  @part_of_speech = part_of_speech      
  definitions.each{ |idef| idef.word = self}       
  @definitions = definitions      
  @synonyms = synonyms
end 
</pre></td></tr></table><br />

<p>Something different is going on in the fourth line of Listing 8, for sure. For starters, I used brackets when I called the <code>each</code> method on the <code>definitions</code> instance. The <code>each</code> method is essentially like an <code>Iterator</code> in the Java language, but it's a bit more concise. In Listing 8, the <code>each</code> method handles the details of iteration and allows the caller to focus on the desired effect. In this case, I passed in a block stating the following: <i>for each value in the collection</i> -- that is, <code>idef</code>, which is an instance of <code>Definition</code> -- <i>set its </i><code>word</code><i> property to</i> <code> self</code> (which is the same as <code>this</code> in the Java language).</p>

<p>Listing 9 shows essentially the same line of code in the Java language (taken from <code>Word</code>'s constructor shown in <a href="#code1">Listing 1</a>):</p>

<br /><a name="code9"><b>Listing 9. Ruby's each method is like Java's Iterator</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

for(Iterator iter = definitions.iterator(); iter.hasNext();){
  this.validateRelationship((Definition)iter.next());
}
</pre></td></tr></table><br />


<p><a name="N10338"><span class="smalltitle">Yes, yes, yes ...!</span></a></p>
<p>Let me acknowledge right now that Java 5's generics and new <code>for</code> loop syntax is <i>much, much nicer</i> than what's shown in Listing 9. Ruby <i>does</i> support Java's familiar looping constructs such as <code>for</code> and <code>while</code>; however, in practice, they are rarely utilized since most everything in Ruby supports the notion of iteration. For example, in Listing 10, look how easy it is to iterate over the contents of a file:</p>

<br /><a name="code10"><b>Listing 10. Iteration made simple</b></a><br />
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">
count = 0
File.open("./src/dictionary.rb").each { |loc| puts "#{count += 1}:" + loc }
</pre></td></tr></table><br />

<p>Any class in Ruby that supports the <code>each</code> method (like <code>File</code>) lets you iterate this way. By the way, Ruby's <code>puts</code> method (seen in Listing 10) is the same as  the Java language's <code>System.out.println</code>.</p>


<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N10371"><span class="atitle">Conditionally yours</span></a></p>
<p>While I'm on the subject of looping, let's take a closer look at a conditional statement found in the <code>Word</code> class
of <a href="#code3">Listing 3</a>. In Listing 11, I've singled out the <code>add_definition()</code> method:</p>

<br /><a name="code11"><b>Listing 11. Nifty conditionals</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

def add_definition(definition)
  definition.word = self if definition.word != self
  @definitions &lt;&lt; definition    
end
</pre></td></tr></table><br />

<p>Look closely at the second line of code. See how the <code>if</code> statement follows the expression? You certainly <i>could</i> write it normal-style, as shown in Listing 12, but isn't Listing 11 nicer? </p>

<br /><a name="code12"><b>Listing 12. More than one way to skin a conditional</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

def add_definition(definition)
  if definition.word != self
    definition.word = self 
  end
  @definitions &lt;&lt; definition    
end
</pre></td></tr></table><br />

<p>In the Java language, if the body of a conditional is a single line, you can drop the brackets. In Ruby, if the body of a conditional is a single line, you can write expressions like the one shown in <a href="#code11">Listing 11</a>. Also note that the same conditional could also be written as <code>definition.word = self unless definition.word == self</code>, which uses Ruby's <code>unless</code> feature. Nice, eh?
</p>

<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N103B3"><span class="atitle">Ducks love Ruby!</span></a></p>
<p> Because Ruby is a dynamically typed language, it doesn't require interfaces. Mind you, the power of interfaces is completely present in Ruby, but in a much more flexible manner. Affectionately known as "duck typing" (i.e., if it waddles like a duck and quacks like one, then it must be a duck!), polymorphism in Ruby is just a matter of matching method names. Let's compare polymorphism in Ruby and the Java language.</p>

<p><a name="N103BC"><span class="smalltitle">Java-morphism</span></a></p>
<p>One way to capture the power of polymorphism in the Java language is to
declare an interface type and have other types implement that interface.
You can then refer to implementing objects as that interface type and
call whatever methods exist on that interface. As an example, in Listing 13, I've defined a simple interface called <code>Filter</code>: </p>

<br /><a name="code13"><b>Listing 13. A simple Java interface</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

package com.vanward.filter;

public interface Filter {  
  boolean applyFilter(String value);
}
</pre></td></tr></table><br />

<p>In Listing 14, I've defined an implementing class, called <code>RegexPackageFilter</code>, that applies a regular expression for filtering purposes: </p>

<br /><a name="code14"><b>Listing 14. RegexPackageFilter implements Filter</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

package com.vanward.filter.impl;

import org.apache.oro.text.regex.MalformedPatternException;
import org.apache.oro.text.regex.Pattern;
import org.apache.oro.text.regex.PatternCompiler;
import org.apache.oro.text.regex.PatternMatcher;
import org.apache.oro.text.regex.Perl5Compiler;
import org.apache.oro.text.regex.Perl5Matcher;

import com.vanward.filter.Filter;

public class RegexPackageFilter implements Filter {
  private String filterExpression;
  private PatternCompiler compiler;
  private PatternMatcher matcher;

  public RegexPackageFilter() {   
    this.compiler = new Perl5Compiler();
    this.matcher = new Perl5Matcher();
  }

  public RegexPackageFilter(final String filterExpression){
    this();
    this.filterExpression = filterExpression;
  }

  public boolean applyFilter(final String value) {
    try{		
      Pattern pattrn = this.getPattern();
      return this.matcher.contains(value, pattrn);
     }catch(MalformedPatternException e){
       throw new RuntimeException("Regular Expression was uncompilable " +
	      e.getMessage());
     }
  }  
  
  private Pattern getPattern() throws MalformedPatternException{
    return compiler.compile(this.filterExpression);		
  }
}
</pre></td></tr></table><br />

<p>Now, imagine that there are multiple implementations of the <code>Filter</code> interface (such as the <code>RegexPackageFilter</code>, a <code>ClassInclusionFilter</code> type, and perhaps a <code>SimplePackageFilter</code> type). To maximize flexibility in an application, other objects can now refer to the interface type (<code>Filter</code>) and not the implementers, as shown in Listing 15: </p>

<br /><a name="code15"><b>Listing 15. Polymorphism is so beautiful ...</b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

private boolean applyFilters(final String value, final Filter[] filters){
  boolean passed = false;
  for(int x = 0; (x &lt; filters.length &amp;&amp; !passed); x++){
    passed = filters[x].applyFilter(value);
  }
  return passed;
}
</pre></td></tr></table><br />

<p><a name="N10405"><span class="smalltitle">Ruby-morphism</span></a></p>
<p>In Ruby, interfaces don't matter! So long as method names match, you have polymorphism. Watch.</p>

<p>In Listing 16, I've recreated the Java <code>Filter</code> types in Ruby. Note how each class isn't related (other than that they share the same method <code>apply_filter</code>). <i>Yes, these two classes beg to be refactored into extending a base <code>Filter</code> class; however, I want to show polymorphism in action </i>without<i> the classes sharing a type.</i></p>

<br /><a name="code16"><b>Listing 16. Filter me, Ruby! </b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

class RegexFilter

  attr_reader :fltr_exprs

  def initialize(fltr_exprs)
    @fltr_exprs = fltr_exprs      
  end 

  def apply_filter(value)
    value =~ @fltr_exprs
  end
end


class SimpleFilter

  attr_reader :fltr_exprs

  def initialize(fltr_exprs)
    @fltr_exprs = fltr_exprs      
  end 

  def apply_filter(value)
    value.include?(@fltr_exprs)
  end
end
</pre></td></tr></table><br />

<p>Note how in Listing 16, I can create a regular expression matcher in <code>RegexFilter</code>'s <code>apply_filter()</code> method via the <code>=~</code> syntax. (If you're a Groovy user,
you should be smiling right about now, because Listing 16 shows how heavily Groovy has been influenced by Ruby!)</p>

<p><a name="N1043B"><span class="smalltitle">Duck typing in action</span></a></p>
<p>In Listing 17, I've used Ruby's <code>Test::Unit</code> (which is like Java's JUnit) to demonstrate duck typing in action. Making an automated test in Ruby, by the way, is as easy as extending <code>Test::Unit</code> and adding methods that start with <code>test</code>. Similar to JUnit, right?</p>

<br /><a name="code17"><b>Listing 17. Filtering Ducks! </b></a><br /><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td class="code-outline"><pre class="displaycode">

require "test/unit"
require "filters"

class FiltersTest &lt; Test::Unit::TestCase
  
  def test_filters
    fltrs = [SimpleFilter.new("oo"), RegexFilter.new(/Go+gle/)]     
    
    fltrs.each{ | fltr | 
      assert(fltr.apply_filter("I love to Goooogle"))
    }

  end 

end
</pre></td></tr></table><br />

<p>Notice how in the <code>test_filters()</code> method,
I've created a collection containing my two classes <code>SimpleFilter</code> and <code>RegexFilter</code>. These classes do not share a common
base class, yet when I iterate over the collection, I can easily call the
<code>apply_filter()</code> method. </p>

<p>Also note how easily Ruby supports regular expressions. To create
one, you simply use the <code>/</code><i>regex</i><code>/</code> syntax. Hence, my regular expression in Listing
17's <code>RegexFilter</code> is a capital <i>G</i>
followed by one or more <i>o</i>'s followed by <i>gle</i>. </p>


<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N10486"><span class="atitle">Mix-in it up</span></a></p>
<p> While Ruby doesn't have interfaces, it does have <i>mix-ins</i>. You can
think of mix-ins as multiple inheritance <i>without</i> the multiple-inheritance headaches. Mix-ins are modules (which cannot be
instantiated) that contain methods that a class can chose to include.
Those module methods then become instance methods of the including
class. </p>

<p>In JUnit, for example, the <code>Assertion</code> class
is a concrete class with a boatload of <code>static</code> assert methods, which the all-too-familiar
<code>TestCase</code> class extends. Hence, any
implementing class of <code>TestCase</code> can refer to
an assert method within its own defined methods. </p>

<p>Ruby's unit testing framework is a bit different. Rather than defining an <code>Assertion</code> class, it defines an <code>Assertions</code> <i> module</i>. This module defines a cornucopia of assertion methods, but rather than being extended, Ruby's <code>TestCase</code> class includes the <code>assertion</code> as a mix-in. Therefore, all those assert methods are now instance methods on <code>TestCase</code>, as you can 
see back in <a href="#code17">Listing 17</a>. </p>


<div class="ibm-alternate-rule"><hr/></div><p class="ibm-ind-link ibm-back-to-top"><a href="#ibm-pcon" class="ibm-anchor-up-link">Back to top</a></p><p><a name="N104C6"><span class="atitle">In conclusion</span></a></p>
<p>As you've seen, Ruby's syntax is quite different from that of the Java language, but it's amazingly easy to pick up. Moreover, some things are just plain easier to do in Ruby than they are in the Java language. </p>

<p>The nice thing about learning new languages, as programming language
polyglots will tell you, is that nothing says they can't play together.
Being able to code in multiple languages will make you more versatile in
the face of both humdrum programming tasks and more complicated ones. It
will also greatly increase your appreciation for the programming
language you call home.</p>

<p>As I said at the beginning of this article, I'm mainly a Java
developer, but I've found plenty of ways to include Ruby (and Groovy,
and Jython ...) in my bag of tricks too. And I've been able to do it
without using Rails! If you've written off Ruby on Rails because you
<i>don't actually need to</i> build a shopping cart application in just four hours, take a closer look at Ruby on its own. I think you'll like what you see.</p>

<!-- CMA ID: 100266 --> <!-- Site ID: 1 --><!--XSLT stylesheet used to transform this file: dw-document-html-6.0.xsl-->
<br />
<p><a name="resources"><span class="atitle">Resources</span></a></p><p><b>Learn</b></p><ul><li>"<a href="http://www.ibm.com/developerworks/edu/os-dw-os-ruby1-i.html">Test-first Ruby programming</a>" (Pat Eyler, developerWorks, May 2005): A tutorial introduction to unit testing with Ruby's Test::Unit library.<br /><br /></li><li>"<a href="http://www.ibm.com/developerworks/opensource/library/os-rubyeclipse/">Using the Ruby Development Tools plug-in for Eclipse</a>" (Neal Ford, developerWorks, October 2005): One way to bridge the difference between the Java platform and Ruby.<br /><br /></li><li>"<a href="http://www.ibm.com/developerworks/linux/library/l-rubyrails/">Fast-track your Web apps with Ruby on Rails</a>" (David Mertz, developerWorks, June 2005): An inside-out look at the little platform that could.<br /><br /></li><li>"<a href="http://www.ibm.com/developerworks/java/library/j-alj09084/">alt.lang.jre: Take a shine to JRuby</a>" (Michael Squillace and Barry Feigenbaum, developerWorks, September 2004): For the OO strength of Smalltalk, the expressiveness of Perl, and the flexibility of the Java class libraries, try JRuby!<br /><br /></li><li><i><a href="http://www.rubycentral.com/book/">Programming Ruby: The Pragmatic Programmer's Guide</a></i> (David Thomas and Andrew Hunt; Addison-Wesley, 2001): An online version of the now famous pick-axe book.<br /><br /></li><li><a href="http://onestepback.org/articles/10things/">Ten things every Java programmer should know about Ruby</a> (Jim Weirich, O'Reilly Open Source Convention, 2005): What matters about Ruby, from a Java developer's perspective.<br /><br /></li><li><a href="http://www.ibm.com/developerworks/views/java/libraryview.jsp?search_by=practically+groovy:">The Practically Groovy series</a> (Andrew Glover, developerWorks): Learn all about Groovy -- a Ruby-inspired language for the Java platform.<br /><br /></li><li><a href="http://www.ibm.com/developerworks/java/">The Java technology zone</a>: Hundreds of articles about every aspect of Java programming.<br /><br /></li></ul><p><b>Get products and technologies</b></p><ul><li><a href="http://www.ruby-lang.org/en/">The Ruby home page</a>: Download Ruby.<br /><br /></li></ul><p><b>Discuss</b></p><ul><li><a href="http://www.ibm.com/developerworks/blogs/">developerWorks
blogs</a>: Get involved in the developerWorks community!<br /><br /></li></ul>
<p><a name="author"><span class="atitle">About the author</span></a></p><div class="ibm-container ibm-portrait-module ibm-alternate-two"><div class="ibm-container-body"><img src="http://www-106.ibm.com/developerworks/i/p-aglover.jpg" width="64" height="80" alt="Andrew Glover" /><p><a name="author1"></a>Andrew Glover is the President of <a href="http://www.stelligent.com/">Stelligent Incorporated</a>, a <a href="http://www.jnetdirect.com">JNetDirect</a> company. Stelligent Incorporated helps companies address software quality <i>early</i> with effective developer testing strategies and frameworks, software metric analysis and correlations, and continuous integration techniques that enable development teams and management to monitor code quality continuously. He is the co-author of <a href="http://www.amazon.com/gp/product/047144846X/104-1464220-8871162?n=283155">Java Testing Patterns</a> (Wiley, September 2004).</p></div></div>
<!-- MAIN_COLUMN_CONTENT_END -->

<!-- OVERLAYS_START -->
<!-- Report_Abuse_Start -->
<div class="ibm-common-overlay ibm-no-print" id="reportabuseoverlay">
   <div class="ibm-head"><p><a class="ibm-common-overlay-close" href="#">Close [x]</a></p></div>
   <div class="ibm-body">
      <div class="ibm-main">
         <a class="ibm-access" name="reportabuseoverlay">Report abuse help</a>   
         <div class="ibm-title"><h1>Report abuse</h1></div>
         <div class="ibm-container ibm-alternate">
            <p><strong>Thank you.</strong>  This entry has been flagged for moderator attention.</p>
            <div class="ibm-overlay-rule"><hr /></div>
            <div class="ibm-buttons-row">
               <input type="button" onclick="ibmCommon.Overlays.hide('reportabuseoverlay');return false;" class="ibm-btn-cancel-sec dw-btn-cancel-sec" name="ibm-cancel" value="Close" />
            </div>
         </div>
      </div> 
   </div>
<div class="ibm-footer"></div>
</div>
<!-- Report_Abuse_Error_Start -->
<div class="ibm-common-overlay ibm-no-print" id="reportabuseoverlayerror">
   <div class="ibm-head"><p><a class="ibm-common-overlay-close" href="#">Close [x]</a></p></div>
   <div class="ibm-body">
      <div class="ibm-main">
         <a class="ibm-access" name="reportabuseoverlayerror">Report abuse help</a>   
         <div class="ibm-title"><h1>Report abuse</h1></div>
         <div class="ibm-container ibm-alternate">
            <p class="ibm-ind-error"><strong>Report abuse submission failed.  Please try again later.</strong></p>
            <div class="ibm-overlay-rule"><hr /></div>
            <div class="ibm-buttons-row">
               <input type="button" onclick="ibmCommon.Overlays.hide('reportabuseoverlayerror');return false;" class="ibm-btn-cancel-sec dw-btn-cancel-sec" name="ibm-cancel" value="Close" />
            </div>
         </div>
      </div> 
   </div>
<div class="ibm-footer"></div>
</div>
<!-- Sign in OVERLAY STARTS HERE --> 
<div id="fdiv"></div>
<div class="ibm-common-overlay" id="signin_overlay">
<div class="ibm-head">
<p><a class="ibm-common-overlay-close" href="#" onclick="clearForm();">Close [x]</a></p>
</div>
<div class="ibm-body">
<div class="ibm-main">
<div class="ibm-title ibm-subtitle">
<h1>developerWorks: Sign in</h1>
<div id="ibm-overlay-error-signin" class="no-display"></div>
</div>

<div class="ibm-container ibm-alternate ibm-buttons-last">
<div class="ibm-container-body">
<p class="ibm-overlay-intro">If you do not have an IBM ID and password, <a href="#" onclick="(function () {window.location='/developerworks/dwwi/DWAuthRouter?m=reg&amp;d='+encodeURIComponent(location.href);})();">register here</a>.</p>
<form class="ibm-column-form" id="sFormId" action="" method="post" name="sForm" onsubmit="return false;">
<p><label for="ibmid">IBM ID:</label><span><input name="ibm-id" id="ibmid" size="25" value="" class="required" type="text" onkeypress="handleEP(event,this.form);" /><br /><a class="ibm-forward-link" href="/developerworks/dwwi/jsp/WSHelp.jsp?lang=en_US">Forgot your IBM ID?</a></span>   
</p> 
<p><label for="password">Password:</label><span><input name="password" id="password" size="25" value="" class="required" type="password" onkeypress="handleEP(event,this.form);" /><br /><a class="ibm-forward-link" href="#" onclick="(function () {window.location='https://www.ibm.com/account/profile?page=forgot&amp;lang=en_US&amp;appname=ibm&amp;required=null&amp;d='+encodeURIComponent(getAuthUrl())+'%3Fm%3Dloginpage%26lang%3Den_US%26d%3D'+encodeURIComponent(location.href);})();">Forgot your password?</a><br /><a class="ibm-forward-link" href="#" onclick="(function () {window.location='https://www.ibm.com/account/profile?page=chpw&amp;lang=en_US&amp;appname=ibm&amp;required=null&amp;d='+encodeURIComponent(location.href);})();">Change your password?</a></span></p> 
<p class="no-bottom-padding"> 
   <label for="AfterSignIn">After sign in:</label> 
   <span>

      <select name="SignInAction" id="AfterSignIn">
          <option value="">Stay on the current page</option>
          <option value="/developerworks/mydeveloperworks/profiles/html/myProfileView.do">Go to My developerWorks profile</option>
          <option value="/developerworks/mydeveloperworks/homepage/">Go to My developerWorks homepage</option>
      </select>
   </span>
</p>
<div class="ibm-overlay-rule"><hr /></div>
<p>By clicking <strong>Submit</strong>, you agree to the developerWorks <a href="/developerworks/mydeveloperworks/terms?lang=en">terms of use</a>.</p>
<div class="ibm-buttons-row">
   <p><input class="ibm-btn-arrow-pri" name="ibm-submit" value="Submit" onclick="signin();return false;" type="button" /><span class="ibm-sep">&nbsp;</span>
<input value="Cancel" type="button" name="ibm-cancel" class="ibm-btn-cancel-sec" onclick="clearForm();ibmCommon.Overlays.hide('signin_overlay');return false;"/></p>
</div>
</form>
<div class="ibm-overlay-rule"><hr /></div>
<p>The first time you sign into developerWorks, a My developerWorks profile is created for you. This profile includes the first name, last name, and display name contained in the profile you created when you registered with My developerWorks. Selected information in your My developerWorks profile is displayed to the public, but you may edit the information at any time. Your first name, last name (unless you choose to hide them), and display name will accompany the content that you post. </p>
<div class="dw-overlay-legal"><p>All information submitted is secure.</p></div>
</div>
</div>
</div>
</div>
<div class="ibm-footer"></div>
</div>
<!-- Sign in OVERLAY ENDS HERE --> 
 

<!-- Display name OVERLAY STARTS HERE --> 
<div class="ibm-common-overlay" id="displayname_overlay">
<div class="ibm-head">
<p><a class="ibm-common-overlay-close" href="#" onclick="clearForm();">Close [x]</a></p>
</div>
<div class="ibm-body">
<div class="ibm-main">
<div class="ibm-title ibm-subtitle">
<h1>Choose your display name</h1>
<div id="ibm-overlay-error-dname" class="no-display"></div>
</div>
<div class="ibm-container ibm-alternate ibm-buttons-last">
<div class="ibm-container-body">
<p class="ibm-overlay-intro">The first time you sign in to developerWorks a profile is created for you, so you need to choose a display name.  Your display name accompanies the content you post on developerWorks.</p>

<form id="dFormId" method="post" action="" name="dForm" onsubmit="return false;" class="ibm-column-form">
<p><label for="displayname">Display name:</label><span><input name="displayname" id="displayname" size="25" value="" type="text" onkeypress="handleEP(event,this.form);" /></span><span class="ibm-form-note">(Must be between 3 &ndash; 31 characters.)</span>
</p>
<p><strong>Note:</strong>  Please choose a display name between 3-31 characters. Your display name must be unique in the developerWorks community and should not be your email for privacy reasons.</p>
<div class="ibm-overlay-rule"><hr />
</div>
<p>By clicking Submit, you agree to the developerWorks <a href="/developerworks/mydeveloperworks/terms?lang=en">terms of use</a>.</p>
<div class="ibm-buttons-row">
   <p><input class="ibm-btn-arrow-pri" name="ibm-submit" value="Submit" onclick="signin();return false;" type="button" /><span class="ibm-sep">&nbsp;</span>
<input value="Cancel" type="button" name="ibm-cancel" class="ibm-btn-cancel-sec" onclick="clearForm();ibmCommon.Overlays.hide('displayname_overlay');return false;" /></p>
</div>
</form>
<div class="ibm-overlay-rule"><hr /></div>
<div class="dw-overlay-legal"><p>All information submitted is secure.</p></div>
</div>
</div>
</div>
</div>
<div class="ibm-footer"></div>
</div>
<!-- Display name OVERLAY ENDS HERE -->
<!-- OVERLAYS_END -->

<!-- RATINGS START -->
<p class="ibm-no-print"><span class="atitle"><a name="iratings">Rate this article</a></span></p>
<input id="art-rating" name="ratinga" type="hidden" value="0"/><div id="art-rating-module"></div>
<script language="JavaScript" type="text/javascript">
// <![CDATA[
   // widget div id and article id as args
   window.artRating.init('art-rating-module','art-rating-summary');
// ]]>
</script>
<!-- RATINGS END -->

<!-- INLINE_COMMENTS_START -->
<p class="ibm-no-print"><span class="atitle"><a name="icomments">Comments</a></span></p>
<script language="JavaScript" src="//dw1.s81c.com/developerworks/js/showcomments.js" type="text/javascript">//</script>
<div id="threadShow"></div>
<script language="JavaScript" type="text/javascript">
// <![CDATA[
 jQuery('threadShow').showComments('95%',5,'nCmts','icomments');
// ]]>
</script>
<!-- INLINE_COMMENTS_END -->

<p class="ibm-ind-link ibm-back-to-top"><a class="ibm-anchor-up-link" href="#ibm-pcon">Back to top</a></p>
<p><a href="http://www.ibm.com/developerworks/ibm/trademarks/">Trademarks</a> &nbsp;|&nbsp; <a href="https://www.ibm.com/developerworks/mydeveloperworks/terms/">My developerWorks terms and conditions</a></p>

<!-- Overlays -->
<!-- Zone/Leaf_Interest_Overlay_Start -->
<div class="ibm-common-overlay ibm-no-print" id="dwmyinterestadd">
<div class="ibm-head"><p><a class="ibm-common-overlay-close" href="#close">Close [x]</a></p></div>
<div class="ibm-body">
<div class="ibm-main">
<a class="ibm-access" name="dwmyinterestaddhelp">Help: Update or add to My dW interests</a>   
<div class="ibm-title"><h1>What's this?</h1></div>
<div class="ibm-container ibm-alternate">
<p>This little timesaver lets you update your My developerWorks profile with just one click!  The general subject of this content (AIX and UNIX, Information Management, Lotus, Rational, Tivoli, WebSphere, Java, Linux, Open source, SOA and Web services, Web development, or XML) will be added to the interests section of your profile, if it's not there already.  You only need to be logged in to My developerWorks.</p>
<p>And what's the point of adding your interests to your profile?  That's how you find other users with the same interests as yours, and see what they're reading and contributing to the community.  Your interests also help us recommend relevant developerWorks content to you.</p>
<p><a href="https://www.ibm.com/developerworks/mydeveloperworks/profiles/home.do?lang=en">View your My developerWorks profile</a></p>
<p class="ibm-access"><a href="#interestShow">Return from help</a></p>
</div> 
</div>
</div>
<div class="ibm-footer"></div>
</div>

<div class="ibm-common-overlay ibm-no-print" id="dwmyinterestremove">
<div class="ibm-head"><p><a class="ibm-common-overlay-close" href="#close">Close [x]</a></p></div>
<div class="ibm-body">
<div class="ibm-main">
<a class="ibm-access" name="dwmyinterestremovehelp">Help: Remove from My dW interests</a> 
<div class="ibm-title"><h1>What's this?</h1></div>
<div class="ibm-container ibm-alternate">
<p>Removing this interest does not alter your profile, but rather removes this piece of content from a list of all content for which you've indicated interest.  In a future enhancement to My developerWorks, you'll be able to see a record of that content.</p>
<p><a href="https://www.ibm.com/developerworks/mydeveloperworks/profiles/home.do?lang=en">View your My developerWorks profile</a></p>
<p class="ibm-access"><a href="#interestShow">Return from help</a></p>
</div> 
</div>
</div>
<div class="ibm-footer"></div>
</div>
<!-- Zone/Leaf_Interest_Overlay_End --></div>
<!-- MAIN_COLUMN_CONTAINER_END -->

<!-- Rating_Meta_BEGIN -->
<!--Rating_Meta_BEGIN--><div class="metavalue">static.content.url=http://www.ibm.com/developerworks/js/artrating/</div><div class="metavalue">SITE_ID=1</div><div class="metavalue">Zone=Java technology</div><div class="metavalue">ArticleID=100266</div><div class="metavalue">ArticleTitle=Ruby off the Rails</div><div class="metavalue">publish-date=12202005</div><div class="metavalue">author1-email=aglover@stelligent.com</div><div class="metavalue">author1-email-cc=</div><script language="javascript" type="text/javascript">document.write('<div class="metavalue">url='+location.href.replace('<', '%3C')+'</div>');</script><!--Rating_Meta_END-->
<!-- Rating_Meta_END -->

</div>
<!-- MAIN_COLUMN_END-->

<!-- RIGHT_COLUMN_BEGIN -->
<div id="ibm-content-sidebar">
<div id="ibm-social-tools-sidebar" class="ibm-share-this"></div>

<!-- RIGHT_COLUMN_CONTENT_BEGIN --> 
<div class="ibm-container"><h2>Table of contents</h2><div class="ibm-container-body"><img alt="" height="1" width="1" src="//www.ibm.com/i/c.gif"/><ul class="ibm-bullet-list"><li><a class="ibm-feature-link" href="#N10081">Feels so different</a></li><li><a class="ibm-feature-link" href="#N10160">Fast moving objects</a></li><li><a class="ibm-feature-link" href="#N1022E">Collections done right</a></li><li><a class="ibm-feature-link" href="#N10285">RubyBeans?</a></li><li><a class="ibm-feature-link" href="#N102D6">Watch Ruby iterate</a></li><li><a class="ibm-feature-link" href="#N10371">Conditionally yours</a></li><li><a class="ibm-feature-link" href="#N103B3">Ducks love Ruby!</a></li><li><a class="ibm-feature-link" href="#N10486">Mix-in it up</a></li><li><a class="ibm-feature-link" href="#N104C6">In conclusion</a></li><li><a class="ibm-feature-link" href="#resources">Resources</a></li><li><a class="ibm-feature-link" href="#author">About the author</a></li><li><a class="ibm-feature-link" href="#icomments">Comments</a></li></ul></div></div>
<!--XSLT stylesheet used to transform this content: s-nextsteps.xsl--><div class="ibm-container"><h2>Next steps from IBM</h2><div class="ibm-container-body"><img width="188" height="58" border="0" alt="" src="//www.ibm.com/developerworks/i/spot-nextsteps.jpg"/><p>With the WebSphere Application Server you can benefit from the simplified EJB 3.0 development
   experience, new persistence model, and interceptors.</p><div class="ibm-rule"><hr/></div><ul class="ibm-bullet-list"><li><a href="http://www.ibm.com/developerworks/downloads/ws/wasce/index.html" class="ibm-feature-link">Try: Download a free trial version of WebSphere Application Server Community Edition, the lightweight Java 5
    application server with robust EJB 3.0 funtionality.</a></li><li><a href="http://www.ibm.com/developerworks/websphere/techjournal/0807_pape/0807_pape.html" class="ibm-feature-link">Article: Learn how call patterns and components involved in making calls to EJB components deployed in the EJB
      container operate in WebSphere Application Server.</a></li><li><a href="http://www.ibm.com/developerworks/websphere/library/tutorials/0703_george/0703_george.html" class="ibm-feature-link">Tutorial: This tutorials shows you how to create an enterprise J2EE application that implements both Plain Old Java
      Object (POJO) and EJB Web services endpoints.</a></li><li><a href="http://www.ibm.com/developerworks/offers/lp/demos/summary/waseclipsewtp2.html" class="ibm-feature-link">Demo: Watch this demo and learn how to configure and use the WebSphere Application Server and the Eclipse IDE with
      the Web Tool Project Platform.</a></li><li><a href="http://www.ibm.com/software/dre/h2b/buildh2bpage.wss?synkey=M797880W07092P99" class="ibm-feature-link">Buy: WebSphere Application Server</a></li></ul></div></div>
<!--XSLT stylesheet used to transform this content: s-community.xsl--><div class="ibm-container"><h2>My developerWorks community</h2><div class="ibm-container-body"><p>Interact, share, and communicate with developers worldwide.</p><div class="ibm-rule"><hr/></div><ul class="ibm-bullet-list"><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/homepage/web/getuserpref?ca=dma-" class="ibm-feature-link">My Home</a></li><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/profiles/home.do?lang=en&amp;ca=dma-" class="ibm-feature-link">Profiles</a></li><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/groups/service/html/allcommunities?ca=dma-" class="ibm-feature-link">Groups</a></li><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/blogs/?ca=dma-" class="ibm-feature-link">Blogs</a></li><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/bookmarks/?ca=dma-" class="ibm-feature-link">Bookmarks</a></li><li><a href="https://www.ibm.com/developerworks/mydeveloperworks/activities/service/html/mainpage?ca=dma-" class="ibm-feature-link">Activities</a></li><li><a href="http://www.ibm.com/developerworks/mydeveloperworks/files?ca=dma-" class="ibm-feature-link">Files</a></li><li><a href="http://www.ibm.com/developerworks/mydeveloperworks/wikis?ca=dma-" class="ibm-feature-link">Wikis</a></li><li><a href="http://www.ibm.com/developerworks/forums/?ca=dma-" class="ibm-feature-link">Forums</a></li><li><a href="http://www.ibm.com/developerworks/podcast/?ca=dma-" class="ibm-feature-link">Podcasts</a></li></ul><div class="ibm-rule"><hr/></div><p class="ibm-ind-link"><a href="https://www.ibm.com/developerworks/mydeveloperworks/?ca=dma-" class="ibm-forward-link">My developerWorks overview</a></p></div></div>
<!-- Tagging_Start -->
<div id="dw-tag-cloud-container" class="ibm-container dw-hidetag"><h2>Tags</h2>
<div id="dw-tag-help"><a class="dwauthor" rel="#tagtip" id="dwtagtip"><img alt="Help" height="16" width="16" align="top" src="//dw1.s81c.com/developerworks/i/help_icon.gif"/></a></div>
<div id="tagtip" class="dwauthor-onload-state ibm-no-print">Use the <strong>search field</strong> to find all types of content in My developerWorks with that tag.<p>Use the <strong>slider bar</strong> to see more or fewer tags.</p><p>For articles in technology zones (such as Java technology, Linux, Open source, XML), <strong>Popular tags</strong> shows the top tags 
for <em>all technology zones</em>.  For articles in product zones (such as Info Mgmt, Rational, WebSphere), <strong>Popular tags</strong> shows the top tags for <em>just that product zone</em>.</p><p>For articles in technology zones (such as Java technology, Linux, Open source, XML), <strong>My tags</strong> shows your tags for <em>all technology zones</em>.  For articles in product zones (such as Info Mgmt, Rational, WebSphere), <strong>My tags</strong> shows your tags for <em>just that product zone</em>.</p></div>
<div class="ibm-access">Use the search field to find all types of content in My developerWorks with that tag.  <em>Popular tags</em> shows the top tags for this particular content zone (for example, Java technology, Linux, WebSphere).  <em>My tags</em> shows your tags for this particular content zone (for example, Java technology, Linux, WebSphere).</div>
<div class="ibm-container-body">
<div class="dw-tag-search"><form action="//www.ibm.com/developerworks/mydeveloperworks/bookmarks/html?lang=en" method="get" id="actualtagform" onsubmit="popupform(this, 'join')">
<p><label for="tagfield"><strong>Search all tags</strong></label><input id="tagfield" name="tag" type="text" maxlength="20" size="17" />&nbsp;<input src="//dw1.s81c.com/i/v16/buttons/short-btn.gif" type="image" class="ibm-btn-view" alt="submit search" title="submit search" value="Search" /></p></form></div>
<div class="ibm-rule"><hr/></div>
<div id="dw-tag-select">
<div id="dw-tag-select-popular"><p><strong>Popular article tags</strong>&nbsp;|&nbsp;<br /><a id="a-my" href="javascript:;">My article tags</a><a href="#dw-tag-access" class="ibm-access">Skip to tags list</a></p></div>
<div id="dw-tag-select-my" class="dw-hidetag"><p><a id="a-popular" href="javascript:;">Popular article tags</a>&nbsp;|&nbsp;<br /><strong>My article tags</strong></p><a href="#dw-tag-access" class="ibm-access">Skip to tags list</a></div>
<div id="dw-tag-cloud"></div>  
</div>   
</div>
</div>
<!-- Tagging_End -->
<!-- Dig_Deeper -->
<div class="ibm-container"><h2>Dig deeper into Java on developerWorks</h2><div class="ibm-container-body"><ul class="ibm-link-list"><li class="ibm-first"><a href="http://www.ibm.com/developerworks/java/" class="ibm-forward-link">Overview</a></li><li><a href="http://www.ibm.com/developerworks/java/newto/" class="ibm-forward-link">New to Java programming</a></li><li><a href="http://www.ibm.com/developerworks/views/java/downloads.jsp" class="ibm-forward-link">Downloads and products</a></li><li><a href="http://www.ibm.com/developerworks/views/java/projects.jsp" class="ibm-forward-link">Open source projects</a></li><li><a href="http://www.ibm.com/developerworks/views/java/standards.jsp" class="ibm-forward-link">Standards</a></li><li><a href="http://www.ibm.com/developerworks/views/java/library.jsp" class="ibm-forward-link">Technical library (articles, tutorials, and more)</a></li><li><a href="http://www.ibm.com/developerworks/java/training/" class="ibm-forward-link">Training</a></li><li><a href="http://www.ibm.com/developerworks/forums/dw_jforums.jsp" class="ibm-forward-link">Forums</a></li><li><a href="http://www.ibm.com/developerworks/views/java/events.jsp" class="ibm-forward-link">Events</a></li><li><a href="http://www.ibm.com/developerworks/newsletter/" class="ibm-forward-link">Newsletter</a></li></ul></div></div>
<!-- High_Visibility_Offer -->
<!--XSLT stylesheet used to transform this content: s-highvisibilityoffer.xsl--><div class="ibm-container"><h2>Stay ahead of the latest cloud trends</h2><div class="ibm-container-body"><img width="188" height="70" border="0" alt="Stay ahead of the latest cloud trends" src="//www.ibm.com/developerworks/i/hivis-w-cloudzone.jpg"/><p class="ibm-ind-link"><a href="https://www.ibm.com/developerworks/cloud/index.html?ca=dti-cloudzone" class="ibm-forward-link">Cloud Computing resources from developerWorks</a></p></div></div>
<!-- Special_Offers -->
<div class="ibm-container"><h2>Special offers</h2><div class="ibm-container-body"><p class="dw-special-offers"><a href="https://www-304.ibm.com/partnerworld/wps/servlet/ContentHandler/2011_beacon_awards_developerworks.html?ca=dti-dwbeacon"><img src="//www.ibm.com/developerworks/i/tile_v16_beacon2010.gif" width="158" height="50" border="0" alt="Partner Award Most Innovative use of dW" /></a></p><p class="dw-special-offers"><a href="http://www.ibm.com/developerworks/downloads/?ca=dti-rdownload#rational"><img src="//www.ibm.com/developerworks/i/tile_v16_r-download.gif" width="158" height="50" border="0" alt="Download and evaluate Rational software" /></a></p><p class="dw-special-offers"><a href="http://www.ibm.com/developerworks/views/linux/libraryview.jsp?type_by=Tutorials&amp;ca=dti-linuxtutorial"><img src="//www.ibm.com/developerworks/i/tile_v16_learnfast-l.gif" width="158" height="50" border="0" alt="Learn fast with free IBM Linux tutorials" /></a></p><div class="ibm-rule"><hr/></div><p class="ibm-ind-link"><a class="ibm-forward-link" href="http://www.ibm.com/developerworks/downloads/?ca=dti-tilemoreoffers">Trial software offers</a></p></div></div>
<!-- RIGHT_COLUMN_CONTENT_END -->

</div>
<!-- RIGHT_COLUMN_END -->

<!-- CONTENT_BODY_END -->
</div>

</div>
<!-- CONTENT_END -->

 <!-- END_IBM-PCON -->
</div>

<!-- FOOTER_BEGIN -->
<div id="ibm-page-tools">
<!-- IBM page tools container -->
</div>
<div id="ibm-footer">
<ul>
<li class="ibm-first"><a href="http://www.ibm.com/ibm/">About IBM</a></li>
<li><a href="http://www.ibm.com/privacy/">Privacy</a></li>
<li><a href="http://www.ibm.com/contact/">Contact</a></li>
<li><a href="http://www.ibm.com/legal/">Terms of use</a></li>
</ul>
</div>
<!-- FOOTER_END -->

 <!-- END_IBM-TOP -->
</div>
 
 <!-- SCRIPTS_INCLUDE_BEGIN -->
<!-- JQuery start -->
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/cluetip98/jquery.dimensions-1.2.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/cluetip98/jquery.hoverIntent.minified.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/cluetip98/jquery.cluetip.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/tagging/ui.core-1.7.1.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/tagging/ui.slider-1.7.1.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/jquery/tagging/dwjquerytags.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/si/flash-detect.js"></script>
<script type="text/javascript" language="JavaScript" src="//dw1.s81c.com/developerworks/js/si/dwsi.js"></script>
<script type="text/javascript" language="JavaScript">
	jQuery.noConflict();     
	// Put all your code in your document ready area
	jQuery(document).ready(function(jQuery) {
	// Do jQuery stuff using jQuery 
	jQuery('a.dwauthor').cluetip({
		local: true,
		showTitle: false,
		positionBy: 'bottomTop',
		sticky: true,	
		mouseOutClose: true,
		closeText: '<img src="//dw1.s81c.com/developerworks/js/jquery/cluetip98/i/x.gif" alt="Close" />',
		arrows: false,
		dropShadow: true,
		cluetipClass: 'dwbasic'
		});

		//tagging
		login="false";
		userid="";
		whichTags = "init";
		pCont = "";
		mCont = "";
		signInMCont = "";
		accessCont = "";
		pValue = 0;
		mValue = 0;

		rBHash = null;
		rBHash = new Object();
		rBHash['viperLang'] = 'en';
		rBHash['urlLang'] = 'en';
		rBHash['tagThisWinTitle'] = 'Tagit';
		rBHash['pTags1'] = 'Popular tags';
		rBHash['pTags2'] = 'End of Popular tags';
		rBHash['mTags1'] = 'My tags';
		rBHash['mTags2'] = 'End of My tags';
		rBHash['alt1'] = 'Loading Content';
		rBHash['noATags'] = 'No active tags';
		rBHash['signIn1'] = 'Please ';
		rBHash['signIn2'] = 'sign in';
		rBHash['signIn3'] = ' to access';
		rBHash['signIn4'] = 'My Tags';
		rBHash['signIn5'] = 'To access My Tags, please ';
		rBHash['signIn6'] = 'sign in';
		rBHash['signIn7'] = 'Read Popular tags';

		zoneHash = new Object();
		zoneHash['aix'] = 'AIX and UNIX zone';
		zoneHash['data'] = 'Information Management zone';
		zoneHash['lotus'] = 'Lotus zone';
		zoneHash['rational'] = 'Rational zone';
		zoneHash['tivoli'] = 'Tivoli zone';
		zoneHash['websphere'] = 'WebSphere zone';
		zoneHash['architecture'] = 'Technical library';
		zoneHash['autonomic'] = 'Technical library';
		zoneHash['java'] = 'Technical library';
		zoneHash['cloud'] = 'Technical library';
		zoneHash['industry'] = 'Technical library';
		zoneHash['library'] = 'Technical library';
		zoneHash['linux'] = 'Technical library';
		zoneHash['opensource'] = 'Technical library';
		zoneHash['power'] = 'Technical library';
		zoneHash['webservices'] = 'Technical library';
		zoneHash['web'] = 'Technical library';
		zoneHash['xml'] = 'Technical library';
		zoneHash['wireless'] = 'Technical library';
		jQuery.checkRB();
		jQuery.getPopularTags("/developerworks/dwtags/dwjquerytabtags?lang=" + rBHash['viperLang'] + "&base=" + jQuery.getNormalizedZoneUrl(location.href));
		jQuery.getUserTags();
		if(jQuery.isTutorial(location.href) == "true") {
			jQuery.getTagsForContent("/developerworks/tagging/UseCaseServlet?lang=" + rBHash['viperLang'] + "&format=maverick&cType=tutorials&use_case=geturltags&action=gettags&url=" + jQuery.normalizeUrl(location.href));
		}
		else {
			jQuery.getTagsForContent("/developerworks/tagging/UseCaseServlet?lang=" + rBHash['viperLang'] + "&format=maverick&cType=articles&use_case=geturltags&action=gettags&url=" + jQuery.normalizeUrl(location.href));

		}
		
		// si
		initSI();
	});
 </script>
 <!-- JQuery end -->
 <!-- Overlay js -->
<script language="JavaScript" src="//dw1.s81c.com/common/js/overlay.js" type="text/javascript"></script>
<!-- My dW Interest article -->
<script language="JavaScript" src="//dw1.s81c.com/developerworks/js/showinterest.js" type="text/javascript">//</script>
<script language="JavaScript" type="text/javascript">
        // <![CDATA[
			var contentId = '';
			var contentAreas = '';
			var caArr = [];
			contentId = '100266';
			contentAreas = 'java';
			if(contentAreas != ''){caArr = contentAreas.split(',');}
			var loginLink = 'https://www.ibm.com/developerworks/dwwi/DWAuthRouter?m=loginpage&d=' + encodeURIComponent(window.location);jQuery('interestShow').showInterest(contentId,'dw-article',{'int_tops':[521,695],'int_prods':[], 'int_prod_fam':[],'int_cont_area':caArr},
'<div id="dw-interest-anon"><a id="intAnonBtn" class="ibm-external-link" href="">Update My dW interests</a> (<a class="dw-interest" href="' + loginLink + '">Log in</a> | <a class="dw-interest" href="#overlay" onclick="ibmCommon.Overlays.show(\'dwmyinterestadd\', this);return false;">What\'s this?</a>) <a class="ibm-access" href="#dwmyinterestaddhelp">Skip to help for Update My dW interests</a></div>',
'<div id="dw-interest-add"><a id="intSelectBtn" class="ibm-external-link" href="">Add to My dW interests</a> (<a class="dw-interest" href="#overlay" onclick="ibmCommon.Overlays.show(\'dwmyinterestadd\', this);return false;">What\'s this?</a>) <a class="ibm-access" href="#dwmyinterestaddhelp">Skip to help for Add to My dW interests</a></div>',
'<div id="dw-interest-remove">Added to My dW interests (<a class="dw-interest" href="https://www.ibm.com/developerworks/mydeveloperworks/profiles/html/myProfileView.do?lang=en">Edit</a>)</div>'
);
// ]]>
</script><!-- BEGIN: Use this section to set page specific variables for the Unica Page Tag -->
<script language="JavaScript">var NTPT_PGEXTRA="ibmSkillLevel=2&ibmAdoptPhase=-&ibmRole=-";</script>
<!--END --><!-- SCRIPTS_INCLUDE_END -->

<div id="ibm-metrics">
<script src="//dw1.s81c.com/common/stats/stats.js" type="text/javascript">//</script>
</div>

</body>
</html>