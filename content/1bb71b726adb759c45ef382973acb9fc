<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Django snippets: Generate newforms-admin admin.py file</title>
  
  <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="stylesheet" type="text/css"/>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

  <link rel="stylesheet" href="/media/css/snippets.css" type="text/css" />
  <link rel="stylesheet" href="/media/css/pygments.css" type="text/css" />
  <link rel="alternate" href="/feeds/latest/" type="application/atom+xml" title="Feed of latest snippets" />
  
  
  <script type="text/javascript" language="javascript">
    $(function() {
      $("input#id_q").autocomplete({
        minLength: 3,
        source: function(request, response) {
          var term = request.term;
	        $.getJSON("/search/autocomplete/", {'q': term}, function(data) {
	          var results = [];
	          $.each(data, function(k, v) {results.push(v.title);});
		        response(results);
	        });
        }
      });
    });
  </script>
</head>
<body class="snippets">
  <div id="header">
    <h1><a href="/">Django snippets</a></h1>
    <div id="nav-main">
      <span>
        
          <a href="/accounts/login/?next=/snippets/603/">Log in</a> or <a href="/accounts/register/">register</a>
        
      </span>
      <ul>
        <li id="nav-snippets"><a href="/snippets/">Snippets</a></li>
        
        <li id="nav-about"><a href="/about/">About</a></li>
      </ul>
    </div>
  </div>

  <ul id="nav-secondary">
  
    <li><a href="/users/">By author</a></li>
    <li><a href="/languages/">By language</a></li>
    <li><a href="/tags/">By tag</a></li>
    <li><a href="/popular/rated/">Highest-rated</a></li>
    <li><a href="/popular/bookmarked/">Most bookmarked</a></li>
  
  </ul>


  <h2>Generate newforms-admin admin.py file</h2>
  <div id="content">
    <div id="main">
      
  <table class="highlighttable"><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171</pre></td><td class="code"><div class="highlight"><pre><span class="sd">&#39;&#39;&#39;</span>
<span class="sd">Utility script for automatically generating a </span>
<span class="sd">newforms-admin admin.py file based on an old-style models.py file.</span>
<span class="sd">The generated source code is printed to standard output.</span>

<span class="sd">Usage: ./newforms_gen.py my.module &gt; admin.py</span>
<span class="sd">where my.module contains a models.py file.</span>
<span class="sd">&#39;&#39;&#39;</span>

<span class="k">import</span> <span class="nn">sys</span>
<span class="k">import</span> <span class="nn">os.path</span>
<span class="k">import</span> <span class="nn">re</span>
<span class="k">import</span> <span class="nn">StringIO</span>
<span class="k">import</span> <span class="nn">imp</span>
<span class="k">import</span> <span class="nn">copy</span>

<span class="k">def</span> <span class="nf">_update_admin_line</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">r&quot;&#39;classes&#39;:\s*&#39;(.*?)&#39;&quot;</span><span class="p">,</span> <span class="s">r&quot;&#39;classes&#39;: (&#39;\1&#39;,)&quot;</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>  <span class="c"># make &#39;classes&#39; a tuple</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">r&#39;fields\s*=&#39;</span><span class="p">,</span> <span class="s">&#39;fieldsets =&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>                    <span class="c"># change fields into fieldsets</span>
    <span class="k">return</span> <span class="n">s</span>

<span class="k">def</span> <span class="nf">generate_newforms_admin</span><span class="p">(</span><span class="n">module_name</span><span class="p">):</span>
    <span class="c"># read the source code</span>
    <span class="n">path</span> <span class="o">=</span> <span class="n">imp</span><span class="o">.</span><span class="n">find_module</span><span class="p">(</span><span class="n">module_name</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)[</span><span class="mf">0</span><span class="p">])[</span><span class="mf">1</span><span class="p">]</span>
    <span class="n">filepath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="n">path</span><span class="p">]</span> <span class="o">+</span> <span class="n">module_name</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)[</span><span class="mf">1</span><span class="p">:]</span> <span class="o">+</span> <span class="p">[</span><span class="s">&#39;models.py&#39;</span><span class="p">])</span>
    <span class="n">source</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

    <span class="c"># initialize some variables</span>
    <span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>    
    <span class="n">inline_classes</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">model_names</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">model_admin</span> <span class="o">=</span> <span class="p">{}</span>

    <span class="c"># initialize mapping from admin fields to formatting functions</span>
    <span class="k">def</span> <span class="nf">format_tuple</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">indentation</span><span class="p">):</span>
        <span class="k">return</span> <span class="s">&#39;</span><span class="si">%s%s</span><span class="s"> = </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">tuple</span><span class="p">(</span><span class="n">data</span><span class="p">)))</span>
    <span class="k">def</span> <span class="nf">format_lines</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">indentation</span><span class="p">):</span>
        <span class="k">return</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">_update_admin_line</span><span class="p">(</span><span class="n">line</span><span class="p">)</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">data</span> <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="o">!=</span> <span class="s">&#39;pass&#39;</span><span class="p">])</span>
    <span class="k">def</span> <span class="nf">format_dict</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">indentation</span><span class="p">):</span>
        <span class="n">items</span> <span class="o">=</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">((</span><span class="s">&quot;&#39;</span><span class="si">%s</span><span class="s">&#39;: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">for</span> <span class="n">field</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">items</span><span class="p">()))</span>
        <span class="k">return</span> <span class="s">&#39;</span><span class="si">%s%s</span><span class="s"> = {</span><span class="si">%s</span><span class="s">}&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">items</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">format_list_of_names</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">indentation</span><span class="p">):</span>
        <span class="k">return</span> <span class="s">&#39;</span><span class="si">%s%s</span><span class="s"> = [</span><span class="si">%s</span><span class="s">]&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>

    <span class="n">default_admin_info</span> <span class="o">=</span><span class="p">{</span><span class="s">&#39;admin_lines&#39;</span><span class="p">:</span> <span class="p">[],</span>  
                         <span class="s">&#39;inlines&#39;</span><span class="p">:</span> <span class="p">[],</span>
                         <span class="s">&#39;prepopulated_fields&#39;</span><span class="p">:</span> <span class="p">{},</span>
                         <span class="s">&#39;filter_horizontal&#39;</span><span class="p">:</span> <span class="p">[],</span>
                         <span class="s">&#39;filter_vertical&#39;</span><span class="p">:</span> <span class="p">[],</span>
                         <span class="s">&#39;raw_id_fields&#39;</span><span class="p">:</span> <span class="p">[],</span>
                        <span class="p">}</span>
    <span class="n">field_format_func</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;admin_lines&#39;</span><span class="p">:</span>         <span class="n">format_lines</span><span class="p">,</span>
                         <span class="s">&#39;inlines&#39;</span><span class="p">:</span>             <span class="n">format_list_of_names</span><span class="p">,</span>
                         <span class="s">&#39;prepopulated_fields&#39;</span><span class="p">:</span> <span class="n">format_dict</span><span class="p">,</span>
                         <span class="s">&#39;filter_horizontal&#39;</span><span class="p">:</span>   <span class="n">format_tuple</span><span class="p">,</span>
                         <span class="s">&#39;filter_vertical&#39;</span><span class="p">:</span>     <span class="n">format_tuple</span><span class="p">,</span>
                         <span class="s">&#39;raw_id_fields&#39;</span><span class="p">:</span>       <span class="n">format_tuple</span><span class="p">,}</span>

    <span class="n">parts</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;^class (\w+).*$&#39;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">M</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">class_name</span><span class="p">,</span> <span class="n">code</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">parts</span><span class="p">[</span><span class="mf">1</span><span class="p">::</span><span class="mf">2</span><span class="p">],</span> <span class="n">parts</span><span class="p">[</span><span class="mf">2</span><span class="p">::</span><span class="mf">2</span><span class="p">]):</span>
        <span class="c"># add model to list and initialize admin info for this model</span>
        <span class="n">model_names</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">class_name</span><span class="p">)</span>
        <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">default_admin_info</span><span class="p">)</span>

        <span class="c"># determine indentation </span>
        <span class="n">first_line</span> <span class="o">=</span> <span class="p">[</span><span class="n">line</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">code</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()][</span><span class="mf">0</span><span class="p">]</span>
        <span class="n">indentation</span> <span class="o">=</span> <span class="n">first_line</span><span class="p">[</span> <span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">first_line</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">first_line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">())]</span>    

        <span class="c"># find any Admin class declaration</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r&#39;(?m)^</span><span class="si">%s</span><span class="s">class Admin:.*\n((</span><span class="si">%s</span><span class="s">[ \t]+.+\n)*)&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">indentation</span><span class="p">),</span> <span class="n">code</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">m</span><span class="p">:</span>            
            <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">][</span><span class="s">&#39;admin_lines&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">line</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mf">1</span><span class="p">)</span> 
                                                      <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mf">1</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span>

        <span class="c"># find the fields in this class</span>
        <span class="n">fields</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r&#39;(?m)^</span><span class="si">%s</span><span class="s">(\w+) *= *models\.(\w+).*?\((.*\n((</span><span class="si">%s</span><span class="s">[ \t]+.+\n)*))&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">indentation</span><span class="p">),</span> <span class="n">code</span><span class="p">)</span>             

        <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">fields</span><span class="p">:</span>
            <span class="c"># extract field name, type and rest of line</span>
            <span class="n">field_name</span><span class="p">,</span> <span class="n">field_type</span><span class="p">,</span> <span class="n">field_data</span> <span class="o">=</span> <span class="n">field</span><span class="p">[</span><span class="mf">0</span><span class="p">:</span><span class="mf">3</span><span class="p">]</span>

            <span class="c"># extract the field initialization kwargs (only works for simple values, not tuple values)</span>
            <span class="n">params</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r&#39;(\w+) *= *([a-zA-Z0-9._]+)&#39;</span><span class="p">,</span> <span class="n">field_data</span><span class="p">))</span>
            <span class="n">first_param</span> <span class="o">=</span> <span class="n">field_data</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)[</span><span class="mf">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

            <span class="c"># find foreign keys with inline editing</span>
            <span class="k">if</span> <span class="n">field_type</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">&#39;ForeignKey&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="s">&#39;edit_inline&#39;</span> <span class="ow">in</span> <span class="n">params</span><span class="p">:</span>                        
                <span class="k">if</span> <span class="s">&#39;TABULAR&#39;</span> <span class="ow">in</span> <span class="n">params</span><span class="p">[</span><span class="s">&#39;edit_inline&#39;</span><span class="p">]:</span>
                    <span class="n">inline_class</span> <span class="o">=</span> <span class="s">&#39;admin.TabularInline&#39;</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">inline_class</span> <span class="o">=</span> <span class="s">&#39;admin.StackedInline&#39;</span>

                <span class="n">fk_class</span> <span class="o">=</span> <span class="n">first_param</span>
                <span class="k">if</span> <span class="n">fk_class</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;&#39;&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">fk_class</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">):</span>
                    <span class="n">fk_class</span> <span class="o">=</span> <span class="n">fk_class</span><span class="p">[</span><span class="mf">1</span><span class="p">:</span><span class="o">-</span><span class="mf">1</span><span class="p">]</span>

                <span class="c"># build inline class</span>
                <span class="n">lines</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;class </span><span class="si">%s</span><span class="s">_Inline(</span><span class="si">%s</span><span class="s">):&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">class_name</span><span class="p">,</span> <span class="n">inline_class</span><span class="p">)]</span>
                <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">model = </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">class_name</span><span class="p">))</span>            
                <span class="k">for</span> <span class="n">input_field</span><span class="p">,</span> <span class="n">output_field</span> <span class="ow">in</span> <span class="p">[(</span><span class="s">&#39;num_in_admin&#39;</span><span class="p">,</span> <span class="s">&#39;extra&#39;</span><span class="p">),</span> <span class="p">]:</span>
                    <span class="k">if</span> <span class="n">input_field</span> <span class="ow">in</span> <span class="n">params</span><span class="p">:</span>
                        <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s%s</span><span class="s"> = </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indentation</span><span class="p">,</span> <span class="n">output_field</span><span class="p">,</span> <span class="n">params</span><span class="p">[</span><span class="n">input_field</span><span class="p">]))</span>

                <span class="c"># add to list of inline classes and add an entry in the ForeignKey model linking to this class</span>
                <span class="n">inline_classes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
                <span class="k">if</span> <span class="ow">not</span> <span class="n">fk_class</span> <span class="ow">in</span> <span class="n">model_admin</span><span class="p">:</span>
                    <span class="n">model_admin</span><span class="p">[</span><span class="n">fk_class</span><span class="p">]</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">default_admin_info</span><span class="p">)</span>
                <span class="n">model_admin</span><span class="p">[</span><span class="n">fk_class</span><span class="p">][</span><span class="s">&#39;inlines&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">_Inline&#39;</span> <span class="o">%</span> <span class="n">class_name</span><span class="p">)</span>

            <span class="c"># store info used for the admin options class fields</span>
            <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r&#39;prepopulate_from=(\(.+?\))&#39;</span><span class="p">,</span> <span class="n">field_data</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">m</span><span class="p">:</span>            
                <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">][</span><span class="s">&#39;prepopulated_fields&#39;</span><span class="p">][</span><span class="n">field_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mf">1</span><span class="p">)</span>
            <span class="k">if</span> <span class="s">&#39;filter_interface&#39;</span> <span class="ow">in</span> <span class="n">params</span> <span class="ow">and</span> <span class="p">(</span><span class="s">&#39;HORIZONTAL&#39;</span> <span class="ow">in</span> <span class="n">params</span><span class="p">[</span><span class="s">&#39;filter_interface&#39;</span><span class="p">]</span> <span class="ow">or</span> <span class="s">&#39;True&#39;</span> <span class="ow">in</span> <span class="n">params</span><span class="p">[</span><span class="s">&#39;filter_interface&#39;</span><span class="p">]):</span>
                <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">][</span><span class="s">&#39;filter_horizontal&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">field_name</span><span class="p">)</span>
            <span class="k">if</span> <span class="s">&#39;filter_interface&#39;</span> <span class="ow">in</span> <span class="n">params</span> <span class="ow">and</span> <span class="s">&#39;VERTICAL&#39;</span> <span class="ow">in</span> <span class="n">params</span><span class="p">[</span><span class="s">&#39;filter_interface&#39;</span><span class="p">]:</span>
                <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">][</span><span class="s">&#39;filter_vertical&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">field_name</span><span class="p">)</span>
            <span class="k">if</span> <span class="s">&#39;raw_id_admin&#39;</span> <span class="ow">in</span> <span class="n">params</span> <span class="ow">and</span> <span class="n">params</span><span class="p">[</span><span class="s">&#39;raw_id_admin&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;True&#39;</span><span class="p">:</span>
                <span class="n">model_admin</span><span class="p">[</span><span class="n">class_name</span><span class="p">][</span><span class="s">&#39;raw_id_fields&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">field_name</span><span class="p">)</span>

    <span class="n">register_classes</span> <span class="o">=</span> <span class="p">[]</span>    <span class="c"># admin classes to register</span>

    <span class="k">for</span> <span class="n">model</span> <span class="ow">in</span> <span class="n">set</span><span class="p">(</span><span class="n">model_names</span><span class="p">)</span> <span class="o">|</span> <span class="n">set</span><span class="p">(</span><span class="n">model_admin</span><span class="o">.</span><span class="n">keys</span><span class="p">()):</span>
        <span class="k">if</span> <span class="n">model</span> <span class="ow">in</span> <span class="n">model_admin</span><span class="p">:</span>                    
            <span class="c"># build admin class</span>
            <span class="n">lines</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;class </span><span class="si">%s</span><span class="s">Options(admin.ModelAdmin):&#39;</span> <span class="o">%</span> <span class="n">model</span><span class="p">]</span>
            <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">model_admin</span><span class="p">[</span><span class="n">model</span><span class="p">]</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                <span class="k">if</span> <span class="n">value</span><span class="p">:</span>
                    <span class="n">line</span> <span class="o">=</span> <span class="n">field_format_func</span><span class="p">[</span><span class="n">key</span><span class="p">](</span><span class="n">value</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">indentation</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">line</span><span class="p">:</span>
                        <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>

            <span class="c"># if the admin class has any contents</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mf">2</span><span class="p">:</span>                            
                <span class="n">admin_class</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span>                
                <span class="k">if</span> <span class="n">model</span> <span class="ow">in</span> <span class="n">model_names</span><span class="p">:</span>
                    <span class="n">register_classes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">model</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">Options&#39;</span> <span class="o">%</span> <span class="n">model</span><span class="p">))</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="c"># if the model is not defined in this module comment out the Admin class declaration</span>
                    <span class="c"># (it&#39;s the user&#39;s responsibility to move relevant parts of the code to the right place)</span>
                    <span class="n">admin_class</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&#39;# &#39;</span> <span class="o">+</span> <span class="n">line</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">admin_class</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)])</span>                
                   
                <span class="n">output</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">admin_class</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="c"># output admin class definition</span>

            <span class="c"># else if the admin class lacks contents but there was an </span>
            <span class="c"># empty Admin class with just a &#39;pass&#39; line in the original source</span>
            <span class="c"># and the model class was defined in the current module</span>
            <span class="k">elif</span> <span class="n">model_admin</span><span class="p">[</span><span class="n">model</span><span class="p">][</span><span class="s">&#39;admin_lines&#39;</span><span class="p">]</span> <span class="ow">and</span> <span class="n">model</span> <span class="ow">in</span> <span class="n">model_names</span><span class="p">:</span>
                <span class="n">register_classes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">model</span><span class="p">,))</span>

    <span class="k">for</span> <span class="n">class_names</span> <span class="ow">in</span> <span class="n">register_classes</span><span class="p">:</span>
        <span class="n">output</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;admin.site.register(</span><span class="si">%s</span><span class="s">)</span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">class_names</span><span class="p">))</span>

    <span class="c"># construct final output</span>
    <span class="n">output</span> <span class="o">=</span> <span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">()</span>
    <span class="n">lines</span> <span class="o">=</span> <span class="p">[]</span>        
    <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;from django.contrib import admin&#39;</span><span class="p">)</span>
    <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;from django.utils.translation import ugettext_lazy as _</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
    <span class="n">lines</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">inline_classes</span><span class="p">)</span>    
    <span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
    <span class="n">output</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span>

    <span class="c"># add an import line that imports all models referenced in the code</span>
    <span class="n">referenced_models</span> <span class="o">=</span> <span class="p">[</span><span class="n">m</span> <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">model_names</span> <span class="k">if</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r&#39;\b</span><span class="si">%s</span><span class="s">\b&#39;</span> <span class="o">%</span> <span class="n">m</span><span class="p">,</span> <span class="n">output</span><span class="p">)]</span>        
    <span class="k">if</span> <span class="n">referenced_models</span><span class="p">:</span>
        <span class="n">output</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&#39;from </span><span class="si">%s</span><span class="s">.models import &#39;</span> <span class="o">%</span> <span class="n">module_name</span> <span class="o">+</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">referenced_models</span><span class="p">),</span> <span class="n">output</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">output</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">print</span> <span class="n">generate_newforms_admin</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mf">1</span><span class="p">])</span>
</pre></div>
</td></tr></table>
  <div>
    <h3>More like this</h3>
    
      <ol>
      
      <li><a href="/snippets/1900/">admin.py generator from a model</a> by <a href="/users/tamonashroy/">tamonashroy</a>
        10 months, 3 weeks ago
      </li>
      
      <li><a href="/snippets/997/">Autogenerate admin classes in admin.py</a> by <a href="/users/dodgyville/">dodgyville</a>
        2 years, 4 months ago
      </li>
      
      <li><a href="/snippets/2232/">GeoDjango maps in admin TabularInlines</a> by <a href="/users/alanB/">alanB</a>
        2 months, 1 week ago
      </li>
      
      <li><a href="/snippets/1489/">Dynamic tabular inlines with optional drag-n-drop sorting</a> by <a href="/users/Aneon/">Aneon</a>
        1 year, 7 months ago
      </li>
      
      <li><a href="/snippets/2260/">Changelist filter by ForeignKey</a> by <a href="/users/overclocked/">overclocked</a>
        1 month, 1 week ago
      </li>
      
      </ol>
    
  </div>

    </div>
    <div id="sidebar">
      <div style="padding: 15px;">
        <form method="get" action="/search/">
          <table>
            <tr>
              <td><label for="id_q">Search:</label></td>
              <td><input type="text" name="q" id="id_q" style="width: 110px;" value="" /></td>
              <td><input type="submit" value="Go" /></td>
            </tr>
            <tr>
              <td></td>
              <td><a href="/search/advanced/">Advanced Search</a></td>
            </tr>
          </table>
        </form>
      </div>
      
  <p>This is a utility script that scans a models.py file and automatically outputs the corresponding newforms-admin source code - the code that goes into the admin.py file. The purpose is to simplify the migration to newforms-admin.
</p>
<p>Here is what it outputs:
</p>
<ul>
 <li><p>an import line that lists only the needed classes from the model.
</p>

 </li>

 <li><p>inline editing classes - inheriting from either <code>admin.TabularInline</code> or <code>admin.StackedInline</code>
</p>

 </li>

 <li><p>admin options classes containing any original <code>Admin</code> class contents (<code>'fields'</code> is replaced by <code>'fieldsets'</code> and the value of <code>'classes'</code> is made into a tuple), plus the following fields whose values are determined automatically: <code>inlines</code>, <code>prepopulated_fields</code>, <code>filter_horizontal</code>, <code>filter_vertical</code> and <code>raw_id_fields</code> 
</p>

 </li>

 <li><p>invokations of <code>admin.site.register</code> for the generated admin options classes.
</p>

 </li>
</ul>
<p>Example usage of the script (this will generate the admin.py file for the models.py file in the satchmo.product module):
   &gt;./new-forms-gen.py satchmo.product &gt; admin.py
</p>

  <dl>
    <dt>Author:</dt>
    <dd><a href="/users/NL/">NL</a></dd>
    <dt>Posted:</dt>
    <dd>February 16, 2008</dd>
    <dt>Language:</dt>
    <dd><a href="/languages/python/">Python</a></dd>
    <dt>Django Version:</dt>
    <dd>.96</dd>
    <dt>Tags:</dt>
    <dd><a href="/tags/newforms-admin/">newforms-admin</a> </dd>
    <dt>Score:</dt>
    <dd>16 (after 16 ratings)</dd>
  </dl>

  <h3>Tools</h3>
  <ul>
    
    <li><a href="/snippets/603/download/" type="text/x-python">Download this snippet</a></li>
    <li><a href="#comments">Comment on this snippet</a></li>
  </ul>

    </div>
  </div>
  
  <div id="comments">
    <h2>Comments</h2>
    
    
    <dl>
    
      <dt id="c992"><a href="/users/mikko/">mikko</a> (on June 17, 2008):</dt>
      <dd><p>Excellent!
</p>
      <p><a href="/comments/cr/15/603/#c992">#</a></p></dd>
    
      <dt id="c1301"><a href="/users/LuckiDog/">LuckiDog</a> (on September 11, 2008):</dt>
      <dd><p>Doesn't work. Do we need some Python Path juju going on?
</p>
<p>I get the error:
</p>
<p>ImportError: No module named django_site
</p>
      <p><a href="/comments/cr/15/603/#c1301">#</a></p></dd>
    
      <dt id="c1372"><a href="/users/gorango/">gorango</a> (on October 1, 2008):</dt>
      <dd><blockquote><p>s = re.sub(r'fields\s*=', 'fieldsets =', s) 
   silently breaks the search_fields definition.
</p>
</blockquote><p>I fixed my problem manually. My guess is that
</p>
<blockquote><p>s = re.sub(r'(\s*)fields\s*=', '\1fieldsets =', s) 
   would work, but had no time to test (i am python, django and re newbie, so use on your own...)
</p>
</blockquote>
      <p><a href="/comments/cr/15/603/#c1372">#</a></p></dd>
    
      <dt id="c1431"><a href="/users/chadc/">chadc</a> (on October 27, 2008):</dt>
      <dd><p>do you have to add something to urls.py or views.py to get this to run?
</p>
      <p><a href="/comments/cr/15/603/#c1431">#</a></p></dd>
    
      <dt id="c1432"><a href="/users/chadc/">chadc</a> (on October 27, 2008):</dt>
      <dd><p>the correct usage instructions are
</p>
<p>Usage:
   open terminal to the folder the script is in and run this command
</p>
<p>python ./603.py my.module &gt; admin.py
</p>
<p>(where my.module is the project.app that contains the models.py file.)
</p>
      <p><a href="/comments/cr/15/603/#c1432">#</a></p></dd>
    
      <dt id="c1737"><a href="/users/hasenj/">hasenj</a> (on March 17, 2009):</dt>
      <dd><p>Cool, thanks.
</p>
<p>I added a small modification to make it work for me, first line under <code>if __name__ == '__main__':</code>
</p>
<pre><code>sys.path = [os.path.realpath( os.getcwd() )] + sys.path
</code></pre><p>This is because I don't have the project directory under pythonpath by default.
</p>
      <p><a href="/comments/cr/15/603/#c1737">#</a></p></dd>
    
    </dl>
    

<form action="/accounts/login/" method="post"><div style='display:none'><input type='hidden' name='csrfmiddlewaretoken' value='2d297ae9f37a5b6eb66c137850b7cc09' /></div>
<dl>
<dt><label for="id_username">Username:</label></dt>
<dd><input type="text" name="username" id="id_username" /></dd>
<dt><label for="id_password">Password:</label></dt>
<dd><input type="password" name="password" id="id_password" /> (<a href="/accounts/password_reset/">Forgotten your password?</a>)</dd>
<dt></dt>
<dd><input type="submit" value="Login" /></dd>
</dl>
<input type="hidden" name="next" value="/snippets/603/" />
</form>


  </div>


  <div id="footer">
    <div class="chunk">
      <h3>Snippets</h3>
      <ul>
        <li><a href="/users/">By author</a></li>
        <li><a href="/languages/">By language</a></li>
        <li><a href="/tags/">By tag</a></li>
        <li><a href="/popular/rated/">Highest-rated</a></li>
        <li><a href="/popular/bookmarked/">Most bookmarked</a></li>
        <li><a rel="alternate" href="/feeds/latest/" type="application/atom+xml"><img src="http://djangosnippets.org/media/img/feed-icon-10x10.png" alt="" /> Feed of latest snippets</a></li>
      </ul>
    </div>
    
    <div class="chunk">
      <h3>About</h3>
      <p>Powered by <a href="http://www.djangoproject.com/">Django</a>.</p>
      <p>Learn more <a href="/about/">about this site</a>.</p>
      <p>Read the <a href="/about/faq/">FAQ</a>.</p>
      <p><a href="/about/tos/">Terms of service</a></p>
    </div>
    <p id="copyright">Backend code by <a href="http://www.b-list.org/">James Bennett</a> and <a href="http://charlesleifer.com">Charles Leifer</a>, design by <a href="http://www2.jeffcroft.com/">Jeff Croft</a>.</p>
  </div>
  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-16402186-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</body>
</html>
