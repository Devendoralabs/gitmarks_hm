<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<title>Introducing templatemaker | Holovaty.com</title>
<meta name="robots" content="noarchive">
<link rel="home" title="Home" href="/">
<style type="text/css">
html, body, div, span, object, iframe, 
h1, h2, h3, h4, h5, h6, p, blockquote, pre, 
a, abbr, acronym, address, big, cite, code, del, dfn, em, 
img, ins, kbd, q, samp, small, strike, strong, sub, sup, 
tt, var, dl, dt, dd, ol, ul, li, 
fieldset, form, label, legend, 
table, caption, tbody, tfoot, thead, tr, th, td { margin: 0; padding: 0; border: 0; outline: 0; vertical-align: baseline; background: transparent; }
table { border-spacing: 0; border-collapse: collapse; }
caption, th, td { text-align: left; font-weight: normal; }
blockquote, q { quotes: none; }
:focus { outline: 0; }

body { background: #fff; }
p, ul, li, td, th, blockquote { font: 12px verdana,sans-serif; margin: 10px 0; }
ul, ol { margin-left: 14px; list-style: square; }
code { background: #ddd; }
ul.nospace li { margin: 0; }
a:link { color: #203d79; }
h1 { font: bold 26px arial,sans-serif; margin: 0 0 5px; }
h2 { font: bold 20px arial,sans-serif; margin: 0 0 5px; }
h3 { font: bold 14px arial,sans-serif; }
blockquote { margin-left: 20px; border-left: 2px solid #ddd; padding-left: 5px; }
table.contact th { vertical-align: top; padding: 0 10px 0 0; }
.errorlist { color: red; font-weight: bold; }
p.intro { font: 14px verdana,sans-serif; margin: 0 0 15px; }
#comments { border-top: 1px solid #ccc; }
#comments h2 { text-align: center; font: bold 18px arial,sans-serif; margin: 10px 0; }
#comments p.note { border-top: 1px solid #ccc; text-align: center; padding: 10px 0; }
#comments table td { vertical-align: top; padding: 0 0 5px 10px; }
#comments textarea, #comments input { border: 1px solid #999; padding: 2px; font: 12px verdana,sans-serif; width: 600px; }
#comments input.button { width: auto; }
div.comment p { margin-left: 20px; }
div.comment { margin: 0 0 20px; }
div.comment.preview { border: 1px solid #ccc; padding: 10px; }
#commentposted { background: #ffa500; color: white; font: 14px verdana,sans-serif; padding: 5px; }
#commentposted a:link, #commentposted a:visited { color: #fff; }
#header { background: #203d79; padding: 5px 5px 5px 10px; color: #fff; font: 12px verdana,sans-serif; }
#header a:link, #header a:visited { color: #fff; text-decoration: none; }
#header a:hover { color: yellow; text-decoration: underline; }
#article { margin: 0 0 15px; }
.homepage h1 { font: bold 36px arial,sans-serif; color: #000; margin: 0 0 5px; }
.homepage div.row { clear: both; min-width: 800px; }
.homepage div.box { width: 250px; margin: 10px 10px 5px 0; float: left; background: #fff; }
.homepage div.box h2 { font: 16px arial,sans-serif; padding: 3px 5px; margin: 0 0 3px; background: #203d79; color: #fff; }
.homepage #content { margin: 0 10px 15px; padding: 5px 10px 0 0; }
.homepage #footer { clear: both; font: 12px verdana,sans-serif; text-align: center; width: 800px; margin: 15px 0; padding: 10px 0 0; }
.normal { background: #eee; }
.normal #content { background: #fff; margin: 0 10px 15px 0; padding: 10px 10px 0 10px; width: 700px; border-right: 1px solid #ccc; border-bottom: 1px solid #ccc; }
.normal #footer { font: 11px verdana,sans-serif; height: 160px; text-align: center; width: 700px; margin: 5px 0 15px; }
</style>

</head>
<body class="normal">


<div id="header"><a href="/">Adrian Holovaty</a> &gt; <a href="/writing/">Writing</a></div>


<div id="content">
<h1>Introducing templatemaker</h1>
<p class="intro">Written by <a href="/">Adrian Holovaty</a> on July 6, 2007</p>

<div id="article"><!--pythonfeed-->

<p>I've just released <a href="http://code.google.com/p/templatemaker/">templatemaker</a>, which is something I've been hacking on and off (mostly off) the past couple of months. It's a Python library for extracting data from similarly formatted text strings.</p>

<p>What the heck does that mean?</p>

<p>Well, say you want to get the raw data from a bunch of Web pages that use the same template -- like <a href="http://www.yelp.com/biz/rp17Dfjdh7JR4GGZwj6nqg">restaurant</a> <a href="http://www.yelp.com/biz/8vFJH_paXsMocmEO_KAa3w">reviews</a> on Yelp.com, for instance. You can give templatemaker an arbitrary number of HTML files, and it will create the "template" that was used to create those files. ("Template," in this case, means a string with a number of "holes" in it, where the holes represent the parts of the page that change.) Once you've got the template, you can then give it any HTML file that <em>uses</em> that same template, and it will give you the raw data: "The value for hole 1 is 'July 6, 2007', the value for hole 2 is 'blue'," etc.</p>

<p>If this still doesn't make sense, have a look at the <a href="http://code.google.com/p/templatemaker/">example usage</a> and <a href="http://templatemaker.googlecode.com/svn/trunk/README.TXT">documentation</a>.</p>

<p>I searched but couldn't find anything else that did this. I heard from a few folks that Google and Yahoo have internal tools that do this sort of thing, probably in a much more robust fashion, but I'm unaware of any open-source code that does this. (Disclaimer: I have not checked <a href="http://cpan.org/">CPAN</a>. CPAN probably has five implementations of this functionality.)</p>

<p>The library uses a longest-common substring algorithm, which is implemented in C, via Python's C interface, for performance. (My original implementation was in Python, and it was noticeably slow in that area.) This means you need to compile it in order to use it, but it has no dependencies, so it should be quick and easy.</p>

<p>You can get templatemaker via its <a href="http://code.google.com/p/templatemaker/source">Subversion repository on Google Code</a>. I'm releasing it under the New BSD License. There's also a <a href="http://groups.google.com/group/templatemaker">mailing list</a>, for the fun of it.</p>

<p>I'm interested in seeing what uses people have for this, and I'm also planning on adding a ton more features. And I'd love it if a competent C programmer could take a look at the C bits to make sure everything is kosher -- it's been a while since I've written C code. :-)</p>

<p>Let me know if you have any use for this, and may the suggestions and patches flow freely!</p></div>

<div id="comments">
	
		<h2>Comments</h2>

		
		<div class="comment">
		<h3>Posted by <a href="http://breakawaywd.com" rel="nofollow">Andy Vaughn</a> on July 6, 2007 at 2:13 a.m.:</h3>
		<p>Sounds useful. I look forward to following the developments.</p><p>Thanks for the contribution!</p><p>Andy</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Alberto on July 6, 2007 at 4:27 a.m.:</h3>
		<p>Really useful piece of code. You're my favourite hacker! Just a curiosity: what os you use for Python/Django development? OSX, Ubuntu, Windows? And what is your text-editor of choice?</p><p>Thanks</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://theyworkforyou.co.nz/" rel="nofollow">Rob</a> on July 6, 2007 at 6:55 a.m.:</h3>
		<p>I think scRUBYt! might do something similiar; you give it an example, and it generates the generic extraction code: <a href="http://www.rubyrailways.com/data-extraction-for-web-20-screen-scraping-in-rubyrails-episode1"> Data Extraction for Web 2.0: Screen Scraping in Ruby/Rails, Episode 1 (scRUBYt! tutorial)</a></p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://oak.conncoll.edu/mswer/blog/" rel="nofollow">Matt</a> on July 6, 2007 at 10:01 a.m.:</h3>
		<p>This looks great, can't wait to play  around with it. <a href="http://sprog.sourceforge.net/index.html">Sprog</a> might be similar but since I'm not a 'nix user, I never really took the time to use it.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.holovaty.com/" rel="nofollow">Adrian</a> on July 6, 2007 at 10:27 a.m.:</h3>
		<p>Rob: Yeah, I looked at scRUBYt but got confused by its meandering documentation. It appears to require the user to specify XPath expressions, whereas I wanted templatemaker to work on arbitrary text (i.e., not just HTML) and need as little user intervention as possible. scRUBYt seems more akin to <a href="http://www.crummy.com/software/BeautifulSoup/">BeautifulSoup</a>.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.stimuli.com.br/" rel="nofollow">Arthur Debert</a> on July 6, 2007 at 11:43 a.m.:</h3>
		<p>This is great.</p><p>This has saved a few hours. Now, when I receive from the designer the HTML "sample" pages for a project, I can abstract the common structure to make my django templates very quickly, without having to search through a lot of tags and nested divs. Sweet!</p><p>Thanks!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.dougma.com/" rel="nofollow">Doug Napoleone</a> on July 6, 2007 at 11:56 a.m.:</h3>
		<p>the evil doer in me just had an evil though. This as a Django middleware + the wget middleware and a few tweaks could be used as a powerful generalized phishing framework. *shiver*</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Vince P. on July 6, 2007 at 12:13 p.m.:</h3>
		<p>What you're talking about is traditionally called 'report mining' and isn't usually applied to HTML.  These concepts have been around since the early 90's at least in products like Monarch (http://monarch.datawatch.com/datawatch-report-mining-server.asp).  Well formed *ML should make this task even easier to accomplish than it was the bad old days of report ripping.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.holovaty.com/" rel="nofollow">Adrian</a> on July 6, 2007 at 12:27 p.m.:</h3>
		<p>Vince P.: Oooh, thanks for that info -- that's very helpful. I'll look into "report mining."</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.apgwoz.com" rel="nofollow">Andrew Gwozdziewycz</a> on July 6, 2007 at 12:33 p.m.:</h3>
		<p>Sounds to me like you implemented http://www.dapper.net/ . Which is great! I've been wanting to implement something like this for ages, but never had the time, or killer use to actually attempt to implement it.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://adomas.org/" rel="nofollow">Adomas</a> on July 6, 2007 at 1:17 p.m.:</h3>
		<p>Nice!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.spesh.com/danny/" rel="nofollow">danny</a> on July 6, 2007 at 2:08 p.m.:</h3>
		<p>There's http://www.annocpan.org/~AUTRIJUS/Template-Generate-0.04/lib/Template/Generate.pm but I'm not sure how far it got.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Anton on July 6, 2007 at 2:36 p.m.:</h3>
		<p>Have a look at <a href="http://www.unixuser.org/~euske/python/webstemmer/">webstemmer</a> that provides a very similar functionality and is written in Python :)</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://geekfun.com" rel="nofollow">eas</a> on July 6, 2007 at 2:37 p.m.:</h3>
		<p>If I'm understanding you right, what you've done is pretty sweet.  BeautifulSoup is cool, but I'm lazy:).</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://pauladamsmith.com/" rel="nofollow">Paul Smith</a> on July 6, 2007 at 3:24 p.m.:</h3>
		<p>Hey Adrian, I think you're missing a line in your setup.py that copies templatemaker.py to site-packages on install. I <a href="http://code.google.com/p/templatemaker/issues/list">filed a ticket</a>.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://code.aaronbentley.com" rel="nofollow">Aaron Bentley</a> on July 6, 2007 at 3:32 p.m.:</h3>
		<p>Very cool idea.  I'm not sure the C module is really necessary, though.  Python supplies its own sequence matching facility: difflib.SequenceMatcher.  In my experiece, its performance is pretty good.</p><p>You might also want to consider using a longest common <strong>subsequence</strong> matcher.  That can often perform produce better results than a longest common substring matcher, because it isn't confused by spurious similarities as easily.  <a href="http://bazaar-vcs.org">Bazaar</a> has a library to do longest common subsequence matching, written in Python.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://johnzeratsky.com" rel="nofollow">John Zeratsky</a> on July 6, 2007 at 3:50 p.m.:</h3>
		<p>Fantastic, Adrian. Just the other day, I was thinking about how mining data from HTML is so manual and labor-intensive.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.holovaty.com/" rel="nofollow">Adrian</a> on July 6, 2007 at 4:35 p.m.:</h3>
		<p>Paul: Thanks -- it's fixed now.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://nokrev.com" rel="nofollow">Jeff Wheeler</a> on July 6, 2007 at 7:54 p.m.:</h3>
		<p>This is absolutely wonderful! I've longed for this functionality, thank you very much!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://tech.natemurray.com" rel="nofollow">Nate Murray</a> on July 6, 2007 at 8:18 p.m.:</h3>
		<p>You mentioned that you'd never seen anything like this. What you're doing is called "wrapper induction" and theres about four or five big algorithms of varying usefulness:</p><p>http://citeseer.ist.psu.edu/kushmerick97wrapper.html - Probably the most referenced paper on WI.</p><p>A patented WI algorithm is Stalker. ( http://citeseer.ist.psu.edu/muslea98stalker.html )</p><p>Probably my favorite is RoadRunner. It's by some Italian guys and it actually has open source: ( http://citeseer.ist.psu.edu/crescenzi01roadrunner.html )</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://petitio-principii.com/" rel="nofollow">doug smith</a> on July 6, 2007 at 8:23 p.m.:</h3>
		<p>a tool for EveryBlock me thinks :)    love django -thanks for sharing.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by ndg on July 6, 2007 at 9:26 p.m.:</h3>
		<p>Any chance of including the Python version of the substring matcher as a fallback for <a href="http://www.microsoft.com/windows/">those of us</a> who can't compile the C? :(</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Matt Baker (PDX) on July 6, 2007 at 10:51 p.m.:</h3>
		<p>How cool! How does it learn? I suppose I should just download the code and answer that for myself. I've been wanting to build a similar tool for data mining for some time now, what better way to break data out of the formatting and into a DB? I'm sure it's usefulness in that department is no coincidence at all ;)</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.holovaty.com/" rel="nofollow">Adrian</a> on July 6, 2007 at 11:07 p.m.:</h3>
		<p>Nate Murray: Thanks *very much* for passing those links along -- this is great stuff.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://phaedo.cx" rel="nofollow">Clint Ecker</a> on July 6, 2007 at 11:28 p.m.:</h3>
		<p>Lovely! I'm a huge BeautifulSoup user.  While it's pretty powerful, I find the process of getting my code set up to be pretty tedious.  This will help me bunches. Thanks!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.coty.ws" rel="nofollow">Coty Rosenblath</a> on July 6, 2007 at 11:59 p.m.:</h3>
		<p>Looks cool. There is a Ruby project that I ran across a while back that you might find interesting: <a href="http://ariel.rubyforge.org/">Ariel</a>. I think it is a closer fit than scRUBYt et al. It also has a learning phase and aspires to working on text in general rather than only markup. It requires a bit more setup to learn the structure of a document, but I believe it allows for the extraction of richer structures. Its <a href="http://ariel.rubyforge.org/theory.html">theory page</a> references a <a href="http://citeseer.ist.psu.edu/muslea01hierarchical.html">paper on wrapper induction</a>, too, which based on Nate's comment suggests that it is in the same space.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Tucker on July 8, 2007 at 10:18 p.m.:</h3>
		<p>Hello,</p><p>I just played with it for a bit and I think the answer is "no", but does it handle learning variable length lists?  For example, if I have text like:</p><p>&lt;ul&gt;</p><p>  &lt;li&gt;foo&lt;/li&gt;</p><p>  &lt;li&gt;bar&lt;/li&gt;</p><p>  &lt;li&gt;baz&lt;/li&gt;</p><p>&lt;/ul&gt;</p><p>where there can be a variable number of items in the list, can template maker automatically learn a template and extract the strings?</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.holovaty.com/" rel="nofollow">Adrian</a> on July 8, 2007 at 11:52 p.m.:</h3>
		<p>Tucker: No, it doesn't do that. That'd be a cool feature, but it's sort of out of scope of what templatemaker is intended to do.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://www.geekbyday.com" rel="nofollow">Mason</a> on July 9, 2007 at 1:14 a.m.:</h3>
		<p>Neat tool :)</p><p>You might want to check out some of the projects going on at the Simile research group at MIT.  I'm working there part-time doing research these days, and there's some pretty exciting stuff that we're developing.  Particularly, Solvent and Piggy Bank are really neat implementations of a variant of your idea.</p><p>http://simile.mit.edu/wiki/Solvent</p><p>http://simile.mit.edu/piggy-bank/</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Jeremy Dunck on July 9, 2007 at 2:44 a.m.:</h3>
		<p>@Mason</p><p>Yeah, Simile is doing a lot of interesting stuff.  I bet it's a fun place to work!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://blog.murkt.org.ua/" rel="nofollow">Murkt</a> on July 9, 2007 at 5:09 a.m.:</h3>
		<p>Adrian, we're sending the ray of love to you from Ukraine. Thanks, great tool!</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Marcus on July 11, 2007 at 3:01 a.m.:</h3>
		<p>I found another  python version of a longest common subsequence matcher (from the maker of webstemmer mentioned by Anton above).</p><p>http://www.unixuser.org/~euske/python/lcs.py</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Tom Lynn on July 12, 2007 at 8:39 a.m.:</h3>
		<p>The following CPAN modules seem to be recommended:</p><p>   * <a href="http://search.cpan.org/~adamk/Template-Toolkit-2.16/lib/Template.pm">Template toolkit</a></p><p>   * <a href="http://search.cpan.org/~autrijus/Template-Generate/lib/Template/Generate.pm">Template::Generate</a></p><p>   * <a href="http://search.cpan.org/~autrijus/Template-Extract-0.40/lib/Template/Extract.pm">Template::Extract</a></p><p>(from the comments when James Tauber asked about this on his blog:</p><p>   <a href="http://jtauber.com/blog/2007/02/02/reverse_templates">http://jtauber.com/blog/2007/02/02/reverse_templates</a>)</p>
		</div>
		
		<div class="comment">
		<h3>Posted by Dan Schultz on July 17, 2007 at 3:20 p.m.:</h3>
		<p>Hey Adrian, </p><p>I figure it can't hurt to join the list of people saying that this is a very cool tool:)</p><p>out of curiosity - does you know if there is a similar type of thing that exists for PHP?  Sorry if I'm not allowed to use that acronym around these parts...</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://scrubyt.org" rel="nofollow">Peter Szinek</a> on July 26, 2007 at 3:41 a.m.:</h3>
		<p>I guess I am a bit late to the party, but anyway... Here is a simpe yelp <strong>learning</strong> extractor in <a href='http://scrubyt.org'>scRUBYt!</a>:</p><p><a href='http://pastie.caboo.se/82375'>http://pastie.caboo.se/82375</a> (as you can see, you need no XPaths or any other specific knowledge, just simple examples)</p><p>Which returns this result:</p><p><a href='http://pastie.caboo.se/82376'>http://pastie.caboo.se/82376</a> (of course the &amp;lt;address&amp;gt; tag could be mined further)</p><p>To turn it into a <strong>production</strong> extractor, you export it, yielding:</p><p><a href='http://pastie.caboo.se/82378'>http://pastie.caboo.se/82378</a></p><p>Now this production extractor can be used for to extract data from the other pages of the same site (tried with the pizza example you provided).</p><p>I hope this makes things a little bit more clear ;-) What you have seen is maybe 20% of scRUBYt!'s functionality, but it gives an idea about learning/production etc.</p>
		</div>
		
		<div class="comment">
		<h3>Posted by <a href="http://soundstripe.net" rel="nofollow">Steven James</a> on July 27, 2007 at 8:03 a.m.:</h3>
		<p>I really could have used this about a month ago (wrote a custom parser instead); too bad I just found it today. I'm sure another similar task will come up, and this looks like great work.</p>
		</div>
		
	

	
		<p class="note">
			
				Comments have been turned off for this entry.
			
		</p>
	
</div>

</div>

<div id="footer">Site hosted by:<br><a href="http://mediatemple.net/"><img src="http://70.32.81.236/images/mt-160x30-lt.gif" height="30" width="160" alt="Media Temple"></a></div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-3457300-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>
</body>
</html>
