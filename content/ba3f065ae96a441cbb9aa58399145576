<TITLE> OOSC 2: USING INHERITANCE WELL</TITLE>

<script language="JavaScript" src="/include/headers/archive.eiffel/drop_menu/menu.js"></script>
<script language="JavaScript" src="/include/headers/archive.eiffel/drop_menu/menu_items.js"></script>
<script language="JavaScript" src="/include/headers/archive.eiffel/drop_menu/menu_tpl.js"></script><html>
<script language="JavaScript" src="/include/scripts/eiffel/popup.js"></script>
  <head>
		<meta name="description" content="Home page for object technology, Eiffel, software reuse, components, O-O training and consulting, with extensive online documentation,tutorials, articles and manuals.">
		<meta name="keywords" content="object-oriented, OO, O-O, Java, Eiffel, C++, Smalltalk, software, reuse, reusability, dotnet, .NET, .net, software reusability, logiciel, quality, contract, Design by Contract, programming by contract, BON, B.O.N., components, object-oriented analysis, object-oriented design, software components, componentware, COM, COM3, OLE, ActiveX, objet, objets, objekt, ogetto, ogetti, programmation par objets, programmation objets, programmazione per oggetti, technologie objet, technologie objets, object resource center, object technology resource center, object-oriented programming, objekt-orientierte programmierung, CORBA, DAIS, OMG, CASE, SDK, development environment, software development kit, business modeling, ISE, Interactive Software Engineering, Bertrand Meyer, libraries, genie logiciel, software engineering, large-scale software engineering, UML, training, consulting">
    	<link rel="stylesheet" type="text/css" media="screen" href="/include/styles/eiffel/default.css">
  </head>
  <body>
	  <table class="header_table" cellspacing="0" cellpadding="0" width="90%" border="0">
	  	<!-- Top row containing icon and buttons -->
		<tr>
		  <td valign="top"><a href="/"><img src="/images/new_eiffel/header_mainarea.jpg"></a></td>
		  <td valign="top">
		  	<table height="100" width="100%" cellpadding="0" cellspacing="0">
				<tr>
					<td width="100" align="right"><a href="/downloads/"><img src="/images/new_eiffel/header_download.png"></a></td>
			  	</tr>
			  	<tr>
			  		<td width="100" align="right"><a href="/search/search.html"><img src="/images/new_eiffel/header_search.png"></a></td>
			  	</tr>
			  	<tr>
			  		<td width="100" align="right"><a href="/purchase/"><img src="/images/new_eiffel/header_purchase.png"></a></td>
			  	</tr>
			</table>
		  </td>
		</tr>
		<tr width="100%" height="26">
			<td bgcolor="#003063" colspan="2">&nbsp;</td>
		</tr>
		<tr width="100%" height="1">
			<td bgcolor="white"></td>
		</tr>
		<tr width="100%" height="31">
			<td bgcolor="#5294CC" colspan="2">&nbsp;</td>
		</tr>
		<tr>
			<td>
				<script language="JavaScript">
					<!--//
					new menu (MENU_ITEMS, MENU_POS);
					//-->
				</script>
				<script language="JavaScript">
					<!--//
					new menu (SUB_MENU_ITEMS, SUB_MENU_POS);
					//-->
				</script>
			</td>
</tr>
	</table>
<table border="0" width="100%" id="table1" bgcolor="#FF5E5E">
	<tr>
		<td><center><font size="4">This site contains older material on Eiffel. For the main Eiffel page, see <a href="http://www.eiffel.com">http://www.eiffel.com</a>.</font><center></td>
	</tr>
</table>
<table cellspacing="10"><tr><td>


<H1>
<I>Object-Oriented
<BR>
Software Construction,<BR></I>
second edition:<BR><BR>
USING INHERITANCE WELL <BR>
<BR>
Bertrand Meyer, ISE </H1>
<BR>
<FONT COLOR="#000080"><H2>Note</H2></FONT>
<P>
This text is taken from chapter 25 of the book
<A HREF="/doc/oosc/page.html">Object-Oriented Software Construction,
second edition</A>, Prentice Hall, 1997.
<P>
For this particular chapter the version used is in fact not the final one,
although it is close. It was made available as a draft in connection with a
shorter article on the same subject (how to use inheritance well) in the Object
Technology department of <I>IEEE Computer</I>. We apologize for the obvious
formatting deficiencies (margin notes appearing as improperly clipped inserts,
figures sometimes clipped too). This text is only intended to give an idea of
the actual book, which is of course
properly formatted, using two colors and many figures; the accompanying CD has
everything under the same format as the book, with all cross-references
transformed into clickable hyperlinks.
<P>
&copy; Bertrand Meyer, 1997. Duplication and distribution prohibited.
<P>
<HR>
<BR><BR>
<H2>Table of Contents</H2> <P>
<A HREF="INTRO.html">
25 Using inheritance well <STRONG>(START HERE)</STRONG></A>


<UL> <UL> <A HREF="section_01.html#HDR1"> 25.1   HOW NOT TO USE
INHERITANCE</A>

<BR> <A HREF="section_02.html#HDR2"> 25.2   WOULD YOU RATHER BUY OR
INHERIT?</A>

<UL> <A HREF="section_02.html#HDR3">To have and to be</A>

<BR> <A HREF="section_02.html#HDR4">The rule of change</A>

<BR> <A HREF="section_02.html#HDR5">The polymorphism rule</A>

<BR> <A HREF="section_02.html#HDR6">Summary</A> </UL>

<A HREF="section_03.html#REF70348"> 25.3   AN APPLICATION: THE HANDLE
TECHNIQUE</A>

<BR> <A HREF="section_04.html#HDR7"> 25.4   TAXOMANIA</A>

<BR> <A HREF="section_05.html#HDR8"> 25.5   USING INHERITANCE: A
TAXONOMY OF TAXONOMY</A>

<UL> <A HREF="section_05.html#HDR9">Scope of the rules</A>

<BR> <A HREF="section_05.html#HDR10">Wrong uses</A>

<BR> <A HREF="section_05.html#REF28449">General taxonomy</A>

<BR> <A HREF="section_05.html#HDR11">Subtype inheritance</A>

<BR> <A HREF="section_05.html#HDR12">Restriction inheritance</A>

<BR> <A HREF="section_05.html#HDR13">Extension inheritance</A>

<BR> <A HREF="section_05.html#HDR14">A proper mathematical model</A>

<BR> <A HREF="section_05.html#HDR15">Variation inheritance</A>

<BR> <A HREF="section_05.html#HDR16">Uneffecting</A>

<BR> <A HREF="section_05.html#HDR17">Reification inheritance</A>

<BR> <A HREF="section_05.html#HDR18">Structure inheritance</A>

<BR> <A HREF="section_05.html#HDR19">Implementation inheritance</A>

<BR> <A HREF="section_05.html#HDR20">Facility inheritance</A>

<BR> <A HREF="section_05.html#HDR21">Using inheritance with deferred
and effective classes</A> </UL>

<A HREF="section_06.html#HDR22"> 25.6   ONE MECHANISM, OR MORE?</A>

<BR> <A HREF="section_07.html#REF92241"> 25.7   SUBTYPE INHERITANCE AND
DESCENDANT HIDING</A>

<UL> <A HREF="section_07.html#HDR23">Defining a subtype</A>

<BR> <A HREF="section_07.html#HDR24">Multiple views</A>

<BR> <A HREF="section_07.html#HDR25">Enforcing the subtype view</A>

<BR> <A HREF="section_07.html#HDR26">The need for descendant hiding</A>

<BR> <A HREF="section_07.html#HDR27">Avoiding descendant hiding</A>

<BR> <A HREF="section_07.html#HDR28">Using descendant hiding</A>

<BR> <A HREF="section_07.html#HDR29">Taxonomies and their
limitations</A>

<BR> <A HREF="section_07.html#HDR30">Using descendant hiding</A> </UL>

<A HREF="section_08.html#REF50283"> 25.8   IMPLEMENTATION
INHERITANCE</A>

<UL> <A HREF="section_08.html#HDR31">Arrayed stacks</A>

<BR> <A HREF="section_08.html#HDR32">The marriage of convenience</A>

<BR> <A HREF="section_08.html#HDR33">It feels so good, but is it
wrong?</A>

<BR> <A HREF="section_08.html#HDR34">Doing without inheritance</A>
</UL>

<A HREF="section_09.html#REF46516"> 25.9   FACILITY INHERITANCE</A>

<UL> <A HREF="section_09.html#HDR35">Using character codes</A>

<BR> <A HREF="section_09.html#HDR36">Iterators</A>

<BR> <A HREF="section_09.html#HDR37">Forms of facility inheritance</A>

<BR> <A HREF="section_09.html#HDR38">Understanding facility
inheritance</A> </UL>

<A HREF="section_10.html#HDR39"> 25.10   MULTIPLE CRITERIA AND VIEW
INHERITANCE</A>

<UL> <A HREF="section_10.html#HDR40">Classifying through multiple
criteria</A>

<BR> <A HREF="section_10.html#HDR41">View inheritance</A>

<BR> <A HREF="section_10.html#HDR42">Is view inheritance
appropriate?</A>

<BR> <A HREF="section_10.html#HDR43">Criteria for view inheritance</A>
</UL>

<A HREF="section_11.html#HDR44"> 25.11   HOW INHERITANCE STRUCTURES ARE
PRODUCED</A>

<UL> <A HREF="section_11.html#HDR45">Abstraction and specialization</A>
<BR> <A HREF="section_11.html#NEW0">The arbitrariness of classifications</A>
<BR> <A HREF="section_11.html#NEW1">Induction and deduction</A>

<BR> <A HREF="section_11.html#HDR46">Varieties of class abstraction</A>

<BR> <A HREF="section_11.html#HDR47">Client independence</A>

<BR> <A HREF="section_11.html#HDR48">Elevating the level of
abstraction</A> </UL>

<A HREF="section_12.html#HDR49"> 25.12   A SUMMARY VIEW: USING
INHERITANCE WELL</A>

<BR> <A HREF="section_13.html#HDR50"> 25.13   KEY CONCEPTS INTRODUCED
IN THIS CHAPTER</A>

<BR> <A HREF="section_14.html#HDR51"> 25.14   BIBLIOGRAPHICAL NOTES</A>

<BR> <A HREF="penn.html#HDR52"> 25.15   APPENDIX: A HISTORY OF
TAXONOMY</A>

<BR> <A HREF="section_16.html#HDR53">  EXERCISES</A>

<UL> <A HREF="section_10.html"> E25.1   Arrayed stacks</A>

<BR> <A HREF="section_10.html"> E25.2   Meta-taxonomy</A>

<BR> <A HREF="section_10.html"> E25.3   The stacks of Hanoi</A>

<BR> <A HREF="section_10.html"> E25.4   Functional variation
inheritance</A>

<BR> <A HREF="section_10.html"> E25.5   Classification
examples</A>

<BR> <A HREF="section_10.html"> E25.6   Where do iterators
belong?</A>

<BR> <A HREF="section_10.html"> E25.7   Module and type
inheritance</A> </UL> </UL> </UL>


<table width="100%">
	<tr>
		<td class="footer">
			<hr noshade size="1" width="100%">
				&copy; 1985-2010 Eiffel Software. All rights reserved. -- <a href="/general/privacy_policy.html">Privacy Policy</a>
		</td>
	</tr>
</table>
<br>
</body>
</html>

