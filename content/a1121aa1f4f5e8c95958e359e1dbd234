<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">

<head profile="http://gmpg.org/xfn/11">
	<title> Turducken |  Impromptus</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<link type="text/css" href="http://imprompt.us/wp-content/themes/precious/css/global.css" media="screen" rel="stylesheet" />
	<link type="text/css" href="http://imprompt.us/wp-content/themes/precious/style.css" media="screen" rel="stylesheet" />
	<!--[if lte IE 7]><link type="text/css" href="http://imprompt.us/wp-content/themes/precious/style-ie.css" media="screen" rel="stylesheet" /><![endif]-->
	<link type="text/css" href="http://imprompt.us/wp-content/themes/precious/css/print.css" media="print" rel="stylesheet" />
			<link rel='shortcut icon' type='image/x-icon' href='http://imprompt.us/wp-content/themes/precious/gfx/favicon.ico' />
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://imprompt.us/feed/" />
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://imprompt.us/feed/rss/" />
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://imprompt.us/feed/atom/" />
	<link rel="pingback" href="http://imprompt.us/xmlrpc.php" />
		<link rel='archives' title='December 2010' href='http://imprompt.us/2010/12/' />
	<link rel='archives' title='October 2010' href='http://imprompt.us/2010/10/' />
	<link rel='archives' title='September 2010' href='http://imprompt.us/2010/09/' />
	<link rel='archives' title='July 2010' href='http://imprompt.us/2010/07/' />
	<link rel='archives' title='June 2010' href='http://imprompt.us/2010/06/' />
	<link rel='archives' title='May 2010' href='http://imprompt.us/2010/05/' />
	<link rel='archives' title='April 2010' href='http://imprompt.us/2010/04/' />
	<link rel='archives' title='March 2010' href='http://imprompt.us/2010/03/' />
	<link rel='archives' title='February 2010' href='http://imprompt.us/2010/02/' />
	<link rel='archives' title='January 2010' href='http://imprompt.us/2010/01/' />
	<link rel='archives' title='December 2009' href='http://imprompt.us/2009/12/' />
	<link rel='archives' title='November 2009' href='http://imprompt.us/2009/11/' />
	<link rel='archives' title='October 2009' href='http://imprompt.us/2009/10/' />
	<link rel='archives' title='September 2009' href='http://imprompt.us/2009/09/' />
	<link rel='archives' title='January 2008' href='http://imprompt.us/2008/01/' />
	<link rel='archives' title='November 2007' href='http://imprompt.us/2007/11/' />
	<link rel='archives' title='August 2007' href='http://imprompt.us/2007/08/' />
	<link rel='archives' title='June 2007' href='http://imprompt.us/2007/06/' />
	<link rel='archives' title='May 2007' href='http://imprompt.us/2007/05/' />
	<link rel='archives' title='March 2007' href='http://imprompt.us/2007/03/' />
	<link rel='archives' title='February 2007' href='http://imprompt.us/2007/02/' />
	<link rel='archives' title='January 2007' href='http://imprompt.us/2007/01/' />
	<link rel='archives' title='October 2006' href='http://imprompt.us/2006/10/' />
	<link rel='archives' title='September 2006' href='http://imprompt.us/2006/09/' />
	<link rel='archives' title='June 2006' href='http://imprompt.us/2006/06/' />
	<link rel='archives' title='May 2006' href='http://imprompt.us/2006/05/' />
	<link rel='archives' title='April 2006' href='http://imprompt.us/2006/04/' />
	<link rel='archives' title='March 2006' href='http://imprompt.us/2006/03/' />
	<link rel='archives' title='February 2006' href='http://imprompt.us/2006/02/' />
	<link rel='archives' title='January 2006' href='http://imprompt.us/2006/01/' />
	<link rel='archives' title='December 2005' href='http://imprompt.us/2005/12/' />
	<link rel='archives' title='November 2005' href='http://imprompt.us/2005/11/' />
	<link rel='archives' title='October 2005' href='http://imprompt.us/2005/10/' />
	<link rel='archives' title='September 2005' href='http://imprompt.us/2005/09/' />
	<link rel='archives' title='August 2005' href='http://imprompt.us/2005/08/' />
	<link rel='archives' title='July 2005' href='http://imprompt.us/2005/07/' />
	<link rel='archives' title='June 2005' href='http://imprompt.us/2005/06/' />
	<link rel='archives' title='May 2005' href='http://imprompt.us/2005/05/' />
	<link rel='archives' title='April 2005' href='http://imprompt.us/2005/04/' />
	<link rel='archives' title='March 2005' href='http://imprompt.us/2005/03/' />
	<link rel='archives' title='February 2005' href='http://imprompt.us/2005/02/' />
	<link rel='archives' title='January 2005' href='http://imprompt.us/2005/01/' />
	<link rel='archives' title='December 2004' href='http://imprompt.us/2004/12/' />
		<link rel="alternate" type="application/rss+xml" title="Impromptus &raquo; Turducken Comments Feed" href="http://imprompt.us/2007/turducken/feed/" />
<link rel='stylesheet' id='openid-css'  href='http://imprompt.us/wp-content/plugins/openid/f/openid.css?ver=519' type='text/css' media='all' />
<link rel='stylesheet' id='codecolorer-css'  href='http://imprompt.us/wp-content/plugins/codecolorer/codecolorer.css?ver=0.9.8' type='text/css' media='screen' />
<script type='text/javascript' src='http://imprompt.us/wp-includes/js/comment-reply.js?ver=20090102'></script>
<script type='text/javascript' src='http://imprompt.us/wp-includes/js/jquery/jquery.js?ver=1.4.2'></script>
<script type='text/javascript' src='http://imprompt.us/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.1.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://imprompt.us/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://imprompt.us/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Impromptus' href='http://imprompt.us/' />
<link rel='start' title='drowning in data' href='http://imprompt.us/2004/drowning-in-data/' />
<link rel='prev' title='difficult' href='http://imprompt.us/2007/difficult/' />
<link rel='next' title='storage' href='http://imprompt.us/2007/storage/' />
<meta name="generator" content="WordPress 3.0.3" />
<link rel='canonical' href='http://imprompt.us/2007/turducken/' />
<link rel='shortlink' href='http://imprompt.us/?p=95' />
<link rel="stylesheet" href="http://disqus.com/stylesheets/impromptus/disqus.css?v=2.0" type="text/css" media="screen" /><!-- Google Analytics Tracking by Google Analyticator 6.1.1: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-1497229-1']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
        <meta name="google-site-verification" content="T6UfhUNxFM5tvxzRCIe6WjBZzcywu4aOXBYILvjV2Ok" />
</head>

<body id="top" class="single single-post postid-95 unknown">

	<div id="wrap">

		<ul id="accessnav">
			<li><a href="#content" title="Skip to Content" accesskey="2">Content</a></li>
			<li><a href="#sidebar" title="Skip to Sidebar" accesskey="3">Sidebar</a></li>
							<li><a href="#comments" title="Skip to Comments" accesskey="4">Comments</a></li>
				
		</ul>

		

		<div id="header">
			<h1><a accesskey="h" href="http://imprompt.us/">
			Impromptus</a></h1>
			<p>Computer Science and Teaching and Other Ancillary Things</p>
		</div>


		


		<div id="content">










	<div id="post-95" class="post-95 post type-post hentry category--2-2">

		<h2 id="pagetitle"><a href="http://imprompt.us/2007/turducken/" rel="bookmark">Turducken</a></h2>
	
		 
		<div class="postcontent">
			<p>The hard part of computer science is not the programming, and it is not the initial ideas, it is the unshakeable consistency of the application of those ideas, and the way that we stuff these ideas inside each other to make towering layer cakes.</p>
<p>I see this when I teach &#8211; it is easy to explain what an</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;"><div class="text codecolorer">if</div></div>
<p>statement is and how it works, it is easy to explain</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;"><div class="text codecolorer">while</div></div>
<p>, and although</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;"><div class="text codecolorer">for</div></div>
<p>is slightly trickier it still isn&#8217;t that bad.  The difficulty comes when people have to write a program that requires them to put an if statement inside of a loop inside of an if statement.  I field questions like <q>Can I put an &#8220;if&#8221; inside of a &#8220;while&#8221;?  What about a &#8220;while&#8221; inside of an &#8220;if&#8221;?</q> all the time.  It does no good to explain that you can put anything inside of anything else, because the implications of &#8220;anything&#8221; and &#8220;anything else&#8221; are too vast to pick up at first grab.</p>
<p>Similarly, it is easy to explain what an integer or floating point number or string is.  And although it is slightly trickier, explaining lists and dictionaries is not too bad either.  Explaining arrays of arrays and dictionaries of arrays of dictionaries is where people get lost.  It&#8217;s this same problem as before &#8211; although you may be told that a list can be a list of anything, and that the value stored in a dictionary may be anything, the full implications are hard to understand.  Matrices and two dimensional dictionaries and the like are good to know, but they are very hard to understand.  The fact that you can make a list of anything, including other lists, is just too much to absorb very quickly.</p>
<p>The next thing that comes up is functions.  Functions can contain any code, including calls to other functions.  This is crazy for people.  They just sort of freak out when they see functions calling each other and nesting inside of each other.  They try to hold it all in their head and fail &#8211; which is, of course, the whole reason that they broke the problem down into functions in the first place.  It&#8217;s not just that you have to write a function, it&#8217;s that you have to write subfunctions, and subsubfunctions, and so on.</p>
<p>This model of confusingness &#8211; that one layer is easy, and multiple layers is hard &#8211; serves as a pretty good illustration of why recursion is so unnatural for people.  Because if a function can contain any code, including calls to other functions, then it can also contain a call to itself, with references to its own data.  And a nauseous <a href="http://en.wikipedia.org/wiki/Ouroboros">ouroborous</a>-esque feeling is the natural response to finding out about this.  Recursion is hard to understand and hard to explain, because the whole concept requires a notion of consistency and reliability that is completely alien to our understanding of the physical world.</p>
<p>If we feed a stereo signal through a microphone onto a tape and then play the tape and record it onto another tape, and then repeat this process again and again, then eventually all that gets transferred from tape to tape is an annoying fuzz sound.  With computers the information and functions are perfectly reliable, and it is often true that in order to solve a problem we must do the digital equivalent of transferring data from place to place hundreds of times, and often in a weird recursive manner.  The fact that this is impossible in the real world and so common as to be beneath notice in computers makes for a few confusing sessions as people attempt to adapt to this new reality.</p>
<p>We stuff data in arrays inside of dictionaries, and then analyze it using nested loops and recursive functions.  We do this every day in computer science.  Teaching someone to program is a nice illustration of how impossibly weird this activity actually is, and how foreign it is the first time.</p>
<p>Computer programming is strange, and stuffing arrays inside of dictionaries inside of if statements and loops and recursive functions is initially just as unnatural as <a href="http://en.wikipedia.org/wiki/Turducken">stuffing a chicken inside a duck inside a turkey</a>.  Much like the turducken, though, computer science can yield some tasty results once you go and give it a try.</p>
	
					</div>
	
	
		    
		<div class="postmeta">
			<p>Published 1 August 2007</p>
			<p>Filed in <a href="http://imprompt.us/category/-2-2/" title="View all posts in " rel="category tag"></a> </p>
		</div>
	

	</div>


<div id="disqus_thread">
					<div id="dsq-content">
			<ul id="dsq-comments">
					<li id="dsq-comment-1185">
					<div id="dsq-comment-header-1185" class="dsq-comment-header">
						<cite id="dsq-cite-1185">
	http://mattezell.info							<span id="dsq-author-user-1185">Matt</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1185" class="dsq-comment-body">
						<div id="dsq-comment-message-1185" class="dsq-comment-message"><p>As a CS student myself, I am glad to read articles like this &#8211; reassurance for unsure CS noob still living inside of me.  The first time I was exposed to algorithm and design theory in C++ I felt hopeless &#8211; as if there were some huge international conspiring joke, of which I was the only person in the world who had not been let in on the punchline.<br />
Now, as I have been exposed more to the concepts central to CS I am beginning to realize all that is the turducken in all of its deliciousness.  Although I am far from understanding it all, multiple exposures to this information in varying formats has allowed for the gradual digestion of these concepts.  I feel that it is this reoccurring exposure in multiple settings, in multiple formats (varying languages and concepts) that helps students to really &#8220;get it&#8221;.<br />
I remember my first exposure to the concepts of linked lists and recursion &#8211; I thought to myself &#8220;there is no way. There is no way in any world this stuff makes sense, let alone actually does any work.&#8221;  I am pretty sure on my second exposure I felt pretty much the same sentiment; just to a slightly lesser extent.  Each time I see &#8216;it&#8217; again, I still kind of feel that way &#8211; just to a lesser extent. Each time, taking a little more understanding away with me.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1186">
					<div id="dsq-comment-header-1186" class="dsq-comment-header">
						<cite id="dsq-cite-1186">
	http://www.mikeatlas.com							<span id="dsq-author-user-1186">Mike Atlas</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1186" class="dsq-comment-body">
						<div id="dsq-comment-message-1186" class="dsq-comment-message"><p>Running with the Turducken analogy, I enjoy explaining to non computer science people (females especially&#8230;.this is going get me in trouble someday) that running a program is like preparing a meal: you have ingredients to start with (data). You may need to follow several recipes (functions) to make a full meal, and some recipes may require you to have a different recipe&#8217;s finished result already completed before you proceed further in the current recipe (using returned data from another function call). There are infinite different ways to mix up the food (data), and sometimes you might need to stir the food repeatedly (looping) until it is ready (conditionals). </p>
<p>The end result? Something tasty and presentable that has more value than the initial ingredients.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1187">
					<div id="dsq-comment-header-1187" class="dsq-comment-header">
						<cite id="dsq-cite-1187">
	http://technomancy.us							<span id="dsq-author-user-1187">Phil</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1187" class="dsq-comment-body">
						<div id="dsq-comment-message-1187" class="dsq-comment-message"><p>&gt; The first time I was exposed to algorithm and design theory in C++ I felt hopeless &#8211; as if there were some huge international conspiring joke, of which I was the only person in the world who had not been let in on the punchline.</p>
<p>C++ *is* the punch line.</p>
<p>Try another language. Most of them make more sense than C++.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1188">
					<div id="dsq-comment-header-1188" class="dsq-comment-header">
						<cite id="dsq-cite-1188">
								<span id="dsq-author-user-1188">Anon. E. Mouse</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1188" class="dsq-comment-body">
						<div id="dsq-comment-message-1188" class="dsq-comment-message"><p>I&#8217;m female but I don&#8217;t cook. I can program though. Change your ways.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1189">
					<div id="dsq-comment-header-1189" class="dsq-comment-header">
						<cite id="dsq-cite-1189">
	http://22bits.exofire.net							<span id="dsq-author-user-1189">Nikhil</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1189" class="dsq-comment-body">
						<div id="dsq-comment-message-1189" class="dsq-comment-message"><p>I think this is where a little bit of <a href="http://weblog.masukomi.org/2007/3/12/you-really-don-t-want-to-become-a-programmer" rel="nofollow">http://weblog.masukomi.org/2007/3/12/you-really-don-t-want-to-become-a-programmer</a> comes in. If your mind is geared to changing perceptions, partly due to your genes and partly due to your environment, then this jump becomes easy. Humans as a society are incredibly UNresponsive to change, we just don&#8217;t want to change our mindsets and experiences. The ones who do often do it ahead of there time and end up in a mess. Only a few can convince the majority or do something great.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1191">
					<div id="dsq-comment-header-1191" class="dsq-comment-header">
						<cite id="dsq-cite-1191">
								<span id="dsq-author-user-1191">she</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1191" class="dsq-comment-body">
						<div id="dsq-comment-message-1191" class="dsq-comment-message"><p>One big difference is static, old languages vs dynamic, newer ones.</p>
<p>And I dont mean Perl &#8211; perl is ugly.<br />
I refer to the generation of ruby and python (i mentioned ruby first because I prefer ruby, but I prefer python&#8217;s readability over perl&#8217;s line noise any time, even if some decisions in python are extremely awkward for me)</p>
<p>(For this matter, I will even include php, although php is the most horrible language ever created. It however shows that the www is extremely important, and even if you are such an ugly language you can win a LOT by trying to be simple in essence, and focusing on getting a job done. I dont think php would have ever survived<br />
without the www though, and I am still sad that neither ruby nor python really tackle php&#8217;s strongest base &#8211; the www root. A solution like rails or django is totally the wrong way to beat php, for several reasons. Anyway, I digress with ranting&#8230; sorry)</p>
<p>Back to the point</p>
<p>&#8220;Teaching someone to program is a nice illustration of how impossibly weird this activity actually is, and how foreign it is the first time.&#8221;</p>
<p>I think with i.e. ruby, these things get a lot more natural in human thinking. Yes, you still have loops and if/elsif conditions, but at least you have your data structure easier accessible (easier to your brain)</p>
<p>array.each do |your_entry|<br />
  puts your_entry<br />
end</p>
<p>(Though I&#8217;d prefer {} in the above case, but &#8220;do&#8221; is a nicer word for my brain and thus nicer to try to understand)</p>
<p>&gt; Functions can contain any code, including calls to other<br />
&gt; functions. This is crazy for people. They just sort of freak out<br />
&gt; when they see functions calling each other and nesting inside of<br />
&gt; each other.</p>
<p>I think that depends on the way you think. In ruby, everything is a method, and if you have a cat like this:</p>
<p>class Cat # which obviously should be a cat</p>
<p>then I think everyone would understand models like this:</p>
<p>cat = Cat.new<br />
cat.meow # the cat will meow<br />
cat.hide # the cat tries to hide&#8230; what a coward<br />
cat.move_legs # obviously, in order to move, the cat must move it legs<br />
cat.run_away # a method which will invoke many other methods&#8230; run_away is a complex task, which may involve hiding, moving legs, meowing maybe if you want to alert a human &#8220;friend&#8221; etc&#8230; etc..</p>
<p>Ruby&#8217;s model is not a perfect real-life simulation. There are &#8220;multiple relationships&#8221; in reallife world, but ruby distinguish between a class and a module.<br />
In such a way, a language like Io has a &#8220;purer model&#8221; (but personally I feel Io still has quite a way to go before it can really take off)</p>
<p>I think that the best new language would be one that stops<br />
re-creating what other languages feature, and instead<br />
concentrates on the human being. Objects are great to<br />
work with but it still is not the best way for a human<br />
THINKER.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1192">
					<div id="dsq-comment-header-1192" class="dsq-comment-header">
						<cite id="dsq-cite-1192">
								<span id="dsq-author-user-1192">gwenhwyfaer</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1192" class="dsq-comment-body">
						<div id="dsq-comment-message-1192" class="dsq-comment-message"><p>&gt; For this matter, I will even include php, although php is the most horrible language ever created.</p>
<p>I see your PHP and raise you a MUMPS.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1199">
					<div id="dsq-comment-header-1199" class="dsq-comment-header">
						<cite id="dsq-cite-1199">
								<span id="dsq-author-user-1199">StCredZero</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1199" class="dsq-comment-body">
						<div id="dsq-comment-message-1199" class="dsq-comment-message"><p>&#8220;&#8230;stuffing arrays inside of dictionaries inside of if statements and loops and recursive functions is&#8230;&#8221; is often done in procedural programming.  It shouldn&#8217;t be done (at all often) in Object Oriented programming.  It&#8217;s not done in functional programming either.  </p>
<p>State is nasty.  That&#8217;s one of the basic tenets of computer science/automata theory.  But there are lots of ways to manage state and its concomitant complexity.  You, my friend, seem to be just at the beginning of learning about the many ways this is done.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-1200">
					<div id="dsq-comment-header-1200" class="dsq-comment-header">
						<cite id="dsq-cite-1200">
	http://soy.dyndns.org/~peter							<span id="dsq-author-user-1200">Peter</span>
							</cite>
					</div>
					<div id="dsq-comment-body-1200" class="dsq-comment-body">
						<div id="dsq-comment-message-1200" class="dsq-comment-message"><p>Turn down your smug, dude.  State may be nasty, but is essential for almost all useful algorithms (network flow, anything with a double-ended queue, and the like), and it models very well how people think about these things.  It&#8217;s possible to do without it &#8211; or to incorporate it into functional programming via monads and the like &#8211; but almost every modern algorithm requires relatively complex data structures in order to be as efficient as possible.  The bizarre quest for purity uber alles &#8211; even in the face of increased runtimes and worsening code opacity &#8211; is a bug in Computer Science and the study of programming languages, not a feature.  People are still writing dissertations about how to combine basic data structures with pure functional programming.  As of right now, programs need state to do anything of use or to implement most algorithms.</p>
</div>
					</div>
				</li>
					<li id="dsq-comment-16705">
					<div id="dsq-comment-header-16705" class="dsq-comment-header">
						<cite id="dsq-cite-16705">
	http://www.mikeatlas.com/							<span id="dsq-author-user-16705">Mike Atlas</span>
							</cite>
					</div>
					<div id="dsq-comment-body-16705" class="dsq-comment-body">
						<div id="dsq-comment-message-16705" class="dsq-comment-message"><p>Running with the Turducken analogy, I enjoy explaining to non computer science people (females especially&#8230;.this is going get me in trouble someday) that running a program is like preparing a meal: you have ingredients to start with (data). You may need to follow several recipes (functions) to make a full meal, and some recipes may require you to have a different recipe&#39;s finished result already completed before you proceed further in the current recipe (using returned data from another function call). There are infinite different ways to mix up the food (data), and sometimes you might need to stir the food repeatedly (looping) until it is ready (conditionals). </p>
<p>The end result? Something tasty and presentable that has more value than the initial ingredients.</p>
</div>
					</div>
				</li>
				</ul>
		</div>
	</div>

<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>

<script type="text/javascript">
/* <![CDATA[ */
	var disqus_url = 'http://imprompt.us/2007/turducken/ ';
	var disqus_identifier = '95 http://imprompt.us/2007/turducken/';
	var disqus_container_id = 'disqus_thread';
	var disqus_domain = 'disqus.com';
	var disqus_shortname = 'impromptus';
	var disqus_title = "Turducken";
		var disqus_config = function () {
	    var config = this; // Access to the config object

	    /* 
	       All currently supported events:
	        * preData — fires just before we request for initial data
	        * preInit - fires after we get initial data but before we load any dependencies
	        * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
	        * afterRender - fires when template is rendered but before we show it
	        * onReady - everything is done
	     */

		config.callbacks.preData.push(function() {
			// clear out the container (its filled for SEO/legacy purposes)
			document.getElementById(disqus_container_id).innerHTML = '';
		});
				config.callbacks.onReady.push(function() {
			// sync comments in the background so we don't block the page
			DISQUS.request.get('?cf_action=sync_comments&post_id=95');
		});
					};
	var facebookXdReceiverPath = 'http://imprompt.us/wp-content/plugins/disqus-comment-system/xd_receiver.htm';
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
	var DsqLocal = {
		'trackbacks': [
		],
		'trackback_url': "http:\/\/imprompt.us\/2007\/turducken\/trackback\/"	};
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
	var dsq = document.createElement('script'); dsq.type = 'text/javascript';
	dsq.async = true;
	dsq.src = 'http://' + disqus_shortname + '.' + disqus_domain + '/embed.js?pname=wordpress&pver=2.61';
	(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>

	<ul id="footernav">
		
			<li class="next"><a href="http://imprompt.us/2007/storage/" rel="next">storage</a> &raquo;</li>		<li class="prev">&laquo; <a href="http://imprompt.us/2007/difficult/" rel="prev">difficult</a></li>
			
	</ul>


		</div>


	
<div id="sidebar">

	<ul id="sidebar_one">
		<li id="search-3" class="widget widget_search">
<form id="searchform" method="get" action="http://imprompt.us">
	<fieldset>
	<label for="searchquery">Search</label>
		<input type="text" value="" name="s" id="searchquery" />
		<input type="submit" class="submit" accesskey="s" value="Go!" />
	</fieldset>
</form>
</li>
<li id="text-2" class="widget widget_text"><h2>About Peter</h2>			<div class="textwidget"><a href="http://home.manhattan.edu/~peter.boothe">Peter Boothe</a> is an assistant professor in the mathematics and computer science department at Manhattan College.  He's a generally nice guy who thinks a little too hard sometimes.
</div>
		</li>
<!-- Quick Flickr start -->
	<li id="quick-flickr" class="widget widget_quickflickr"><div class="flickr">		<h2>Photostream</h2>		<a   href="http://www.flickr.com/photos/pmb/5276820203/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm6.static.flickr.com/5124/5276820203_6b0d20a602_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239735966/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm6.static.flickr.com/5283/5239735966_691753b438_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239135609/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm6.static.flickr.com/5207/5239135609_a830c5e0d5_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239724652/"><img class="flickr_photo" alt="			pboothe posted a photo:	Walking through Central park" title="			pboothe posted a photo:	Walking through Central park" src="http://farm6.static.flickr.com/5049/5239724652_930ab85366_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239722640/"><img class="flickr_photo" alt="			pboothe posted a photo:	Looking at the terrifying Rockefeller Center crowds" title="			pboothe posted a photo:	Looking at the terrifying Rockefeller Center crowds" src="http://farm6.static.flickr.com/5090/5239722640_9dc3d12581_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239121901/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm6.static.flickr.com/5122/5239121901_1d8e71427c_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239118927/"><img class="flickr_photo" alt="			pboothe posted a photo:	With a Boothe and a Ross." title="			pboothe posted a photo:	With a Boothe and a Ross." src="http://farm6.static.flickr.com/5124/5239118927_4a7480ca6f_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5239116747/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm6.static.flickr.com/5122/5239116747_b10244e714_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5151645549/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm5.static.flickr.com/4058/5151645549_814637f7f0_s.jpg" /></a><a   href="http://www.flickr.com/photos/pmb/5151641751/"><img class="flickr_photo" alt="			pboothe posted a photo:	" title="			pboothe posted a photo:	" src="http://farm5.static.flickr.com/4130/5151641751_7845d1ee8a_s.jpg" /></a>			</div></li>
<!-- Quick Flickr end -->
	<li id="rss-1" class="widget widget_rss"><h2><a class='rsswidget' href='http://del.icio.us/rss/jongleurpeter' title='Syndicate this content'><img style='border:0' width='14' height='14' src='http://imprompt.us/wp-includes/images/rss.png' alt='RSS' /></a> <a class='rsswidget' href='http://www.delicious.com/jongleurpeter' title='bookmarks posted by jongleurpeter'>Bookmarks feed</a></h2><ul><li><a class='rsswidget' href='http://webhome.cs.uvic.ca/~dmaslov/' title='This seems useful for me [&hellip;]'>Reversible Benchmarks</a></li><li><a class='rsswidget' href='http://www.democracyjournal.org/article.php?ID=6789' title='The culture wars, now coming at science. [&hellip;]'>Michael Bérubé for Democracy: A Journal of Ideas</a></li><li><a class='rsswidget' href='http://ngrams.googlelabs.com/graph?content=Plato,Aristotle,Socrates,Einstein&amp;year_start=1800&amp;year_end=2000&amp;corpus=0&amp;smoothing=3' title='popularity vs correctness [&hellip;]'>Google Ngram Viewer</a></li><li><a class='rsswidget' href='http://angryflower.com/bankjo.html' title='HUNDREDS of MILLIONS [&hellip;]'>Bob the Angry Flower - Bank Job</a></li><li><a class='rsswidget' href='http://techcrunch.com/2010/12/16/is-yahoo-shutting-down-del-icio-us/' title='Yahoo is shutting down THIS WEBSITE.  Dammit. [&hellip;]'>Is Yahoo Shutting Down Del.icio.us? [Update: Yes]</a></li></ul></li>
<li id="rss-2" class="widget widget_rss"><h2><a class='rsswidget' href='http://twitter.com/statuses/user_timeline/7943082.rss' title='Syndicate this content'><img style='border:0' width='14' height='14' src='http://imprompt.us/wp-includes/images/rss.png' alt='RSS' /></a> <a class='rsswidget' href='http://twitter.com/pboothe' title='Twitter updates from Peter Boothe / pboothe.'>Twitter</a></h2><ul><li><a class='rsswidget' href='http://twitter.com/pboothe/statuses/16710239894118400' title='pboothe: RT @xenijardin: ASK NOT FOR WHOM THE WEB TROLLS. IT TROLLS FOR THEE. [&hellip;]'>pboothe: RT @xenijardin: ASK NOT FOR WHOM THE WEB TROLLS.

IT TROLLS FOR THEE.</a> <span class="rss-date">20 December 2010</span></li><li><a class='rsswidget' href='http://twitter.com/pboothe/statuses/16579992443953153' title='pboothe: @JeffPicanso Winter in SoCal. The winter rain is the part that nobody talks about. [&hellip;]'>pboothe: @JeffPicanso Winter in SoCal. The winter rain is the part that nobody talks about.</a> <span class="rss-date">19 December 2010</span></li><li><a class='rsswidget' href='http://twitter.com/pboothe/statuses/16172333915967488' title='pboothe: I hate it when students fail my classes. That doesn&#039;t stop me from giving Fs but it does make me grumpy for hours afterwards. [&hellip;]'>pboothe: I hate it when students fail my classes. That doesn&#039;t stop me from giving Fs but it does make me grumpy for hours afterwards.</a> <span class="rss-date">18 December 2010</span></li></ul></li>
<li id="meta-3" class="widget widget_meta"><h2>Meta</h2>			<ul>
						<li><a href="http://imprompt.us/wp-login.php">Log in</a></li>
						</ul>
</li>
	</ul>


</div>
<!-- end sidebar -->


		<div id="footer">
			<p>
				Content &copy; <a accesskey="h" href="http://imprompt.us/"> Impromptus</a> |

				 

				Powered by				<a href="http://wordpress.org/">WordPress</a>
					&amp;
				built on <a href="http://wordpreciousss.org/" rel="nofollow" title="Precious WP Theme">WordPreciousss</a>

				
				| <a href="#top" accesskey="1" title="Top of page">Top</a>
			</p>			
		</div>



	</div>
<div id="wpfooter"></div>


</body>
</html>
