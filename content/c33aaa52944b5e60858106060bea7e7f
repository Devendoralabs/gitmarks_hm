

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
    
    <title>Hidden features of Python - Stack Overflow</title>
    <link rel="stylesheet" type="text/css" href="http://sstatic.net/stackoverflow/all.css?v=8202b021ff6f">
    <link rel="shortcut icon" href="http://sstatic.net/stackoverflow/img/favicon.ico">
    <link rel="apple-touch-icon" href="http://sstatic.net/stackoverflow/img/apple-touch-icon.png">
    <link rel="search" type="application/opensearchdescription+xml" title="Stack Overflow" href="/opensearch.xml">
    
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
    
    <script type="text/javascript" src="http://sstatic.net/js/master.min.js?v=ab910f0f3cd3"></script>
    <script type="text/javascript">
    var imagePath='http://sstatic.net/stackoverflow/img/';
    var inboxUnviewedCount = -1;
    </script>
    
    <link rel="canonical" href="http://stackoverflow.com/questions/101268/hidden-features-of-python">
    <link rel="alternate" type="application/atom+xml" title="Feed for question 'Hidden features of Python'" href="/feeds/question/101268">

    <script src="http://sstatic.net/js/question.js?v=c1e9487fed04" type="text/javascript"></script>


    
    <script type="text/javascript">
        var fkey = "221f7a5d9e4191d6bf35c600cd5cdf9d";
    
        
        
        $(function() {
            
            vote.init(101268);
            comments.init();
            styleCode();
        
        });
    </script>


        <script type="text/javascript">gauth.checkStackAuth('http://stackauth.com');</script>
        
        <script type="text/javascript">gauth.informStackAuth('http://stackauth.com');</script>

</head>
<body class="question-page">
    <noscript><div id="noscript-padding"></div></noscript>
    <div id="notify-container"></div>

    <script type="text/javascript">
        $(function() { notify.showFirstTime('Q&amp;A for professional and enthusiast programmers'); });
    </script>

    <div id="overlay-header"></div>
    <div id="custom-header"></div>
    <div class="container">
        <div id="header">
            <div id="portalLink">
                
                <a class="genu" href="http://stackexchange.com">Stack Exchange</a>
                
            </div>
            <div id="topbar">
                <div id="hlinks">
                    <span id="hlinks-user">
                  
                  
                  </span>
                  <span id="hlinks-nav">
                  <a href="/users/login?returnurl=%2fquestions%2f101268%3fsort%3dvotes%26page%3d1%23sort-top">log in</a>
 <span class="lsep">|</span>
<a href="http://careers.stackoverflow.com">careers</a>
 <span class="lsep">|</span>

                  </span>
                  <span id="hlinks-custom">
                  <a href="http://chat.stackoverflow.com">chat</a>
 <span class="lsep">|</span>
<a href="http://meta.stackoverflow.com">meta</a>
 <span class="lsep">|</span>
<a href="/about">about</a>
 <span class="lsep">|</span>
<a href="/faq">faq</a>
                  </span>
                </div>
                <div id="hsearch">
                    <form id="search" action="/search" method="get">
                    <div>
                        <input name="q" class="textbox" tabindex="1" onfocus="if (this.value=='search') this.value = ''" type="text" maxlength="80" size="28" value="search">
                    </div>
                    </form>
                </div>
            </div>
            <br class="cbt">
            <div id="hlogo">
                <a href="/">Stack Overflow</a>
            </div>
            <div id="hmenus">
                <div class="nav mainnavs">
                    <ul>
                        <li class="youarehere"><a id="nav-questions" href="/questions">Questions</a></li>
                        <li><a id="nav-tags" href="/tags">Tags</a></li>
                        <li><a id="nav-users" href="/users">Users</a></li>
                        <li><a id="nav-badges" href="/badges">Badges</a></li>
                        <li><a id="nav-unanswered" href="/unanswered">Unanswered</a></li>
                    </ul>
                </div>
                <div class="nav askquestion">
                    <ul>
                        <li >
                            <a id="nav-askquestion" href="/questions/ask">Ask Question</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    
        <div id="content">
            

<div id="question-header">
    <h1><a href="/questions/101268/hidden-features-of-python" class="question-hyperlink">Hidden features of Python</a></h1>
</div>

<div id="mainbar">



<div id="question">
    
    <div class="everyonelovesstackoverflow" id="adzerk1">
    </div>

     
    

    <table>
    <tr>
    <td class="votecell">
        
<div class="vote">
    <input type="hidden" value="101268">
    <a class="vote-up-off" title="This question is useful and clear (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">636</span>
    <a class="vote-down-off" title="This question is unclear or not useful (click again to undo)">down vote</a>

    <a class="star-off" title="This is a favorite question (click again to undo)">favorite</a>
    <div class="favoritecount"><b>936</b></div>    

</div>

    </td>
    <td class="postcell">
        <div>          
            <div class="post-text">
                <p>What are the lesser-known but useful features of the Python programming language?</p>

<ul>
<li>Try to limit answers to Python core.</li>
<li>One feature per answer.</li>
<li>Give an example and short description of the feature, not just a link to documentation.</li>
<li>Label the feature using a title as the first line.</li>
</ul>

            </div>            
            <div class="post-taglist">
                <a href="/questions/tagged/python" class="post-tag" title="show questions tagged 'python'" rel="tag">python</a> <a href="/questions/tagged/hidden-features" class="post-tag" title="show questions tagged 'hidden-features'" rel="tag">hidden-features</a> 
            </div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/q/101268" title="short permalink to this question">link</a><span class="lsep">|</span><a id="flag-post-101268" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
        
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101268/revisions" title="show all edits to this post"><span title="2010-07-15 02:42:37Z" class="relativetime">Jul 15 at 2:42</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            
            </td>
            
            <td class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 19 '08 at 11:50. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101268" href="/posts/101268/revisions" title="show revision history for this post">22 revs, 17 users 14%<br>jelovirt</a></div></div>
            </td>
            </tr>
            </table>
        </div>
    </td>
    </tr>

    

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101268" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-17176" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">47</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Okay, this is an awesome topic</span> &ndash;&nbsp;<a href="/users/15/teifion" title="6642 reputation" class="comment-user">Teifion</a> <span class="comment-date"><span title="2008-09-19 11:56:29Z">Sep 19 '08 at 11:56</span></span></div></td>
    </tr>
            
    <tr id="comment-1286021" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Awesome! Saved for future reading!</span> &ndash;&nbsp;<a href="/users/122235/jonathanb" title="165 reputation" class="comment-user">Jonathanb</a> <span class="comment-date"><span title="2009-09-17 18:53:39Z">Sep 17 '09 at 18:53</span></span></div></td>
    </tr>
            
    <tr id="comment-3350406" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">12</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Why the hell is this question being closed???</span> &ndash;&nbsp;<a href="/users/192247/missingfaktor" title="10234 reputation" class="comment-user">missingfaktor</a> <span class="comment-date"><span title="2010-07-14 04:38:41Z">Jul 14 at 4:38</span></span></div></td>
    </tr>
            
    <tr id="comment-3353421" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">15</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Because of the people who secretly want to destroy stackoverflow by removing any content short of real-world case scenarios of actual fizzbuzz problems.</span> &ndash;&nbsp;<a href="/users/111307/bobobobo" title="3450 reputation" class="comment-user">bobobobo</a> <span class="comment-date"><span title="2010-07-14 12:21:40Z">Jul 14 at 12:21</span></span><span class="edited-yes" title="this comment was edited"></span></div></td>
    </tr>
            
    <tr id="comment-3363648" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">13</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">On-Topic Police, get a life. Is the question useful? Yes? Does deleting it make SO a better site? No. I think questions beyond a certain longevity should be immune from votes like this.</span> &ndash;&nbsp;<a href="/users/63094/artlung" title="6209 reputation" class="comment-user">artlung</a> <span class="comment-date"><span title="2010-07-15 10:02:29Z">Jul 15 at 10:02</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101268" class="comments-link" title="expand to show all comments on this post">show <b>21</b> more comments</a>
</td>
</tr>

    </table>
    
</div>

<div class="question-status">
                    <h2><b>protected</b> by <a href="/users/1228/will" >Will</a><span class="mod-flair" title="moderator">&#9830;</span> <span title="2010-07-16 02:54:18Z" class="relativetime">Jul 16 at 2:54</span></h2>
                    <p>This question is protected to prevent "thanks!", "me too!", or spam answers by new users. To answer it, you must have more than 10 reputation.</p>
                  </div>


<div id="answers">

    <a name="tab-top"></a>
    <div id="answers-header">
        <div class="subheader answers-subheader">
            <h2>149 Answers</h2>
            <div id="tabs">
                <a href="/questions/101268?tab=active#tab-top" title="Answers with the latest activity first">active</a>
<a href="/questions/101268?tab=newest#tab-top" title="Most recent answers first">newest</a>
<a class="youarehere" href="/questions/101268?tab=votes#tab-top" title="Answers with the highest score first">votes</a>

            </div>
        </div>
    </div>

<div class="pager-answers" >
<span class="page-numbers current">1</span>
<a href="/questions/101268?page=2&tab=votes#tab-top" title="go to page 2"><span class="page-numbers">2</span></a>
<a href="/questions/101268?page=3&tab=votes#tab-top" title="go to page 3"><span class="page-numbers">3</span></a>
<a href="/questions/101268?page=4&tab=votes#tab-top" title="go to page 4"><span class="page-numbers">4</span></a>
<a href="/questions/101268?page=5&tab=votes#tab-top" title="go to page 5"><span class="page-numbers">5</span></a>
<a href="/questions/101268?page=2&tab=votes#tab-top" title="go to page 2" rel="next"><span class="page-numbers next"> next</span></a>
</div>

    <a name="101945"></a>
    
    <div id="answer-101945" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101945">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">378</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Chaining comparison operators</strong>:</p>

<pre><code>&gt;&gt;&gt; x = 5
&gt;&gt;&gt; 1 &lt; x &lt; 10
True
&gt;&gt;&gt; 10 &lt; x &lt; 20 
False
&gt;&gt;&gt; x &lt; 10 &lt; x*10 &lt; 100
True
&gt;&gt;&gt; 10 &gt; x &lt;= 9
True
&gt;&gt;&gt; 5 == x &gt; 4
True
</code></pre>

<p>In case you're thinking it's doing <code>1 &lt; x</code>, which comes out as <code>True</code>, and then comparing <code>True &lt; 10</code>, which is also <code>True</code>, then no, that's really not what happens (see the last example.) It's really translating into <code>1 &lt; x and x &lt; 10</code>, and <code>x &lt; 10 and 10 &lt; x * 10 and x*10 &lt; 100</code>, but with less typing and each term is only evaluated once.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101945#101945" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101945" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101945/revisions" title="show all edits to this post"><span title="2010-05-27 10:33:47Z" class="relativetime">May 27 at 10:33</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101945" href="/posts/101945/revisions" title="show revision history for this post">5 revs, 3 users 88%<br>Thomas Wouters</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101945" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-82793" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">63</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">That&#39;s very helpful. It should be standard for all languages.  Sadly, it isn&#39;t.</span> &ndash;&nbsp;<a href="/users/1615/stalepretzel" title="2268 reputation" class="comment-user">stalepretzel</a> <span class="comment-date"><span title="2008-10-17 02:23:48Z">Oct 17 '08 at 2:23</span></span></div></td>
    </tr>
            
    <tr id="comment-152135" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">you should add some examples that return false aswell. such as
&gt;&gt;&gt;  10 &lt; x &lt; 20
False</span> &ndash;&nbsp;<a href="/users/3825/shoelace" title="717 reputation" class="comment-user">ShoeLace</a> <span class="comment-date"><span title="2008-11-21 14:34:41Z">Nov 21 '08 at 14:34</span></span></div></td>
    </tr>
            
    <tr id="comment-415586" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">14</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This applies to other comparison operators as well, which is why people are sometimes surprised why code like (5 in [5] is True) is False (but it&#39;s unpythonic to explicitly test against booleans like that to begin with).</span> &ndash;&nbsp;<a href="/users/64474/miles" title="6003 reputation" class="comment-user">Miles</a> <span class="comment-date"><span title="2009-03-02 18:35:36Z">Mar 2 '09 at 18:35</span></span></div></td>
    </tr>
            
    <tr id="comment-2191870" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">8</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Good but watch out for equal prcedence, like &#39;in&#39; and &#39;=&#39;.   &#39;A in B == C in D&#39; means &#39;(A in B) and (B == C) and (C in D)&#39; which might be unexpected.</span> &ndash;&nbsp;<a href="/users/34427/charles-merriam" title="1692 reputation" class="comment-user">Charles Merriam</a> <span class="comment-date"><span title="2010-02-10 10:28:22Z">Feb 10 at 10:28</span></span></div></td>
    </tr>
            
    <tr id="comment-2968452" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Azafe: Lisp&#39;s comparisons naturally work this way.  It&#39;s not a special case because there&#39;s no other (reasonable) way to interpret <code>(&lt; 1 x 10)</code>.  You can even apply them to single arguments, like <code>(= 10)</code>: <a href="http://www.cs.cmu.edu/Groups/AI/html/hyperspec/HyperSpec/Body/fun_eqcm_sleq__lteqcm_gteq.html" rel="nofollow">cs.cmu.edu/Groups/AI/html/hyperspec/HyperSpec/Body/&hellip;</a></span> &ndash;&nbsp;<a href="/users/344481/ken" title="253 reputation" class="comment-user">Ken</a> <span class="comment-date"><span title="2010-05-26 20:31:30Z">May 26 at 20:31</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101945" class="comments-link" title="expand to show all comments on this post">show <b>9</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <div class="everyonelovesstackoverflow" id="adzerk3">
    </div>

     
           
    <a name="143636"></a>
    
    <div id="answer-143636" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="143636">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">294</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><b>Get the python regex parse tree to debug your regex</b></p>

<p>Regular expression are a great feature of python, but debugging them can be a pain, and it's just too easy to get a regex wrong.</p>

<p>Fortunately, python have a really hidden feature to print the regex parse tree,
by passing the undocumented, experimental, hidden flag re.DEBUG (actually, 128) to re.compile</p>

<pre><code>&gt;&gt;&gt; re.compile("^\[font(?:=(?P&lt;size&gt;[-+][0-9]{1,2}))?\](.*?)[/font]",
    re.DEBUG)
at at_beginning
literal 91
literal 102
literal 111
literal 110
literal 116
max_repeat 0 1
  subpattern None
    literal 61
    subpattern 1
      in
        literal 45
        literal 43
      max_repeat 1 2
        in
          range (48, 57)
literal 93
subpattern 2
  min_repeat 0 65535
    any None
in
  literal 47
  literal 102
  literal 111
  literal 110
  literal 116
</code></pre>

<p>Once you understand the syntax, you can spot your errors.
There we can see that i forgot to escape the [] in [/font].</p>

<p>Of course you can combine it with whatever flags you want, like commented regexes :</p>

<pre><code>&gt;&gt;&gt; re.compile("""
 ^              # start of a line
 \[font         # the font tag
 (?:=(?P&lt;size&gt;  # optional [font=+size]
 [-+][0-9]{1,2} # size specification
 ))?
 \]             # end of tag
 (.*?)          # text beetween the tags
 \[/font\]      # end of the tag
 """, re.DEBUG|re.VERBOSE|re.DOTALL)
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/143636#143636" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-143636" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/143636/revisions" title="show all edits to this post"><span title="2010-03-26 22:00:32Z" class="relativetime">Mar 26 at 22:00</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 27 '08 at 13:18. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-143636" href="/posts/143636/revisions" title="show revision history for this post">3 revs<br>BatchyX</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-143636" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-222581" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">32</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Instead of 128 you can also use re.DEBUG. Be aware that the comment in the source says this flag is experimental and you shouldn&#39;t rely on it.</span> &ndash;&nbsp;<a href="/users/1531/andreas-thomas" title="652 reputation" class="comment-user">Andreas Thomas</a> <span class="comment-date"><span title="2008-12-28 14:24:32Z">Dec 28 '08 at 14:24</span></span></div></td>
    </tr>
            
    <tr id="comment-820800" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">16</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">If you can use re.DEBUG, then you should. It may be experimental, but it&#39;s still the symbolic name, and the actual 128 value is just as experimental, but less readable, and more subject to change.</span> &ndash;&nbsp;<a href="/users/69148/lee-b" title="1274 reputation" class="comment-user">Lee B</a> <span class="comment-date"><span title="2009-06-18 09:54:19Z">Jun 18 '09 at 9:54</span></span></div></td>
    </tr>
            
    <tr id="comment-1904570" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">The more idiomatic way to combine flags is using the OR operator, so it should probably be &quot;re.DEBUG | re.VERBOSE | re.DOTALL&quot; instead. They&#39;re equivalent in this case, but in other cases where you might want to set a flag in addition to a group of flags that <i>might</i> already have it, the OR operator is essential.</span> &ndash;&nbsp;<a href="/users/3694/sysrqb" title="1526 reputation" class="comment-user">sysrqb</a> <span class="comment-date"><span title="2010-01-01 01:22:51Z">Jan 1 at 1:22</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-143636" class="comments-link" title="expand to show all comments on this post">show <b>5</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101310"></a>
    
    <div id="answer-101310" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101310">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">240</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Creating generators objects</strong></p>

<p>If you write </p>

<pre><code>x=(n for n in foo if bar(n))
</code></pre>

<p>you can get out the generator and assign it to x. Now it means you can do</p>

<pre><code>for n in x:
</code></pre>

<p>The advantage of this is that you don't need intermediate storage, which you would need if you did</p>

<pre><code>x = [n for n in foo if bar(n)]
</code></pre>

<p>In some cases this can lead to significant speed up.</p>

<p>You can append many if statements to the end of the generator, basically replicating nested for loops:</p>

<pre><code>&gt;&gt;&gt; n = ((a,b) for a in range(0,2) for b in range(4,6))
&gt;&gt;&gt; for i in n:
...   print i 

(0, 4)
(0, 5)
(1, 4)
(1, 5)
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101310#101310" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101310" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101310/revisions" title="show all edits to this post"><span title="2009-11-23 14:36:53Z" class="relativetime">Nov 23 '09 at 14:36</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101310" href="/posts/101310/revisions" title="show revision history for this post">4 revs, 3 users 63%<br>freespace</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101310" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-681228" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">27</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Of particular note is the memory overhead savings. Values are computed on-demand, so you never have the entire result of the list comprehension in memory. This is particularly desirable if you later iterate over only part of the list comprehension.</span> &ndash;&nbsp;<a href="/users/37984/saffsd" title="902 reputation" class="comment-user">saffsd</a> <span class="comment-date"><span title="2009-05-17 02:41:39Z">May 17 '09 at 2:41</span></span></div></td>
    </tr>
            
    <tr id="comment-2662501" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">9</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This is not particularly &quot;hidden&quot; imo, but also worth noting is the fact that you could not rewind a generator object, whereas you can reiterate over a list any number of times.</span> &ndash;&nbsp;<a href="/users/283515/susmits" title="421 reputation" class="comment-user">susmits</a> <span class="comment-date"><span title="2010-04-15 16:26:47Z">Apr 15 at 16:26</span></span></div></td>
    </tr>
            
    <tr id="comment-2984095" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">The &quot;no rewind&quot; feature of generators can cause some confusion.  Specifically, if you print a generator&#39;s contents for debugging, then use it later to process the data, it doesn&#39;t work.  The data is produced, consumed by print(), then is not available for the normal processing.

This doesn&#39;t apply to list comprehensions, since they&#39;re completely stored in memory.</span> &ndash;&nbsp;<a href="/users/143880/shavenwarthog" title="166 reputation" class="comment-user">shavenwarthog</a> <span class="comment-date"><span title="2010-05-28 16:01:53Z">May 28 at 16:01</span></span></div></td>
    </tr>
            
    <tr id="comment-3547605" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Similar (dup?) answer: <a href="http://stackoverflow.com/questions/101268/hidden-features-of-python/165138#165138" title="hidden features of python">stackoverflow.com/questions/101268/hidden-features-of-python/&hellip;</a> Note, however, that the answer I linked here mentions a REALLY GOOD presentation about the power of generators. You really should check it out.</span> &ndash;&nbsp;<a href="/users/124946/denilson-sa" title="844 reputation" class="comment-user">Denilson Sá</a> <span class="comment-date"><span title="2010-08-04 20:21:33Z">Aug 4 at 20:21</span></span><span class="edited-yes" title="this comment was edited"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101310" class="comments-link" title="expand to show all comments on this post">show <b>3</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="102202"></a>
    
    <div id="answer-102202" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="102202">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">215</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>iter() can take a callable argument</strong></p>

<p>For instance:</p>

<pre><code>def seek_next_line(f):
    for c in iter(lambda: f.read(1),'\n'):
        pass
</code></pre>

<p>The <code>iter(callable, until_value)</code> function repeatedly calls <code>callable</code> and yields its result until <code>until_value</code> is returned. </p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/102202#102202" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-102202" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/102202/revisions" title="show all edits to this post"><span title="2010-05-28 15:06:07Z" class="relativetime">May 28 at 15:06</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-102202" href="/posts/102202/revisions" title="show revision history for this post">5 revs, 5 users 67%<br>mbac32768</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-102202" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-57570" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">21</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">You should also add the explanation: 
iter(callable, sentinel) -&gt; iterator; 
the callable is called until it returns the sentinel.</span> &ndash;&nbsp;<a href="/users/12892/cristian-ciupitu" title="1611 reputation" class="comment-user">Cristian Ciupitu</a> <span class="comment-date"><span title="2008-10-05 15:23:50Z">Oct 5 '08 at 15:23</span></span></div></td>
    </tr>
            
    <tr id="comment-2985297" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">To be honest, either the generic description of <code>iter</code> from the <a href="http://docs.python.org/library/functions.html#iter" rel="nofollow">Python documentation</a> (<code>help(iter)</code>) or an explanation of what&#39;s going on here should be used. For example, something like this: <i>iter(...) creates an iterator that calls <code>f.read(1)</code> until it returns <code>&#39;\n&#39;</code></i>. Anyway, since I already know what&#39;s going on, others (newbies?) should decide.</span> &ndash;&nbsp;<a href="/users/12892/cristian-ciupitu" title="1611 reputation" class="comment-user">Cristian Ciupitu</a> <span class="comment-date"><span title="2010-05-28 18:37:20Z">May 28 at 18:37</span></span><span class="edited-yes" title="this comment was edited 3 times"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-102202" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="117116"></a>
    
    <div id="answer-117116" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="117116">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">202</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>enumerate</strong></p>

<p>Wrap an iterable with enumerate and it will yield the item along with its index.</p>

<p>For example:</p>

<pre><code>
&gt;&gt;&gt; a = ['a', 'b', 'c', 'd', 'e']
&gt;&gt;&gt; for index, item in enumerate(a): print index, item
...
0 a
1 b
2 c
3 d
4 e
&gt;&gt;&gt;
</code></pre>

<p>References:</p>

<ul>
<li><a href="http://docs.python.org/tutorial/datastructures.html#looping-techniques" rel="nofollow">Python tutorial—looping techniques</a></li>
<li><a href="http://docs.python.org/library/functions.html#enumerate" rel="nofollow">Python docs—built-in functions—<code>enumerate</code></a></li>
<li><a href="http://www.python.org/dev/peps/pep-0279/" rel="nofollow">PEP 279</a></li>
</ul>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/117116#117116" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-117116" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/117116/revisions" title="show all edits to this post"><span title="2010-07-14 08:39:06Z" class="relativetime">Jul 14 at 8:39</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 19:51. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-117116" href="/posts/117116/revisions" title="show revision history for this post">4 revs, 3 users 59%<br>Dave</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-117116" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-163033" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">25</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I&#39;m surprised this isn&#39;t covered routinely in tutorials talking about python lists.</span> &ndash;&nbsp;<a href="/users/26334/draemon" title="7323 reputation" class="comment-user">Draemon</a> <span class="comment-date"><span title="2008-11-27 04:06:06Z">Nov 27 '08 at 4:06</span></span></div></td>
    </tr>
            
    <tr id="comment-838107" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">16</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">And all this time I was coding this way: for i in range(len(a)): ... and then using a[i] to get the current item.</span> &ndash;&nbsp;<a href="/users/111577/fmartin" title="57 reputation" class="comment-user">fmartin</a> <span class="comment-date"><span title="2009-06-22 16:35:14Z">Jun 22 '09 at 16:35</span></span></div></td>
    </tr>
            
    <tr id="comment-1011701" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@Berry Tsakala: To my knowledge, it has not been deprecated.</span> &ndash;&nbsp;<a href="/users/138772/jab" title="2250 reputation" class="comment-user">JAB</a> <span class="comment-date"><span title="2009-07-27 17:36:58Z">Jul 27 '09 at 17:36</span></span></div></td>
    </tr>
            
    <tr id="comment-2662471" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">5</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Holy crap this is awesome. for i in xrange(len(a)): has always been my least favorite python idiom.</span> &ndash;&nbsp;<a href="/users/314922/personman" title="279 reputation" class="comment-user">Personman</a> <span class="comment-date"><span title="2010-04-15 16:22:22Z">Apr 15 at 16:22</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-117116" class="comments-link" title="expand to show all comments on this post">show <b>5</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101447"></a>
    
    <div id="answer-101447" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101447">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">173</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Decorators</strong></p>

<p><a href="http://docs.python.org/ref/function.html#tok-decorators" rel="nofollow">Decorators</a> allow to wrap a function or method in another function that can add functionality, modify arguments or results, etc. You write decorators one line above the function definition, beginning with an "at" sign (@).</p>

<p>Example shows a <code>print_args</code> decorator that prints the decorated function's arguments before calling it:</p>

<pre><code>&gt;&gt;&gt; def print_args(function):
&gt;&gt;&gt;     def wrapper(*args, **kwargs):
&gt;&gt;&gt;         print 'Arguments:', args, kwargs
&gt;&gt;&gt;         return function(*args, **kwargs)
&gt;&gt;&gt;     return wrapper

&gt;&gt;&gt; @print_args
&gt;&gt;&gt; def write(text):
&gt;&gt;&gt;     print text

&gt;&gt;&gt; write('foo')
Arguments: ('foo',) {}
foo
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101447#101447" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101447" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101447/revisions" title="show all edits to this post"><span title="2010-04-15 16:18:11Z" class="relativetime">Apr 15 at 16:18</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101447" href="/posts/101447/revisions" title="show revision history for this post">2 revs, 2 users 95%<br>DzinX</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101447" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-24000" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">26</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">When defining decorators, I&#39;d recommend decorating the decorator with @decorator. It creates a decorator that preserves a functions signature when doing introspection on it. More info here: <a href="http://www.phyast.pitt.edu/~micheles/python/documentation.html" rel="nofollow">phyast.pitt.edu/~micheles/python/documentation.html</a> </span> &ndash;&nbsp;<a href="/users/6222/user6222" title="376 reputation" class="comment-user">user6222</a> <span class="comment-date"><span title="2008-09-22 15:53:45Z">Sep 22 '08 at 15:53</span></span></div></td>
    </tr>
            
    <tr id="comment-51278" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">24</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">How is this a hidden feature?</span> &ndash;&nbsp;<a href="/users/2935/vetler" title="305 reputation" class="comment-user">vetler</a> <span class="comment-date"><span title="2008-10-02 13:52:34Z">Oct 2 '08 at 13:52</span></span></div></td>
    </tr>
            
    <tr id="comment-53590" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">26</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Well, it&#39;s not present in most simple Python tutorials, and I stumbled upon it a long time after I started using Python. That is what I would call a hidden feature, just about the same as other top posts here.</span> &ndash;&nbsp;<a href="/users/18745/dzinx" title="4331 reputation" class="comment-user">DzinX</a> <span class="comment-date"><span title="2008-10-03 06:51:14Z">Oct 3 '08 at 6:51</span></span></div></td>
    </tr>
            
    <tr id="comment-710306" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">12</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">vetler,
the questions asks for &quot;lesser-known but useful features of the Python programming language.&quot;

How do you measure &#39;lesser-known but useful features&#39;?  I mean how are any of these responses hidden features?</span> &ndash;&nbsp;<a href="/users/102503/johnd" title="177 reputation" class="comment-user">Johnd</a> <span class="comment-date"><span title="2009-05-23 21:14:51Z">May 23 '09 at 21:14</span></span></div></td>
    </tr>
            
    <tr id="comment-2593308" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@vetler Most of the thing here are hardly &quot;hidden&quot;.</span> &ndash;&nbsp;<a href="/users/92272/beau-martinez" title="963 reputation" class="comment-user">Beau Martínez</a> <span class="comment-date"><span title="2010-04-06 15:33:09Z">Apr 6 at 15:33</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101447" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101739"></a>
    
    <div id="answer-101739" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101739">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">172</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><a href="http://www.python.org/dev/peps/pep-0342/" rel="nofollow">Sending values into generator functions</a>. For example having this function:</p>

<pre><code>def mygen():
  """Yield 5 until something else is passed back via send()"""
  a = 5
  while True:
    f = yield(a) #yield a and possibly get f in return
    if f is not None: a = f  #store the new value
</code></pre>

<p>You can:</p>

<pre><code>&gt;&gt;&gt; g = mygen()
&gt;&gt;&gt; g.next()
5
&gt;&gt;&gt; g.next()
5
&gt;&gt;&gt; g.send(7)  #we send this back to the generator
7
&gt;&gt;&gt; g.next() #now it will yield 7 until we send something else
7
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101739#101739" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101739" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101739/revisions" title="show all edits to this post"><span title="2008-11-23 10:38:54Z" class="relativetime">Nov 23 '08 at 10:38</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101739" href="/posts/101739/revisions" title="show revision history for this post">2 revs, 2 users 95%<br>Rafał Dowgird</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101739" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-17411" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">You should test f against None, otherwise object considered false can&#39;t be used (for example 0).</span> &ndash;&nbsp;<a href="/users/5353/sylvain-defresne" title="1053 reputation" class="comment-user">Sylvain Defresne</a> <span class="comment-date"><span title="2008-09-19 13:29:25Z">Sep 19 '08 at 13:29</span></span></div></td>
    </tr>
            
    <tr id="comment-155015" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy"><code>if f</code> -&gt; <code>if f is not None</code></span> &ndash;&nbsp;<a href="/users/4279/j-f-sebastian" title="20511 reputation" class="comment-user">J.F. Sebastian</a> <span class="comment-date"><span title="2008-11-23 10:39:21Z">Nov 23 '08 at 10:39</span></span></div></td>
    </tr>
            
    <tr id="comment-634817" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">29</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">In other languages, I believe this magical device is called a &quot;variable&quot;.</span> &ndash;&nbsp;<a href="/users/12048/finnw" title="8360 reputation" class="comment-user">finnw</a> <span class="comment-date"><span title="2009-05-05 17:49:46Z">May 5 '09 at 17:49</span></span></div></td>
    </tr>
            
    <tr id="comment-2983806" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This is a non-hidden feature</span> &ndash;&nbsp;<a href="/users/191347/justin" title="785 reputation" class="comment-user">Justin</a> <span class="comment-date"><span title="2010-05-28 15:26:50Z">May 28 at 15:26</span></span></div></td>
    </tr>
            
    <tr id="comment-3187547" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">5</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@finnw: the example implements something that&#39;s similar to a variable.  However, the feature could be used in many other ways ... unlike a variable.  It should also be obvious that similar semantics can be implemented using objects (a class implemting Python&#39;s <b>call</b> method, in particular).

</span> &ndash;&nbsp;<a href="/users/149076/jim-dennis" title="1671 reputation" class="comment-user">Jim Dennis</a> <span class="comment-date"><span title="2010-06-24 04:07:17Z">Jun 24 at 4:07</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101739" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101840"></a>
    
    <div id="answer-101840" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101840">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">158</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>The step argument in slice operators. For example:</p>

<pre><code>a = [1,2,3,4,5]
&gt;&gt;&gt; a[::2]  # iterate over the whole list in 2-increments
[1,3,5]
</code></pre>

<p>The special case <code>x[::-1]</code> is a useful idiom for 'x reversed'.</p>

<pre><code>&gt;&gt;&gt; a[::-1]
[5,4,3,2,1]
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101840#101840" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101840" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/101840/revisions" title="show all edits to this post"><span title="2008-09-19 13:33:42Z" class="relativetime">Sep 19 '08 at 13:33</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101840" href="/posts/101840/revisions" title="show revision history for this post">Rafał Dowgird</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101840" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-232503" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">14</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">much clearer, in my opinion, is the reversed() function.
&gt;&gt;&gt; list(reversed(range(4)))
[3, 2, 1, 0]
</span> &ndash;&nbsp;<a href="/users/3757/christian-oudard" title="2738 reputation" class="comment-user">Christian Oudard</a> <span class="comment-date"><span title="2009-01-02 18:35:33Z">Jan 2 '09 at 18:35</span></span></div></td>
    </tr>
            
    <tr id="comment-834562" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">then how to write &quot;this i a string&quot;[::-1] in a better way? reversed doesnt seem to help</span> &ndash;&nbsp;<a href="/users/84196/berry-tsakala" title="431 reputation" class="comment-user">Berry Tsakala</a> <span class="comment-date"><span title="2009-06-21 20:56:00Z">Jun 21 '09 at 20:56</span></span></div></td>
    </tr>
            
    <tr id="comment-844352" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">&quot;&quot;.join(reversed(&quot;this i a string&quot;))</span> &ndash;&nbsp;<a href="/users/18278/erikprice" title="646 reputation" class="comment-user">erikprice</a> <span class="comment-date"><span title="2009-06-23 17:17:35Z">Jun 23 '09 at 17:17</span></span></div></td>
    </tr>
            
    <tr id="comment-849243" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">11</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">The problem with reversed() is that it returns an iterator, so if you want to preserve the type of the reversed sequence (tuple, string, list, unicode, user types...), you need an additional step to convert it back. </span> &ndash;&nbsp;<a href="/users/12166/rafal-dowgird" title="5665 reputation" class="comment-user">Rafał Dowgird</a> <span class="comment-date"><span title="2009-06-24 14:08:57Z">Jun 24 '09 at 14:08</span></span></div></td>
    </tr>
            
    <tr id="comment-2139387" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">def reverse_string(string): return string[::-1]</span> &ndash;&nbsp;<a href="/users/15274/pi" title="1390 reputation" class="comment-user">pi</a> <span class="comment-date"><span title="2010-02-03 09:42:11Z">Feb 3 at 9:42</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101840" class="comments-link" title="expand to show all comments on this post">show <b>3</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="112286"></a>
    
    <div id="answer-112286" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="112286">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">157</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>From 2.5 onwards dicts have a special method <code>__missing__</code> that is invoked for missing items:</p>

<pre><code>&gt;&gt;&gt; class MyDict(dict):
...  def __missing__(self, key):
...   self[key] = rv = []
...   return rv
... 
&gt;&gt;&gt; m = MyDict()
&gt;&gt;&gt; m["foo"].append(1)
&gt;&gt;&gt; m["foo"].append(2)
&gt;&gt;&gt; dict(m)
{'foo': [1, 2]}
</code></pre>

<p>There is also a dict subclass in <code>collections</code> called <code>defaultdict</code> that does pretty much the same but calls a function without arguments for not existing items:</p>

<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; m = defaultdict(list)
&gt;&gt;&gt; m["foo"].append(1)
&gt;&gt;&gt; m["foo"].append(2)
&gt;&gt;&gt; dict(m)
{'foo': [1, 2]}
</code></pre>

<p>I recommend converting such dicts to regular dicts before passing them to functions that don't expect such subclasses.  A lot of code uses <code>d[a_key]</code> and catches KeyErrors to check if an item exists which would add a new item to the dict.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/112286#112286" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-112286" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/112286/revisions" title="show all edits to this post"><span title="2008-09-21 21:54:12Z" class="relativetime">Sep 21 '08 at 21:54</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 21:54. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-112286" href="/posts/112286/revisions" title="show revision history for this post">Armin Ronacher</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-112286" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-1730099" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I prefer using setdefault. m={} ; m.setdefault(&#39;foo&#39;,1)</span> &ndash;&nbsp;<a href="/users/433078/grayger" title="492 reputation" class="comment-user">grayger</a> <span class="comment-date"><span title="2009-12-03 03:03:28Z">Dec 3 '09 at 3:03</span></span></div></td>
    </tr>
            
    <tr id="comment-2985435" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@grayger meant this <code>m={}; m.setdefault(&#39;foo&#39;, []).append(1)</code>.</span> &ndash;&nbsp;<a href="/users/12892/cristian-ciupitu" title="1611 reputation" class="comment-user">Cristian Ciupitu</a> <span class="comment-date"><span title="2010-05-28 18:53:00Z">May 28 at 18:53</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-112286" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="112303"></a>
    
    <div id="answer-112303" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="112303">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">150</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>If you don't like using whitespace to denote scopes, you can use the C-style {} by issuing:</p>

<pre><code>from __future__ import braces
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/112303#112303" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-112303" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/112303/revisions" title="show all edits to this post"><span title="2008-09-21 22:01:53Z" class="relativetime">Sep 21 '08 at 22:01</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 22:01. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-112303" href="/posts/112303/revisions" title="show revision history for this post">eduffy</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-112303" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-22791" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">51</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">That&#39;s evil.  :)</span> &ndash;&nbsp;<a href="/users/2147/jason-baker" title="26373 reputation" class="comment-user">Jason Baker</a> <span class="comment-date"><span title="2008-09-22 04:32:18Z">Sep 22 '08 at 4:32</span></span></div></td>
    </tr>
            
    <tr id="comment-24674" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">15</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">    &gt;&gt;&gt; from <b>future</b> import braces
      File &quot;&lt;stdin&gt;&quot;, line 1
    SyntaxError: not a chance

:P</span> &ndash;&nbsp;<a href="/users/16128/benjamin-w-smith" title="230 reputation" class="comment-user">Benjamin W. Smith</a> <span class="comment-date"><span title="2008-09-22 19:55:07Z">Sep 22 '08 at 19:55</span></span></div></td>
    </tr>
            
    <tr id="comment-484474" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">18</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">that&#39;s blasphemy!</span> &ndash;&nbsp;<a href="/users/49709/berk-d-demir" title="597 reputation" class="comment-user">Berk D. Demir</a> <span class="comment-date"><span title="2009-03-22 13:24:34Z">Mar 22 '09 at 13:24</span></span></div></td>
    </tr>
            
    <tr id="comment-614485" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">152</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I think that we may have a syntactical mistake here, shouldn&#39;t that be &quot;from <b>past</b> import braces&quot;?  </span> &ndash;&nbsp;<a href="/users/12943/bill-k" title="16463 reputation" class="comment-user">Bill K</a> <span class="comment-date"><span title="2009-04-29 21:26:28Z">Apr 29 '09 at 21:26</span></span></div></td>
    </tr>
            
    <tr id="comment-820241" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">19</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">from <b>cruft</b> import braces</span> &ndash;&nbsp;<a href="/users/30478/digitala" title="1778 reputation" class="comment-user">digitala</a> <span class="comment-date"><span title="2009-06-18 07:16:24Z">Jun 18 '09 at 7:16</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-112303" class="comments-link" title="expand to show all comments on this post">show <b>13</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="114420"></a>
    
    <div id="answer-114420" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="114420">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">141</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>The for...else idiom (see <a href="http://docs.python.org/ref/for.html" rel="nofollow">http://docs.python.org/ref/for.html</a> )</p>

<pre><code>for i in foo:
    if i == 0:
        break
else:
    print("i was never 0")
</code></pre>

<p>The "else" block will be normally executed at the end of the for loop, unless the break is called.</p>

<p>The above code could be emulated as follows:</p>

<pre><code>found = False
for i in foo:
    if i == 0:
        found = True
        break
if not found: 
    print("i was never 0")
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/114420#114420" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-114420" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/114420/revisions" title="show all edits to this post"><span title="2008-11-23 10:23:07Z" class="relativetime">Nov 23 '08 at 10:23</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 11:55. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-114420" href="/posts/114420/revisions" title="show revision history for this post">2 revs, 2 users 65%<br>rlerallut</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-114420" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-69514" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">95</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I think the for/else syntax is awkward. It &quot;feels&quot; as if the else clause should be executed if the body of the loop is never executed.</span> &ndash;&nbsp;<a href="/users/3571/codeape" title="9984 reputation" class="comment-user">codeape</a> <span class="comment-date"><span title="2008-10-10 06:44:45Z">Oct 10 '08 at 6:44</span></span></div></td>
    </tr>
            
    <tr id="comment-74643" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">ah. Never saw that one! But I must say it is a bit of a misnomer. Who would expect the else block to execute only if break never does? I agree with codeape: It looks like else is entered for empty foos.</span> &ndash;&nbsp;<a href="/users/2260/daren-thomas" title="8586 reputation" class="comment-user">Daren Thomas</a> <span class="comment-date"><span title="2008-10-13 17:31:42Z">Oct 13 '08 at 17:31</span></span></div></td>
    </tr>
            
    <tr id="comment-267838" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Anyone remember the FOR var … NEXT var … END FOR var of Sinclair QL&#39;s SuperBasic? Everything between NEXT and END FOR would execute at the end of the loop, unless an EXIT FOR was issued. <i>That</i> syntax was cleaner :)</span> &ndash;&nbsp;<a href="/users/6899/" title="10586 reputation" class="comment-user">ΤΖΩΤΖΙΟΥ</a> <span class="comment-date"><span title="2009-01-15 12:28:15Z">Jan 15 '09 at 12:28</span></span></div></td>
    </tr>
            
    <tr id="comment-856012" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">18</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">seems like the keyword should be finally, not else</span> &ndash;&nbsp;<a href="/users/2908/jiaaro" title="4132 reputation" class="comment-user">Jiaaro</a> <span class="comment-date"><span title="2009-06-25 16:31:53Z">Jun 25 '09 at 16:31</span></span></div></td>
    </tr>
            
    <tr id="comment-865482" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Except finally is already used in a way where that suite is always executed.</span> &ndash;&nbsp;<span class="comment-user">Roger Pate</span> <span class="comment-date"><span title="2009-06-27 22:34:57Z">Jun 27 '09 at 22:34</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-114420" class="comments-link" title="expand to show all comments on this post">show <b>13</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="113198"></a>
    
    <div id="answer-113198" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="113198">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">140</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Be careful with mutable default arguments</strong></p>

<pre><code>&gt;&gt;&gt; def foo(x=[]):
...     x.append(1)
...     print x
... 
&gt;&gt;&gt; foo()
[1]
&gt;&gt;&gt; foo()
[1, 1]
&gt;&gt;&gt; foo()
[1, 1, 1]
</code></pre>

<p>Instead, you should use a sentinel value denoting "not given" and replace with the mutable you'd like as default:</p>

<pre><code>&gt;&gt;&gt; def foo(x=None):
...     if x is None:
...         x = []
...     x.append(1)
...     print x
&gt;&gt;&gt; foo()
[1]
&gt;&gt;&gt; foo()
[1]
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/113198#113198" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-113198" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/113198/revisions" title="show all edits to this post"><span title="2010-07-14 02:12:47Z" class="relativetime">Jul 14 at 2:12</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 4:34. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-113198" href="/posts/113198/revisions" title="show revision history for this post">2 revs, 2 users 67%<br>Jason Baker</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-113198" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-27599" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">11</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">That&#39;s definitely one of the more nasty hidden features. I&#39;ve run into it from time to time.</span> &ndash;&nbsp;<a href="/users/9567/torsten-marek" title="9936 reputation" class="comment-user">Torsten Marek</a> <span class="comment-date"><span title="2008-09-23 17:42:57Z">Sep 23 '08 at 17:42</span></span></div></td>
    </tr>
            
    <tr id="comment-1557739" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">33</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I found this a lot easier to understand when I learned that the default arguments live in a tuple that&#39;s an attribute of the function, e.g. <code>foo.func&#95;defaults</code>.  Which, being a tuple, is immutable.</span> &ndash;&nbsp;<a href="/users/19403/robert-rossney" title="18356 reputation" class="comment-user">Robert Rossney</a> <span class="comment-date"><span title="2009-11-05 20:43:03Z">Nov 5 '09 at 20:43</span></span></div></td>
    </tr>
            
    <tr id="comment-3187590" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@grayger:  As the def statement is executed its arguments are evaluated by the interpreter.  This creates (or rebinds) a name to a code object (the suite of the function).  However, the default arguments are instantiated as objects at the time of definition.  This is true of any time of defaulted object, but only significant (exposing visible semantics) when the object is mutable.  There&#39;s no way of re-binding that default argument name in the function&#39;s closure although it can obviously be over-ridden for any call or the whole function can be re-defined).</span> &ndash;&nbsp;<a href="/users/149076/jim-dennis" title="1671 reputation" class="comment-user">Jim Dennis</a> <span class="comment-date"><span title="2010-06-24 04:20:40Z">Jun 24 at 4:20</span></span><span class="edited-yes" title="this comment was edited"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-113198" class="comments-link" title="expand to show all comments on this post">show <b>5</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101537"></a>
    
    <div id="answer-101537" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101537">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">133</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Readable regular expressions</strong></p>

<p>In Python you can split a regular expression over multiple lines, name your matches and insert comments.</p>

<p>Example verbose syntax (from <a href="http://diveintopython.org/regular%5Fexpressions/index.html" rel="nofollow">Dive into Python</a>):</p>

<pre><code>&gt;&gt;&gt; pattern = """
... ^                   # beginning of string
... M{0,4}              # thousands - 0 to 4 M's
... (CM|CD|D?C{0,3})    # hundreds - 900 (CM), 400 (CD), 0-300 (0 to 3 C's),
...                     #            or 500-800 (D, followed by 0 to 3 C's)
... (XC|XL|L?X{0,3})    # tens - 90 (XC), 40 (XL), 0-30 (0 to 3 X's),
...                     #        or 50-80 (L, followed by 0 to 3 X's)
... (IX|IV|V?I{0,3})    # ones - 9 (IX), 4 (IV), 0-3 (0 to 3 I's),
...                     #        or 5-8 (V, followed by 0 to 3 I's)
... $                   # end of string
... """
&gt;&gt;&gt; re.search(pattern, 'M', re.VERBOSE)
</code></pre>

<p>Example naming matches (from <a href="http://www.amk.ca/python/howto/regex/" rel="nofollow">Regular Expression HOWTO</a>)</p>

<pre><code>&gt;&gt;&gt; p = re.compile(r'(?P&lt;word&gt;\b\w+\b)')
&gt;&gt;&gt; m = p.search( '(((( Lots of punctuation )))' )
&gt;&gt;&gt; m.group('word')
'Lots'
</code></pre>

<p>You can also verbosely write a regex without using <code>re.VERBOSE</code> thanks to string literal concatenation.</p>

<pre><code>&gt;&gt;&gt; pattern = (
...     "^"                 # beginning of string
...     "M{0,4}"            # thousands - 0 to 4 M's
...     "(CM|CD|D?C{0,3})"  # hundreds - 900 (CM), 400 (CD), 0-300 (0 to 3 C's),
...                         #            or 500-800 (D, followed by 0 to 3 C's)
...     "(XC|XL|L?X{0,3})"  # tens - 90 (XC), 40 (XL), 0-30 (0 to 3 X's),
...                         #        or 50-80 (L, followed by 0 to 3 X's)
...     "(IX|IV|V?I{0,3})"  # ones - 9 (IX), 4 (IV), 0-3 (0 to 3 I's),
...                         #        or 5-8 (V, followed by 0 to 3 I's)
...     "$"                 # end of string
... )
&gt;&gt;&gt; print pattern
"^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$"
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101537#101537" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101537" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101537/revisions" title="show all edits to this post"><span title="2009-06-27 22:26:56Z" class="relativetime">Jun 27 '09 at 22:26</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101537" href="/posts/101537/revisions" title="show revision history for this post">2 revs, 2 users 61%<br>dungema</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101537" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-22130" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I don&#39;t know if I&#39;d really consider that a Python feature, most RE engines have a verbose option.</span> &ndash;&nbsp;<a href="/users/1114/jeremy-banks" title="1930 reputation" class="comment-user">Jeremy Banks</a> <span class="comment-date"><span title="2008-09-21 20:44:21Z">Sep 21 '08 at 20:44</span></span></div></td>
    </tr>
            
    <tr id="comment-83175" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">8</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Yes, but because you can&#39;t do it in grep or in most editors, a lot of people don&#39;t know it&#39;s there. The fact that other languages have an equivalent feature doesn&#39;t make it not a useful and little known feature of python</span> &ndash;&nbsp;<a href="/users/11815/mark-baker" title="1660 reputation" class="comment-user">Mark Baker</a> <span class="comment-date"><span title="2008-10-17 09:08:12Z">Oct 17 '08 at 9:08</span></span></div></td>
    </tr>
            
    <tr id="comment-484463" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">In a large project with lots of optimized regular expressions (read: optimized for machine but not human beings), I bit the bullet and converted all of them to verbose syntax. Now, introducing new developers to projects is much easier. From now on we enforce verbose REs on every project.</span> &ndash;&nbsp;<a href="/users/49709/berk-d-demir" title="597 reputation" class="comment-user">Berk D. Demir</a> <span class="comment-date"><span title="2009-03-22 13:18:25Z">Mar 22 '09 at 13:18</span></span></div></td>
    </tr>
            
    <tr id="comment-865472" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@Ken: a regex may not always be directly in the source, it could be read from settings or a config file. Allowing comments or just additional whitespace (for readability) can be a great help.</span> &ndash;&nbsp;<span class="comment-user">Roger Pate</span> <span class="comment-date"><span title="2009-06-27 22:30:35Z">Jun 27 '09 at 22:30</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101537" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="102037"></a>
    
    <div id="answer-102037" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="102037">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">129</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>In-place value swapping</strong></p>

<pre><code>&gt;&gt;&gt; a = 10
&gt;&gt;&gt; b = 5
&gt;&gt;&gt; a, b
(10, 5)

&gt;&gt;&gt; a, b = b, a
&gt;&gt;&gt; a, b
(5, 10)
</code></pre>

<p>The right-hand side of the assignment is an expression that creates a new tuple. The left-hand side of the assignment immediately unpacks that (unreferenced) tuple to the names <code>a</code> and <code>b</code>.</p>

<p>After the assignment, the new tuple is unreferenced and marked for garbage collection, and the values bound to <code>a</code> and <code>b</code> have been swapped.</p>

<p>As noted in the <a href="http://docs.python.org/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">Python tutorial section on data structures</a>,</p>

<blockquote>
  <p>Note that multiple assignment is really just a combination of tuple packing and sequence unpacking.</p>
</blockquote>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/102037#102037" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-102037" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/102037/revisions" title="show all edits to this post"><span title="2010-04-06 01:40:30Z" class="relativetime">Apr 6 at 1:40</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-102037" href="/posts/102037/revisions" title="show revision history for this post">4 revs, 3 users 47%<br>Lucas S.</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-102037" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-3107913" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Does this use more real memory than the traditional way? I would guess do since you are creating a tuple, instead of just one swap variable</span> &ndash;&nbsp;<a href="/users/88905/nathan" title="845 reputation" class="comment-user">Nathan</a> <span class="comment-date"><span title="2010-06-14 14:24:19Z">Jun 14 at 14:24</span></span><span class="edited-yes" title="this comment was edited"></span></div></td>
    </tr>
            
    <tr id="comment-3348712" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">12</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">It doesn&#39;t use more memory. It uses less.. I just wrote it both ways, and de-compiled the bytecode.. the compiler optimizes, as you&#39;d hope it would. dis results showed it&#39;s setting up the vars, and then ROT_TWOing. ROT_TWO means &#39;swap the two top-most stack vars&#39;...  Pretty snazzy, actually.</span> &ndash;&nbsp;<a href="/users/133934/royal" title="202 reputation" class="comment-user">royal</a> <span class="comment-date"><span title="2010-07-13 22:41:40Z">Jul 13 at 22:41</span></span><span class="edited-yes" title="this comment was edited 3 times"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    
</td>
</tr>
        </table>
    </div>

    <a name="109182"></a>
    
    <div id="answer-109182" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="109182">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">107</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Context managers and the "<code>with</code>" Statement</strong></p>

<p>Introduced in <a href="http://www.python.org/dev/peps/pep-0343/" rel="nofollow">PEP 343</a>, a <a href="http://docs.python.org/library/stdtypes.html#context-manager-types" rel="nofollow">context manager</a> is an object that acts as a run-time context for a suite of statements.</p>

<p>Since the feature makes use of new keywords, it is introduced gradually: it is available in Python 2.5 via the <a href="http://docs.python.org/lib/module-future.html" rel="nofollow"><code>__future__</code></a> directive. Python 2.6 and above (including Python 3) has it available by default.</p>

<p>I have used the <a href="http://www.python.org/dev/peps/pep-0343/" rel="nofollow">"with" statement</a> a lot because I think it's a very useful construct, here is a quick demo:</p>

<pre><code>from __future__ import with_statement

with open('foo.txt', 'w') as f:
    f.write('hello!')
</code></pre>

<p>What's happening here behind the scenes, is that the <a href="http://www.python.org/dev/peps/pep-0343/" rel="nofollow">"with" statement</a> calls the special <code>__enter__</code> and <code>__exit__</code> methods on the file object. Exception details are also passed to <code>__exit__</code> if any exception was raised from the with statement body, allowing for exception handling to happen there.</p>

<p>What this does for you in this particular case is that it guarantees that the file is closed when execution falls out of scope of the <code>with</code> suite, regardless if that occurs normally or whether an exception was thrown. It is basically a way of abstracting away common exception-handling code.</p>

<p>Other common use cases for this include locking with threads and database transactions. </p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/109182#109182" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-109182" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/109182/revisions" title="show all edits to this post"><span title="2010-04-06 02:02:02Z" class="relativetime">Apr 6 at 2:02</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-109182" href="/posts/109182/revisions" title="show revision history for this post">5 revs, 5 users 56%<br>Ycros</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-109182" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-817630" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Yes, such &quot;cute&quot; features as nested scopes and generators are better left to those who know what they&#39;re doing.  And anyone who wants to be compatible with future versions of Python.  For nested scopes and generators, &quot;future versions&quot; of Python means 2.2 and 2.5, respectively.  For the with statement, &quot;future versions&quot; of Python means 2.6.</span> &ndash;&nbsp;<a href="/users/9161/chris-b" title="4295 reputation" class="comment-user">Chris B.</a> <span class="comment-date"><span title="2009-06-17 18:33:01Z">Jun 17 '09 at 18:33</span></span></div></td>
    </tr>
            
    <tr id="comment-1670030" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This may go without saying, but with python v2.6+, you no longer need to import from <b>future</b>.  with is now a first class keyword.</span> &ndash;&nbsp;<a href="/users/135121/fitzgeraldsteele" title="583 reputation" class="comment-user">fitzgeraldsteele</a> <span class="comment-date"><span title="2009-11-23 14:28:03Z">Nov 23 '09 at 14:28</span></span></div></td>
    </tr>
            
    <tr id="comment-3359428" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">In 2.7 you can have multiple <code>withs</code> :)  

        `with open(&#39;filea&#39;) as filea and open(&#39;fileb&#39;) as fileb:
            ...`</span> &ndash;&nbsp;<a href="/users/157441/austin" title="207 reputation" class="comment-user">Austin</a> <span class="comment-date"><span title="2010-07-14 21:50:59Z">Jul 14 at 21:50</span></span><span class="edited-yes" title="this comment was edited 2 times"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-109182" class="comments-link" title="expand to show all comments on this post">show <b>1</b> more comment</a>
</td>
</tr>
        </table>
    </div>

    <a name="111176"></a>
    
    <div id="answer-111176" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="111176">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">106</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Function argument unpacking</strong></p>

<p>You can unpack a list or a dictionary as function arguments using <code>*</code> and <code>**</code>.</p>

<p>For example:</p>

<pre><code>def draw_point(x, y):
    # do some magic

point_foo = (3, 4)
point_bar = {'y': 3, 'x': 2}

draw_point(*point_foo)
draw_point(**point_bar)
</code></pre>

<p>Very useful shortcut since lists, tuples and dicts are widely used as containers.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/111176#111176" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-111176" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/111176/revisions" title="show all edits to this post"><span title="2010-06-23 12:13:20Z" class="relativetime">Jun 23 at 12:13</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-111176" href="/posts/111176/revisions" title="show revision history for this post">4 revs, 3 users 64%<br>e-satis</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-111176" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-225564" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I remember when I first found this and had a fun night of caffeine binging trying to figure it out. Ahhh, those were the days.</span> &ndash;&nbsp;<a href="/users/13876/sli" title="570 reputation" class="comment-user">sli</a> <span class="comment-date"><span title="2008-12-30 09:45:05Z">Dec 30 '08 at 9:45</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-111176" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="102065"></a>
    
    <div id="answer-102065" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="102065">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post" style="font-size:200%;">101</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><a href="http://docs.python.org/lib/module-doctest.html" rel="nofollow">Doctest</a>: documentation and unit-testing at the same time. </p>

<p>Example extracted from the Python documentation:</p>

<pre><code>def factorial(n):
    """Return the factorial of n, an exact integer &gt;= 0.

    If the result is small enough to fit in an int, return an int.
    Else return a long.

    &gt;&gt;&gt; [factorial(n) for n in range(6)]
    [1, 1, 2, 6, 24, 120]
    &gt;&gt;&gt; factorial(-1)
    Traceback (most recent call last):
        ...
    ValueError: n must be &gt;= 0

    Factorials of floats are OK, but the float must be an exact integer:
    """

    import math
    if not n &gt;= 0:
        raise ValueError("n must be &gt;= 0")
    if math.floor(n) != n:
        raise ValueError("n must be exact integer")
    if n+1 == n:  # catch a value like 1e300
        raise OverflowError("n too large")
    result = 1
    factor = 2
    while factor &lt;= n:
        result *= factor
        factor += 1
    return result

def _test():
    import doctest
    doctest.testmod()    

if __name__ == "__main__":
    _test()
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/102065#102065" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-102065" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/102065/revisions" title="show all edits to this post"><span title="2010-01-13 22:06:18Z" class="relativetime">Jan 13 at 22:06</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-102065" href="/posts/102065/revisions" title="show revision history for this post">3 revs, 2 users 92%<br>Pierre-Jean Coudert</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-102065" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-445631" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Doctests are certainly cool, but I really dislike all the cruft you have to type to test that something should raise an exception</span> &ndash;&nbsp;<a href="/users/12983/tm" title="6313 reputation" class="comment-user">TM</a> <span class="comment-date"><span title="2009-03-10 22:55:08Z">Mar 10 '09 at 22:55</span></span></div></td>
    </tr>
            
    <tr id="comment-655162" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">30</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Doctests are overrated and pollute the documentation. How often do you test a standalone function without any setUp() ?</span> &ndash;&nbsp;<a href="/users/102704/a-paid-nerd" title="2681 reputation" class="comment-user">a paid nerd</a> <span class="comment-date"><span title="2009-05-11 04:34:10Z">May 11 '09 at 4:34</span></span></div></td>
    </tr>
            
    <tr id="comment-1726730" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">who says you can&#39;t have setup in a doctest? write a function that generates the context and returns <code>locals()</code> then in your doctest do <code>locals().update(setUp())</code> =D</span> &ndash;&nbsp;<a href="/users/2908/jiaaro" title="4132 reputation" class="comment-user">Jiaaro</a> <span class="comment-date"><span title="2009-12-02 17:27:14Z">Dec 2 '09 at 17:27</span></span></div></td>
    </tr>
            
    <tr id="comment-2675711" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">If a standalone function requires a setUp, chances are high that it should be decoupled from some unrelated stuff or put into a class. Class doctest namespace can then be re-used in class method doctests, so it&#39;s a bit like setUp, only DRY and readable.</span> &ndash;&nbsp;<a href="/users/68097/andy-mikhaylenko" title="130 reputation" class="comment-user">Andy Mikhaylenko</a> <span class="comment-date"><span title="2010-04-17 14:38:47Z">Apr 17 at 14:38</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-102065" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="1024693"></a>
    
    <div id="answer-1024693" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="1024693">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">99</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>ROT13 is a valid encoding for source code, when you use the right coding declaration at the top of the code file:</p>

<pre><code>#!/usr/bin/env python
# -*- coding: rot13 -*-

cevag "Uryyb fgnpxbiresybj!".rapbqr("rot13")
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/1024693#1024693" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-1024693" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/1024693/revisions" title="show all edits to this post"><span title="2009-06-21 20:35:44Z" class="relativetime">Jun 21 '09 at 20:35</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Jun 21 '09 at 20:32. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-1024693" href="/posts/1024693/revisions" title="show revision history for this post">2 revs, 2 users 63%<br>André</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-1024693" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-1369639" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">6</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Great! Notice how byte strings are taken literally, but unicode strings are decoded: try <code>cevag h&quot;Uryyb fgnpxbiresybj!&quot;</code></span> &ndash;&nbsp;<a href="/users/137317/kaizer-se" title="5739 reputation" class="comment-user">kaizer.se</a> <span class="comment-date"><span title="2009-10-04 01:12:29Z">Oct 4 '09 at 1:12</span></span></div></td>
    </tr>
            
    <tr id="comment-1842655" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">unfortunately it is removed from py3k</span> &ndash;&nbsp;<a href="/users/234248/mykhal" title="2207 reputation" class="comment-user">mykhal</a> <span class="comment-date"><span title="2009-12-19 18:33:59Z">Dec 19 '09 at 18:33</span></span></div></td>
    </tr>
            
    <tr id="comment-2871234" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This is good for bypassing antivirus.</span> &ndash;&nbsp;<a href="/users/80243/longpoke" title="3310 reputation" class="comment-user">Longpoke</a> <span class="comment-date"><span title="2010-05-13 20:37:35Z">May 13 at 20:37</span></span></div></td>
    </tr>
            
    <tr id="comment-3352188" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="supernova">35</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">That has nothing to do with the encoding, it is just Python written in Welsh. :-P</span> &ndash;&nbsp;<a href="/users/262667/olivier" title="3854 reputation" class="comment-user">Olivier</a> <span class="comment-date"><span title="2010-07-14 09:45:33Z">Jul 14 at 9:45</span></span></div></td>
    </tr>
            
    <tr id="comment-3754872" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">12</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Ph&#39;nglui mglw&#39;nafh Cthulhu R&#39;lyeh wgah&#39;nagl fhtagn!</span> &ndash;&nbsp;<a href="/users/4749/manuel-ferreria" title="720 reputation" class="comment-user">Manuel Ferreria</a> <span class="comment-date"><span title="2010-08-26 22:08:26Z">Aug 26 at 22:08</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-1024693" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="111970"></a>
    
    <div id="answer-111970" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="111970">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">94</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>Dictionaries have a 'get()' method. If you do d['key'] and key isn't there, you get an exception. If you do d.get('key'), you get back None if 'key' isn't there. You can add a second argument to get that item back instead of None, eg: d.get('key', 0).</p>

<p>It's great for things like adding up numbers:</p>

<p><code>sum[value] = sum.get(value, 0) + 1</code></p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/111970#111970" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-111970" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/111970/revisions" title="show all edits to this post"><span title="2008-09-21 20:18:19Z" class="relativetime">Sep 21 '08 at 20:18</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 20:18. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-111970" href="/posts/111970/revisions" title="show revision history for this post">Rory</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-111970" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-74636" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">17</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">also, checkout the setdefault method.</span> &ndash;&nbsp;<a href="/users/2260/daren-thomas" title="8586 reputation" class="comment-user">Daren Thomas</a> <span class="comment-date"><span title="2008-10-13 17:29:27Z">Oct 13 '08 at 17:29</span></span></div></td>
    </tr>
            
    <tr id="comment-155013" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">10</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">also, checkout collections.defaultdict class.</span> &ndash;&nbsp;<a href="/users/4279/j-f-sebastian" title="20511 reputation" class="comment-user">J.F. Sebastian</a> <span class="comment-date"><span title="2008-11-23 10:35:07Z">Nov 23 '08 at 10:35</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-111970" class="comments-link" title="expand to show all comments on this post">show <b>1</b> more comment</a>
</td>
</tr>
        </table>
    </div>

    <a name="102062"></a>
    
    <div id="answer-102062" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="102062">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">93</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Descriptors</strong></p>

<p>They're the magic behind a whole bunch of core Python features. </p>

<p>When you use dotted access to look up a member (eg, x.y), Python first looks for the member in the instance dictionary. If it's not found, it looks for it in the class dictionary. If it finds it in the class dictionary, and the object implements the descriptor protocol, instead of just returning it, Python executes it. A descriptor is any class that implements the <code>__get__</code>, <code>__set__</code>, or <code>__del__</code> methods.</p>

<p>Here's how you'd implement your own (read-only) version of property using descriptors:</p>

<pre><code>class Property(object):
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, obj, type):
        if obj is None:
            return self
        return self.fget(obj)
</code></pre>

<p>and you'd use it just like the built-in property():</p>

<pre><code>class MyClass(object):
    @Property
    def foo(self):
        return "Foo!"
</code></pre>

<p>Descriptors are used in Python to implement properties, bound methods, static methods, class methods and slots, amongst other things. Understanding them makes it easy to see why a lot of things that previously looked like Python 'quirks' are the way they are.</p>

<p>Raymond Hettinger has <a href="http://users.rcn.com/python/download/Descriptor.htm" rel="nofollow">an excellent tutorial</a> that does a much better job of describing them than I do.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/102062#102062" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-102062" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/102062/revisions" title="show all edits to this post"><span title="2009-10-18 08:48:22Z" class="relativetime">Oct 18 '09 at 8:48</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-102062" href="/posts/102062/revisions" title="show revision history for this post">5 revs, 5 users 82%<br>Nick Johnson</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-102062" class="comments dno">
        <table>
        <tbody>
        
            <tr><td></td><td></td></tr>
        
        </tbody>
    
        </table>
    </div>
    
</td>
</tr>
        </table>
    </div>

    <a name="108297"></a>
    
    <div id="answer-108297" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="108297">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">89</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Creating new types at runtime</strong></p>

<pre><code>&gt;&gt;&gt; NewType = type("NewType", (object,), {"x": "hello"})
&gt;&gt;&gt; n = NewType()
&gt;&gt;&gt; n.x
"hello"
</code></pre>

<p>which is exactly the same as</p>

<pre><code>&gt;&gt;&gt; class NewType(object):
&gt;&gt;&gt;     x = "hello"
&gt;&gt;&gt; n = NewType()
&gt;&gt;&gt; n.x
"hello"
</code></pre>

<p>Probably not the most useful thing, but nice to know.</p>

<p><strong>Edit</strong>: Fixed name of new type, should be <code>NewType</code> to be the exact same thing as with <code>class</code> statement.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/108297#108297" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-108297" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/108297/revisions" title="show all edits to this post"><span title="2008-09-23 17:39:56Z" class="relativetime">Sep 23 '08 at 17:39</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-108297" href="/posts/108297/revisions" title="show revision history for this post">2 revs<br>Torsten Marek</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-108297" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-24471" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This has a lot of potential for usefulness, e.g., JIT ORMs</span> &ndash;&nbsp;<a href="/users/1659/mark-cidade" title="22914 reputation" class="comment-user">Mark Cidade</a> <span class="comment-date"><span title="2008-09-22 18:44:44Z">Sep 22 '08 at 18:44</span></span></div></td>
    </tr>
            
    <tr id="comment-472316" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I use it to generate HTML-Form classes based on a dynamic input. Very nice!</span> &ndash;&nbsp;<a href="/users/15274/pi" title="1390 reputation" class="comment-user">pi</a> <span class="comment-date"><span title="2009-03-18 16:00:13Z">Mar 18 '09 at 16:00</span></span></div></td>
    </tr>
            
    <tr id="comment-1905672" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">5</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Note: all classes are created at runtime. So you can use the &#39;class&#39; statement within a conditional, or within a function (very useful for creating families of classes or classes that act as closures). 

The improvement that &#39;type&#39; brings is the ability to neatly define a dynamically generated set of attributes (or bases).
</span> &ndash;&nbsp;<a href="/users/182604/spookylukey" title="497 reputation" class="comment-user">spookylukey</a> <span class="comment-date"><span title="2010-01-01 14:02:02Z">Jan 1 at 14:02</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-108297" class="comments-link" title="expand to show all comments on this post">show <b>1</b> more comment</a>
</td>
</tr>
        </table>
    </div>

    <a name="116480"></a>
    
    <div id="answer-116480" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="116480">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">80</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Conditional Assignment</strong></p>

<pre><code>x = 3 if (y == 1) else 2
</code></pre>

<p>It does exactly what it sounds like: "assign 3 to x if y is 1, otherwise assign 2 to x". Note that the parens are not necessary, but I like them for readability. You can also chain it if you have something more complicated:</p>

<pre><code>x = 3 if (y == 1) else 2 if (y == -1) else 1
</code></pre>

<p>Though at a certain point, it goes a little too far.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/116480#116480" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-116480" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/116480/revisions" title="show all edits to this post"><span title="2008-09-22 18:08:54Z" class="relativetime">Sep 22 '08 at 18:08</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 18:08. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-116480" href="/posts/116480/revisions" title="show revision history for this post">tghw</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-116480" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-128354" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">16</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">The assignment is not the special part.  You could just as easily do something like: return 3 if (y == 1) else 2.</span> &ndash;&nbsp;<a href="/users/18192/brian" title="9023 reputation" class="comment-user">Brian</a> <span class="comment-date"><span title="2008-11-09 05:39:47Z">Nov 9 '08 at 5:39</span></span></div></td>
    </tr>
            
    <tr id="comment-776571" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">13</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">That alternate way is the first time I&#39;ve seen obfuscated Python.</span> &ndash;&nbsp;<a href="/users/60075/craig-mcqueen" title="4428 reputation" class="comment-user">Craig McQueen</a> <span class="comment-date"><span title="2009-06-09 04:18:48Z">Jun 9 '09 at 4:18</span></span></div></td>
    </tr>
            
    <tr id="comment-930746" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Kylebrooks: It doesn&#39;t in that case, boolean operators short circuit.  It will only evaluate 2 if bool(3) == False.</span> &ndash;&nbsp;<a href="/users/105886/roadierich" title="88 reputation" class="comment-user">RoadieRich</a> <span class="comment-date"><span title="2009-07-12 00:23:03Z">Jul 12 '09 at 0:23</span></span></div></td>
    </tr>
            
    <tr id="comment-1456755" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">9</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">this backwards-style coding confusing me. something like <code>x = ((y == 1) ? 3 : 2)</code> makes more sense to me</span> &ndash;&nbsp;<a href="/users/65387/ralph" title="9601 reputation" class="comment-user">Ralph</a> <span class="comment-date"><span title="2009-10-20 07:12:02Z">Oct 20 '09 at 7:12</span></span></div></td>
    </tr>
            
    <tr id="comment-1734289" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">4</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I feel just the opposite of @Mark, C-style ternary operators have always confused me, is the right side or the middle what gets evaluated on a false condition?  I much prefer Python&#39;s ternary syntax.</span> &ndash;&nbsp;<a href="/users/124497/jeffrey-harris" title="867 reputation" class="comment-user">Jeffrey Harris</a> <span class="comment-date"><span title="2009-12-03 16:51:54Z">Dec 3 '09 at 16:51</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-116480" class="comments-link" title="expand to show all comments on this post">show <b>5</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="113164"></a>
    
    <div id="answer-113164" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="113164">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">76</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>Named formatting, % -formatting takes a dictionary (also applies %i/%s etc. validation).</p>

<pre><code>&gt;&gt;&gt; print "The %(foo)s is %(bar)i." % {'foo': 'answer', 'bar':42}
The answer is 42.

&gt;&gt;&gt; foo, bar = 'question', 123

&gt;&gt;&gt; print "The %(foo)s is %(bar)i." % locals()
The question is 123.
</code></pre>

<p>And since locals() is also a dictionary, you can simply pass that as a dict and have % -substitions from your local variables. I think this is frowned upon, but simplifies things..</p>

<p><strong>New Style Formatting</strong></p>

<pre><code>&gt;&gt;&gt; print "The {foo} is {bar}".format(foo='answer', bar=42)
</code></pre>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/113164#113164" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-113164" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/113164/revisions" title="show all edits to this post"><span title="2010-07-16 19:06:06Z" class="relativetime">Jul 16 at 19:06</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 4:23. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-113164" href="/posts/113164/revisions" title="show revision history for this post">3 revs, 3 users 80%<br>Pasi Savolainen</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-113164" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-57357" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">29</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Will be phased out and eventually replaced with string&#39;s format() method.</span> &ndash;&nbsp;<a href="/users/20310/constantin" title="5609 reputation" class="comment-user">Constantin</a> <span class="comment-date"><span title="2008-10-05 09:41:04Z">Oct 5 '08 at 9:41</span></span></div></td>
    </tr>
            
    <tr id="comment-73206" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Named formatting is very useful for translators as they tend to just see the format string without the variable names for context</span> &ndash;&nbsp;<a href="/users/4421/pixelbeat" title="3681 reputation" class="comment-user">pixelbeat</a> <span class="comment-date"><span title="2008-10-12 22:45:00Z">Oct 12 '08 at 22:45</span></span></div></td>
    </tr>
            
    <tr id="comment-880807" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Appears to work in python 3.0.1 (needed to add parenttheses around print call).</span> &ndash;&nbsp;<a href="/users/20195/pasi-savolainen" title="1374 reputation" class="comment-user">Pasi Savolainen</a> <span class="comment-date"><span title="2009-07-01 11:32:41Z">Jul 1 '09 at 11:32</span></span></div></td>
    </tr>
            
    <tr id="comment-1614199" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">a <i>hash</i>, huh? I see where you came from.</span> &ndash;&nbsp;<a href="/users/96282/shylent" title="2769 reputation" class="comment-user">shylent</a> <span class="comment-date"><span title="2009-11-14 13:45:54Z">Nov 14 '09 at 13:45</span></span></div></td>
    </tr>
            
    <tr id="comment-3353539" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">3</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">%s formatting will not be phased out. str.format() is certainly more pythonic, however is actually 10x&#39;s slower for simple string replacement.

My belief is %s formatting is still best practice.</span> &ndash;&nbsp;<a href="/users/120004/kenneth-reitz" title="410 reputation" class="comment-user">Kenneth Reitz</a> <span class="comment-date"><span title="2010-07-14 12:34:07Z">Jul 14 at 12:34</span></span><span class="edited-yes" title="this comment was edited"></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-113164" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="102006"></a>
    
    <div id="answer-102006" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="102006">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">73</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Re-raising exceptions</strong>:</p>

<pre><code># Python 2 syntax
try:
    some_operation()
except SomeError, e:
    if is_fatal(e):
        raise
    handle_nonfatal(e)

# Python 3 syntax
try:
    some_operation()
except SomeError as e:
    if is_fatal(e):
        raise
    handle_nonfatal(e)
</code></pre>

<p>The 'raise' statement with no arguments inside an error handler tells Python to re-raise the exception <em>with the original traceback intact</em>, allowing you to say "oh, sorry, sorry, I didn't mean to catch that, sorry, sorry."</p>

<p>If you wish to print, store or fiddle with the original traceback, you can get it with sys.exc_info(), and printing it like Python would is done with the 'traceback' module.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/102006#102006" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-102006" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/102006/revisions" title="show all edits to this post"><span title="2010-04-06 02:08:56Z" class="relativetime">Apr 6 at 2:08</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-102006" href="/posts/102006/revisions" title="show revision history for this post">2 revs, 2 users 71%<br>Thomas Wouters</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-102006" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-635541" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">8</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Maybe more magical, <code>exc&#95;info = sys.exc&#95;info(); raise exc&#95;info[0], exc&#95;info[1], exc&#95;info[2]</code> is equivalent to this, but you can change those values around (e.g., change the exception type or message)</span> &ndash;&nbsp;<a href="/users/20218/ianb" title="389 reputation" class="comment-user">ianb</a> <span class="comment-date"><span title="2009-05-05 20:27:22Z">May 5 '09 at 20:27</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-102006" class="comments-link" title="expand to show all comments on this post">show <b>4</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="113833"></a>
    
    <div id="answer-113833" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="113833">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">66</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>To add more python modules (espcially 3rd party ones), most people seem to use PYTHONPATH environment variables or they add symlinks or directories in their site-packages directories. Another way, is to use *.pth files. Here's the official python doc's explanation:</p>

<blockquote>
  <p>"The most convenient way [to modify
  python's search path] is to add a path
  configuration file to a directory
  that's already on Python's path,
  usually to the .../site-packages/
  directory. Path configuration files
  have an extension of .pth, and each
  line must contain a single path that
  will be appended to sys.path. (Because
  the new paths are appended to
  sys.path, modules in the added
  directories will not override standard
  modules. This means you can't use this
  mechanism for installing fixed
  versions of standard modules.)"</p>
</blockquote>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/113833#113833" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-113833" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/113833/revisions" title="show all edits to this post"><span title="2008-09-22 08:43:11Z" class="relativetime">Sep 22 '08 at 8:43</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 8:43. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-113833" href="/posts/113833/revisions" title="show revision history for this post">dgrant</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-113833" class="comments dno">
        <table>
        <tbody>
        
            <tr><td></td><td></td></tr>
        
        </tbody>
    
        </table>
    </div>
    <a id="comments-link-113833" class="comments-link" title="expand to show all comments on this post">show <b>1</b> more comment</a>
</td>
</tr>
        </table>
    </div>

    <a name="168270"></a>
    
    <div id="answer-168270" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="168270">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">63</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Interactive Interpreter Tab Completion</strong></p>

<pre><code>try:
    import readline
except ImportError:
    print "Unable to load readline module."
else:
    import rlcompleter
    readline.parse_and_bind("tab: complete")


&gt;&gt;&gt; class myclass:
...    def function(self):
...       print "my function"
... 
&gt;&gt;&gt; class_instance = myclass()
&gt;&gt;&gt; class_instance.&lt;TAB&gt;
class_instance.__class__   class_instance.__module__
class_instance.__doc__     class_instance.function
&gt;&gt;&gt; class_instance.f&lt;TAB&gt;unction()
</code></pre>

<p>You will also have to set a PYTHONSTARTUP environment variable.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/168270#168270" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-168270" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/168270/revisions" title="show all edits to this post"><span title="2008-10-03 18:38:15Z" class="relativetime">Oct 3 '08 at 18:38</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Oct 3 '08 at 18:38. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-168270" href="/posts/168270/revisions" title="show revision history for this post">mjard</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-168270" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-73209" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">This is a very useful feature. So much so I&#39;ve a simple script to enable it (plus a couple of other introspection enhancements):
<a href="http://www.pixelbeat.org/scripts/inpy" rel="nofollow">pixelbeat.org/scripts/inpy</a></span> &ndash;&nbsp;<a href="/users/4421/pixelbeat" title="3681 reputation" class="comment-user">pixelbeat</a> <span class="comment-date"><span title="2008-10-12 22:49:49Z">Oct 12 '08 at 22:49</span></span></div></td>
    </tr>
            
    <tr id="comment-254053" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">17</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">IPython gives you this plus tons of other neat stuff</span> &ndash;&nbsp;<a href="/users/15770/akaihola" title="2006 reputation" class="comment-user">akaihola</a> <span class="comment-date"><span title="2009-01-10 03:47:30Z">Jan 10 '09 at 3:47</span></span></div></td>
    </tr>
            
    <tr id="comment-1542048" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">@akaihola read the main qn.</span> &ndash;&nbsp;<a href="/users/200816/sriram" title="163 reputation" class="comment-user">Sriram</a> <span class="comment-date"><span title="2009-11-03 17:43:22Z">Nov 3 '09 at 17:43</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-168270" class="comments-link" title="expand to show all comments on this post">show <b>4</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101276"></a>
    
    <div id="answer-101276" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101276">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">56</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p><strong>Main messages :)</strong></p>

<pre><code>import this
# btw look at this module's source :)
</code></pre>

<p><hr /></p>

<p><a href="http://svn.python.org/view/python/trunk/Lib/this.py?view=markup" rel="nofollow">De-cyphered</a>:</p>

<blockquote>
  <p>The Zen of Python, by Tim Peters    </p>
  
  <p>Beautiful is better than ugly.<br />
  Explicit is better than implicit.<br />
  Simple is better than complex.<br />
  Complex is better than complicated.<br />
  Flat is better than nested.<br />
  Sparse is better than dense.<br />
  Readability counts.<br />
  Special cases aren't special enough to break the rules.<br />
  Although practicality beats purity.<br />
  Errors should never pass silently.<br />
  Unless explicitly silenced.<br />
  In the face of ambiguity, refuse the temptation to guess.
  There should be one-- and preferably only one --obvious way to do it.<br />
  Although that way may not be obvious at first unless you're Dutch.<br />
  Now is better than never.<br />
  Although never is often better than <em>right</em> now.<br />
  If the implementation is hard to explain, it's a bad idea.<br />
  If the implementation is easy to explain, it may be a good idea.<br />
  Namespaces are one honking great idea -- let's do more of those!  </p>
</blockquote>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101276#101276" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101276" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/101276/revisions" title="show all edits to this post"><span title="2009-10-20 07:08:14Z" class="relativetime">Oct 20 '09 at 7:08</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101276" href="/posts/101276/revisions" title="show revision history for this post">2 revs, 2 users 83%<br>Mark</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101276" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-229720" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="hot">22</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">the way the source is written goes against the zen!</span> &ndash;&nbsp;<a href="/users/35364/hasen-j" title="10107 reputation" class="comment-user">hasen j</a> <span class="comment-date"><span title="2009-01-01 05:39:26Z">Jan 1 '09 at 5:39</span></span></div></td>
    </tr>
            
    <tr id="comment-851330" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy"><a href="http://svn.python.org/view/python/trunk/Lib/this.py?view=markup" rel="nofollow">svn.python.org/view/python/trunk/Lib/this.py?view=markup</a></span> &ndash;&nbsp;<a href="/users/18278/erikprice" title="646 reputation" class="comment-user">erikprice</a> <span class="comment-date"><span title="2009-06-24 19:41:15Z">Jun 24 '09 at 19:41</span></span></div></td>
    </tr>
            
    <tr id="comment-854843" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">I&#39;ve updated my /usr/lib/python2.6/this.py replacing the old code with this <code>print s.translate(&quot;&quot;.join(chr(64&lt;i&lt;91 and 65+(i-52)%26 or 96&lt;i&lt;123 and 97+(i-84)%26 or i) for i in range(256)))</code> and it looks much better now!! :-D</span> &ndash;&nbsp;<a href="/users/106979/fortran" title="8204 reputation" class="comment-user">fortran</a> <span class="comment-date"><span title="2009-06-25 13:12:53Z">Jun 25 '09 at 13:12</span></span></div></td>
    </tr>
            
    <tr id="comment-2410095" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">year, that&#39;s called irony. (the reason, why they made it)</span> &ndash;&nbsp;<a href="/users/209019/joschua" title="712 reputation" class="comment-user">Joschua</a> <span class="comment-date"><span title="2010-03-11 16:36:56Z">Mar 11 at 16:36</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101276" class="comments-link" title="expand to show all comments on this post">show <b>5</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="101549"></a>
    
    <div id="answer-101549" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="101549">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">50</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>Nested list comprehensions and generator expressions:</p>

<pre><code>[(i,j) for i in range(3) for j in range(i) ]    
((i,j) for i in range(4) for j in range(i) )
</code></pre>

<p>These can replace huge chunks of nested-loop code.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/101549#101549" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-101549" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/101549/revisions" title="show all edits to this post"><span title="2008-09-19 12:45:44Z" class="relativetime">Sep 19 '08 at 12:45</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 15:00. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-101549" href="/posts/101549/revisions" title="show revision history for this post">Rafał Dowgird</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-101549" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-1347203" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">sorta like double integration in calculus, or double summation.</span> &ndash;&nbsp;<a href="/users/37664/ramyenhead" title="621 reputation" class="comment-user">RamyenHead</a> <span class="comment-date"><span title="2009-09-29 20:57:58Z">Sep 29 '09 at 20:57</span></span></div></td>
    </tr>
            
    <tr id="comment-2079303" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">7</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Key point to remember here (which took me a long time to realize) is that the order of the <code>`for</code>` statements are to be written in the order you&#39;d expect them to be written in a standard for-loop, from the outside inwards.</span> &ndash;&nbsp;<a href="/users/53850/sykora" title="7396 reputation" class="comment-user">sykora</a> <span class="comment-date"><span title="2010-01-26 11:17:35Z">Jan 26 at 11:17</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-101549" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="114157"></a>
    
    <div id="answer-114157" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="114157">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">50</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>Exception <strong>else</strong> clause:</p>

<pre><code>try:
  put_4000000000_volts_through_it(parrot)
except Voom:
  print "'E's pining!"
else:
  print "This parrot is no more!"
finally:
  end_sketch()
</code></pre>

<p>The use of the else clause is better than adding additional code to the try clause because it avoids accidentally catching an exception that wasn’t raised by the code being protected by the try ... except statement.</p>

<p>See <a href="http://docs.python.org/tut/node10.html" rel="nofollow">http://docs.python.org/tut/node10.html</a></p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/114157#114157" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-114157" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">edited <a href="/posts/114157/revisions" title="show all edits to this post"><span title="2010-09-22 05:55:08Z" class="relativetime">Sep 22 at 5:55</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 22 '08 at 10:31. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-114157" href="/posts/114157/revisions" title="show revision history for this post">2 revs, 2 users 90%<br>Constantin</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-114157" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-3985482" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">2</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">+1 this is awesome. If the try block executes without entering any exception blocks, then the else block is entered. And then of course, the finally block is executed</span> &ndash;&nbsp;<a href="/users/198633/inspectorg4dget" title="1902 reputation" class="comment-user">inspectorG4dget</a> <span class="comment-date"><span title="2010-09-22 04:49:39Z">Sep 22 at 4:49</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-114157" class="comments-link" title="expand to show all comments on this post">show <b>2</b> more comments</a>
</td>
</tr>
        </table>
    </div>

    <a name="112316"></a>
    
    <div id="answer-112316" class="answer">
        
        <table>
        <tr>
        <td class="votecell">
            
<div class="vote">
    <input type="hidden" value="112316">
    <a class="vote-up-off" title="This answer is useful (click again to undo)">up vote</a>
    <span class="vote-count-post">48</span>
    <a class="vote-down-off" title="This answer is not useful (click again to undo)">down vote</a>

</div>

        </td>
        <td>
            <div class="post-text"><p>Python's advanced slicing operation has a barely known syntax element, the ellipsis:</p>

<pre><code>&gt;&gt;&gt; class C(object):
...  def __getitem__(self, item):
...   return item
... 
&gt;&gt;&gt; C()[1:2, ..., 3]
(slice(1, 2, None), Ellipsis, 3)
</code></pre>

<p>Unfortunately it's barely useful as the ellipsis is only supported if tuples are involved.</p>
</div>
            <table class="fw">
            <tr>
            <td class="vt">
                <div class="post-menu"><a href="/questions/101268/hidden-features-of-python/112316#112316" title="permalink to this answer">link</a><span class="lsep">|</span><a id="flag-post-112316" title="flag this post for serious problems or moderator attention">flag</a></div>
                
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-action-time">answered <a href="/posts/112316/revisions" title="show all edits to this post"><span title="2008-09-21 22:07:44Z" class="relativetime">Sep 21 '08 at 22:07</span></a></div><div class="user-gravatar32"></div><div class="user-details"><br></div></div>
            </td>
            
            <td align="right" class="post-signature">
            <div class="user-info"><div class="user-details"><span class="community-wiki" title="This post is community owned as of Sep 21 '08 at 22:07. Votes do not generate reputation, and it can be edited by users with 100 rep">community wiki</span></div><br><div class="user-details"><a id="history-112316" href="/posts/112316/revisions" title="show revision history for this post">Armin Ronacher</a></div></div>
            </td>
            </tr>
            </table>
        </td>
        </tr>
        

<tr>
<td class="votecell"></td>
<td>
    <div id="comments-112316" class="comments">
        <table>
        <tbody>
                    
    <tr id="comment-25365" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="warm">10</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">see <a href="http://stackoverflow.com/questions/118370/how-do-you-use-the-ellipsis-slicing-syntax-in-python" title="how do you use the ellipsis slicing syntax in python">stackoverflow.com/questions/118370/&hellip;</a> for more info</span> &ndash;&nbsp;<a href="/users/11293/molasses" title="408 reputation" class="comment-user">molasses</a> <span class="comment-date"><span title="2008-09-23 00:33:00Z">Sep 23 '08 at 0:33</span></span></div></td>
    </tr>
            
    <tr id="comment-3699356" class="comment">
        <td class="comment-actions"><table><tbody><tr>
<td class="comment-score">
<span title="number of 'great comment' votes received" class="cool">1</span>
</td>
<td>
&nbsp;
</td></tr>
</tbody></table></td>
        <td class="comment-text"><div><span class="comment-copy">Actually, the ellipsis is quite useful when dealing with multi-dimensional arrays from <code>numpy</code> module.</span> &ndash;&nbsp;<a href="/users/124946/denilson-sa" title="844 reputation" class="comment-user">Denilson Sá</a> <span class="comment-date"><span title="2010-08-20 20:33:49Z">Aug 20 at 20:33</span></span></div></td>
    </tr>

        </tbody>
    
        </table>
    </div>
    <a id="comments-link-112316" class="comments-link" title="expand to show all comments on this post">show <b>1</b> more comment</a>
</td>
</tr>
        </table>
    </div>
<div class="pager-answers" >
<span class="page-numbers current">1</span>
<a href="/questions/101268?page=2&tab=votes#tab-top" title="go to page 2"><span class="page-numbers">2</span></a>
<a href="/questions/101268?page=3&tab=votes#tab-top" title="go to page 3"><span class="page-numbers">3</span></a>
<a href="/questions/101268?page=4&tab=votes#tab-top" title="go to page 4"><span class="page-numbers">4</span></a>
<a href="/questions/101268?page=5&tab=votes#tab-top" title="go to page 5"><span class="page-numbers">5</span></a>
<a href="/questions/101268?page=2&tab=votes#tab-top" title="go to page 2" rel="next"><span class="page-numbers next"> next</span></a>
</div>


    <h2 class="bottom-notice">
        
        Not the answer you're looking for? 
        
        Browse other questions tagged <a href="/questions/tagged/python" class="post-tag" title="show questions tagged 'python'" rel="tag">python</a> <a href="/questions/tagged/hidden-features" class="post-tag" title="show questions tagged 'hidden-features'" rel="tag">hidden-features</a> 
        
        or <a href="/questions/ask">ask your own question</a>.
        
    </h2>

</div>
</div>

<div id="sidebar">


<div class="module newuser newuser-greeting" style="display:none">
    <h4>Hello World!</h4>
    <div>
        <p>Stack Overflow is a <b>collaboratively edited question and answer site for programmers</b> &ndash; regardless of platform or language. It's 100% free, no registration required.</p>
        <p class="ar"><a href="/about">about &raquo;</a>&nbsp;&nbsp;&nbsp;<a href="/faq">faq &raquo;</a></p>
    </div>
</div>
    <div class="module">
        <p class="label-key">tagged</p>
        <div class="tagged">
            <a href="/questions/tagged/python" class="post-tag" title="show questions tagged 'python'" rel="tag">python</a>&nbsp;<span class="item-multiplier">&times;&nbsp;42524</span><br>
<a href="/questions/tagged/hidden-features" class="post-tag" title="show questions tagged 'hidden-features'" rel="tag">hidden-features</a>&nbsp;<span class="item-multiplier">&times;&nbsp;104</span><br>

        </div> 
        <p class="label-key">asked</p>
        <p class="label-value" title="2008-09-19 11:50:36Z">2 years ago</p>
        <p class="label-key">viewed</p>
        <p class="label-value">90,227 times</p>

        <p class="label-key">latest activity</p>
        <p class="label-value"><a href="?lastactivity" class="lastactivity-link" title="2010-12-04 23:06:29Z">15 days ago</a></p>

    </div>
    
    
        <script type="text/javascript">
            var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine2.adzerk.net/z/8277/adzerk1_2_4_43,adzerk2_2_17_45,adzerk3_2_4_44?keywords=python,hidden-features"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);
        </script>
    
    <div class="everyonelovesstackoverflow" id="adzerk2">
    </div>

    
    <div>
        <script type="text/javascript">
            (function(){var g="http://careers.stackoverflow.com/Ad/js",c=location.search=="?golarge",a=location.hash.indexOf("#ninjas")>-1,b="Pretty";(function(){var b="min-height:248px;margin:15px 0",c=$("<div>").addClass("hireme").attr("style",b),a=$("<div>").html(c);document.write(a.html())})();$(function(){a&&$("#adzerk1").html("").append($("<div>").attr("id","herebeninjas")).attr("id","stop-adzerk");setTimeout(i,1200);setTimeout(h,300)});var h=function(){c=c||e();a=a||d();b=c?"Large":b;f()},i=function(){var a=$("div.hireme");a.each(function(){$(this).html().replace(" ","").length==0&&$(this).remove()})},e=function(){return $("#careersadsdoublehigh").length>0},d=function(){return $("#herebeninjas").length>0},f=function(){var a=$("<script>").attr("src",j()).attr("type","text/javascript");$("body").append(a)},j=function(){return g+"?style="+b+"&gobanner="+a.toString()}})();
        </script>
    </div>
 
         


    <div class="module">
    <h4 id="h-linked">Linked</h4>
    <div class="linked">
    <div class="spacer">
<a href="/questions/61088/hidden-features-of-javascript" class="question-hyperlink">Hidden Features of JavaScript?</a>
</div>
<div class="spacer">
<a href="/questions/954327/hidden-features-of-html" class="question-hyperlink">Hidden Features of HTML</a>
</div>
<div class="spacer">
<a href="/questions/63998/hidden-features-of-ruby" class="question-hyperlink">Hidden features of Ruby</a>
</div>
<div class="spacer">
<a href="/questions/211378/hidden-features-of-bash" class="question-hyperlink">Hidden features of Bash</a>
</div>
<div class="spacer">
<a href="/questions/100003/what-is-a-metaclass-in-python" class="question-hyperlink">What is a metaclass in Python?</a>
</div>
<div class="spacer">
<a href="/questions/132058/getting-stack-trace-from-a-running-python-application" class="question-hyperlink">Getting stack trace from a running Python application</a>
</div>
<div class="spacer">
<a href="/questions/303512/hidden-features-of-groovy" class="question-hyperlink">Hidden features of Groovy?</a>
</div>
<div class="spacer">
<a href="/questions/530530/python-2-x-gotchas-and-landmines" class="question-hyperlink">Python 2.x gotcha&#39;s and landmines</a>
</div>
<div class="spacer">
<a href="/questions/125008/hidden-features-of-d" class="question-hyperlink">Hidden features of D</a>
</div>
<div class="spacer">
<a href="/questions/1623039/python-debugging-tips" class="question-hyperlink">Python debugging tips</a>
</div>
<div class="spacer">
<a href="/questions/118370/how-do-you-use-the-ellipsis-slicing-syntax-in-python" class="question-hyperlink">How do you use the ellipsis slicing syntax in Python?</a>
</div>
<div class="spacer">
<a href="/questions/543475/how-do-you-write-and-test-your-regular-expressions" class="question-hyperlink">How do you write and test your regular expressions?</a>
</div>
<div class="spacer">
<a href="/questions/1053732/what-does-mean-in-python" class="question-hyperlink">What does `@` mean in Python?</a>
</div>
<div class="spacer">
<a href="/questions/3347192/things-to-avoid-in-python" class="question-hyperlink">Things to avoid in Python</a>
</div>
<div class="spacer">
<a href="/questions/1598854/hidden-features-of-emacs-lisp" class="question-hyperlink">Hidden features of Emacs Lisp?</a>
</div>
<div class="spacer">
<a href="/questions/550009/parsing-from-addresses-from-email-text" class="question-hyperlink">Parsing &ldquo;From&rdquo; addresses from email text</a>
</div>
<div class="spacer">
<a href="/questions/868181/hidden-features-of-regex" class="question-hyperlink">Hidden Features of RegEx</a>
</div>
<div class="spacer">
<a href="/questions/393871/scripting-inside-a-python-application" class="question-hyperlink">Scripting inside a Python application</a>
</div>
<div class="spacer">
<a href="/questions/1198777/double-iteration-in-list-comprehension" class="question-hyperlink">Double Iteration in List Comprehension</a>
</div>
<div class="spacer">
<a href="/questions/3548334/python-book-tutorial-to-read-after-finishing-with-the-official-tutorial" class="question-hyperlink">Python book/ tutorial to read after finishing with the official tutorial</a>
</div>
<div class="spacer">
<a href="/questions/2924485/inspiration-and-influence-of-the-else-clause-of-loop-statements" class="question-hyperlink">Inspiration and influence of the else clause of loop statements?</a>
</div>
<div class="spacer">
<a href="/questions/3847386/testing-if-a-list-contains-another-list-with-python" class="question-hyperlink">Testing if a list contains another list with Python</a>
</div>
<div class="spacer">
<a href="/questions/1760495/python-func-dict-used-to-memoize-other-useful-tricks" class="question-hyperlink">Python func_dict used to memoize; other useful tricks?</a>
</div>
<div class="spacer">
<a href="/questions/3721249/python-date-interval-intersection" class="question-hyperlink">python date interval intersection</a>
</div>
<div class="spacer">
<a href="/questions/3495862/python-tips-and-tricks" class="question-hyperlink">Python Tips and Tricks</a>
</div>
<div class="spacer">
<a href="/questions/2258100/how-to-force-an-importerror-on-development-machine-pwd-module" class="question-hyperlink">How to force an ImportError on development machine? (pwd module)</a>
</div>
<div class="spacer">
<a href="/questions/3613938/what-is-the-most-useful-python-trick-shortcut" class="question-hyperlink">What is the most useful Python Trick/Shortcut?</a>
</div>
<div class="spacer">
<a href="/questions/275109/what-is-the-regular-expression-for-urlchecker-http-www-google-com" class="question-hyperlink">What is the regular expression for /urlchecker/http://www.google.com</a>
</div>
<div class="spacer">
<a href="/questions/440952/what-is-your-favorite-feature-of-python" class="question-hyperlink">What is your favorite feature of Python?</a>
</div>

    </div>
    </div>

    <div class="module">
    <h4 id="h-related">Related</h4>
    <div class="related">
    <div class="spacer">
<a href="/questions/211216/hidden-features-of-haskell" class="question-hyperlink">Hidden features of Haskell</a>
</div>
<div class="spacer">
<a href="/questions/303512/hidden-features-of-groovy" class="question-hyperlink">Hidden features of Groovy?</a>
</div>
<div class="spacer">
<a href="/questions/63998/hidden-features-of-ruby" class="question-hyperlink">Hidden features of Ruby</a>
</div>
<div class="spacer">
<a href="/questions/2493996/hidden-features-of-clojure" class="question-hyperlink">Hidden features of Clojure</a>
</div>
<div class="spacer">
<a href="/questions/211616/hidden-features-of-objective-c" class="question-hyperlink">Hidden features of Objective-C</a>
</div>
<div class="spacer">
<a href="/questions/1598854/hidden-features-of-emacs-lisp" class="question-hyperlink">Hidden features of Emacs Lisp?</a>
</div>
<div class="spacer">
<a href="/questions/1619133/hidden-features-of-android-development" class="question-hyperlink">Hidden features of Android development?</a>
</div>
<div class="spacer">
<a href="/questions/1651261/hidden-features-best-uses-of-sqlclr-ms-sql-server-2005-and-2008" class="question-hyperlink">Hidden features/Best uses of SQLCLR (MS SQL Server 2005 and 2008)</a>
</div>
<div class="spacer">
<a href="/questions/1656424/fiddler-v2-hidden-features" class="question-hyperlink">Fiddler (v2) Hidden Features?</a>
</div>
<div class="spacer">
<a href="/questions/1521851/hidden-features-of-xpath-xslt-1-0" class="question-hyperlink">Hidden Features of XPath/XSLT 1.0</a>
</div>
<div class="spacer">
<a href="/questions/1574308/hidden-features-of-x86-assembly-language" class="question-hyperlink">Hidden features of x86 assembly language?</a>
</div>
<div class="spacer">
<a href="/questions/1682874/hidden-features-of-r" class="question-hyperlink">Hidden Features Of R?</a>
</div>
<div class="spacer">
<a href="/questions/1777303/hidden-features-of-windows-forms" class="question-hyperlink">Hidden Features of Windows.Forms </a>
</div>
<div class="spacer">
<a href="/questions/1826458/hidden-features-of-qt" class="question-hyperlink">Hidden features of Qt.</a>
</div>
<div class="spacer">
<a href="/questions/1853653/hidden-features-of-coldfusion" class="question-hyperlink">Hidden features of ColdFusion</a>
</div>
<div class="spacer">
<a href="/questions/1416423/hidden-features-of-spring-framework" class="question-hyperlink">Hidden features of Spring framework ?</a>
</div>
<div class="spacer">
<a href="/questions/1063497/hidden-features-of-erlang" class="question-hyperlink">Hidden Features of Erlang</a>
</div>
<div class="spacer">
<a href="/questions/1070863/hidden-features-of-vba" class="question-hyperlink">Hidden features of VBA</a>
</div>
<div class="spacer">
<a href="/questions/1103705/hidden-features-of-actionscript3-flex" class="question-hyperlink">Hidden Features of ActionScript3 / Flex</a>
</div>
<div class="spacer">
<a href="/questions/1124769/hidden-features-of-wpf-and-xaml" class="question-hyperlink">Hidden features of WPF and XAML?</a>
</div>
<div class="spacer">
<a href="/questions/1160680/hidden-features-tricks-of-flash-development-flash-language-as2-3-and-flash-id" class="question-hyperlink">Hidden features/tricks of Flash development, Flash language (AS2/3), and Flash IDE</a>
</div>
<div class="spacer">
<a href="/questions/368858/hidden-features-of-mysql" class="question-hyperlink">Hidden Features of MySQL</a>
</div>
<div class="spacer">
<a href="/questions/381231/hidden-features-in-oracle" class="question-hyperlink">Hidden features in Oracle</a>
</div>
<div class="spacer">
<a href="/questions/446925/hidden-features-of-windows-mobile" class="question-hyperlink">Hidden features of Windows Mobile</a>
</div>
<div class="spacer">
<a href="/questions/523867/hidden-features-of-lua" class="question-hyperlink">Hidden features of Lua</a>
</div>

    </div>
    </div>
 
</div>


<div id="feed-link">
    <div id="feed-link-text"><a href="/feeds/question/101268" title="feed of this question and its answers"><span class="feed-icon"></span>question feed</a></div>
</div>


<script type="text/javascript" src="/posts/101268/ivc/ae6e"></script>
<noscript>
    <div><img src="/posts/101268/ivc/ae6e" class="dno" alt=""></div>
</noscript>

<div style="display:none" id="prettify-lang">default</div>


        </div>
    </div>
    <div id="footer">
        <div class="footerwrap">
            <div id="footer-menu">
                <a href="/about">about</a> |
                <a href="/faq">faq</a> |
                <a href="http://blog.stackoverflow.com">blog</a> |
                <a href="http://data.stackexchange.com">data</a> |
                <a href="http://itc.conversationsnetwork.org/series/stackoverflow.html">podcast</a> |
                <a href="/legal">legal</a> |
                <a href="http://engine.adzerk.net/redirect/0/2776/2751/0/4de3c60f719c4dfcb1a57531c7050090/0">advertising info</a> |
                <b><a href="mailto:team@stackoverflow.com">contact us</a></b>

                 | <b><a href="http://meta.stackoverflow.com">feedback always welcome</a></b>

                <div id="footer-sites">
                    <span style="color:#FE7A15;font-size:140%">&#9632;</span>&nbsp;<a href="http://stackoverflow.com">stackoverflow.com</a>&nbsp; <span style="color:#FE7A15;font-size:140%">&#9632;</span>&nbsp;<a href="http://stackapps.com">api/apps</a>&nbsp; <span style="color:#FE7A15;font-size:140%">&#9632;</span>&nbsp;<a href="http://careers.stackoverflow.com">careers</a>&nbsp; <span style="color:#E8272C;font-size:140%">&#9632;</span>&nbsp;<a href="http://serverfault.com">serverfault.com</a>&nbsp; <span style="color:#00AFEF;font-size:140%">&#9632;</span>&nbsp;<a href="http://superuser.com">superuser.com</a>&nbsp; <span style="color:#969696;font-size:140%">&#9632;</span>
<a href="http://meta.stackoverflow.com">meta</a>&nbsp; <span style="color:#46937D;font-size:140%">&#9632;</span>&nbsp;<a href="http://area51.stackexchange.com">area&nbsp;51</a>&nbsp; <span style="color:#C0D0DC;font-size:140%">&#9632;</span>&nbsp;<a href="http://webapps.stackexchange.com">webapps</a>&nbsp; <span style="color:#000;font-size:140%">&#9632;</span>&nbsp;<a href="http://gaming.stackexchange.com">gaming</a>&nbsp; <span style="color:#dd4814;font-size:140%">&#9632;</span>&nbsp;<a href="http://askubuntu.com">ubuntu</a>&nbsp; <span style="color:#9ce4fe;font-size:140%">&#9632;</span>&nbsp;<a href="http://webmasters.stackexchange.com">webmasters</a>&nbsp; <span style="color:#cf4d3f;font-size:140%">&#9632;</span>&nbsp;<a href="http://cooking.stackexchange.com">cooking</a>&nbsp; <span style="color:#f4f28d;font-size:140%">&#9632;</span>&nbsp;<a href="http://gamedev.stackexchange.com">game development</a>&nbsp; <span style="color:#0f3559;font-size:140%">&#9632;</span>&nbsp;<a href="http://math.stackexchange.com">math</a>&nbsp; <span style="color:#f2f2f2;font-size:140%">&#9632;</span>&nbsp;<a href="http://photo.stackexchange.com">photography</a>&nbsp; <span style="color:#037187;font-size:140%">&#9632;</span>&nbsp;<a href="http://stats.stackexchange.com">stats</a>&nbsp; <span style="color:#f1e7cc;font-size:140%">&#9632;</span>&nbsp;<a href="http://tex.stackexchange.com">tex</a>&nbsp; <span style="color:#e1cdae;font-size:140%">&#9632;</span>&nbsp;<a href="http://english.stackexchange.com">english</a>&nbsp; <span style="color:#a2d9f6;font-size:140%">&#9632;</span>&nbsp;<a href="http://cstheory.stackexchange.com">theoretical cs</a>&nbsp; <span style="color:#1b3e6c;font-size:140%">&#9632;</span>&nbsp;<a href="http://programmers.stackexchange.com">programmers</a>
                </div>
            </div>
            <div id="footer-flair">
	            <a href="http://creativecommons.org/licenses/by-sa/2.5/" class="cc-wiki-link"></a>
                <div id="svnrev">revision: 2010.12.20.5</div>                
            
            </div>
            <div id="copyright">
                site design / logo &copy; 2010 stack overflow internet services, inc; 
                <a href="/questions-all">user contributions</a> licensed under <a href="http://creativecommons.org/licenses/by-sa/2.5/" rel="license">cc-wiki</a> with <a href="http://blog.stackoverflow.com/2009/06/attribution-required/" rel="license">attribution required</a>
            </div>
            
        </div>
    </div>
    
    <noscript>
        <div id="noscript-warning">Stack Overflow works best with JavaScript enabled<img src="http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif" alt="" class="dno"></div>
    </noscript>    
    
    <script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-5620270-1']);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src='http://www.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();_qoptions={qacct:"p-c1rF4kxgLUzNc"};</script>
    <script type="text/javascript" src="http://edge.quantserve.com/quant.js"></script>

</body>
</html>