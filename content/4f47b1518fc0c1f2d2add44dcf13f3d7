<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>
	ogrisel / libsgd / source â€“ Bitbucket
</title>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="description" content="" />
  <meta name="keywords" content="ogrisel,libsgd,is,a,SSE,optimized,C,library,with,Python,bindings,(using,ctypes),The,goal,of,libsgd,is,to,provide,an,optimized,implementation,of,backpropagatable,modules,as,a,base,for,efficient,machine,learning,algorithms,such,as,feed,forward,multi,layer,perceptron,,stacked,autoencoders,,linear,support,vector,machines,solved,in,the,primal,and,potentially,more.,source,sourcecode,examples/semantic_hashing.py@8f02c5f614c8" />

  <link rel="stylesheet" type="text/css" href="http://assets.bitbucket.org/d87293a71cf4/css/reset.css" />
  <link rel="stylesheet" type="text/css" href="http://assets.bitbucket.org/d87293a71cf4/css/layout.css" />
  <link rel="stylesheet" type="text/css" href="http://assets.bitbucket.org/d87293a71cf4/css/screen.css" />
  <link rel="stylesheet" type="text/css" href="http://assets.bitbucket.org/d87293a71cf4/css/print.css" media="print" />
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="Bitbucket" />
  <link rel="icon" href="http://assets.bitbucket.org/d87293a71cf4/img/logo_new.png" type="image/png"/>

  <script type="text/javascript">var MEDIA_URL = "http://assets.bitbucket.org/d87293a71cf4/"</script>
  <script src="http://assets.bitbucket.org/d87293a71cf4/js/lib/bundle.js"></script>
  <script type="text/javascript">
    (function (undefined) {
      if (window.BB && !window.BB.user) window.BB.user = {};
      window.BB.user.username = undefined;
    }());
  </script>


	<link rel="stylesheet" href="http://assets.bitbucket.org/d87293a71cf4/css/highlight/trac.css" type="text/css" />


</head>

<body class="">

	<div id="wrapper">



	<div id="header-wrap">
		<div id="header">
		<ul id="global-nav">
			<li><a class="home" href="http://www.atlassian.com">Atlassian Home</a></li>
			<li><a class="docs" href="http://confluence.atlassian.com/display/BITBUCKET">Documentation</a></li>
			<li><a class="support" href="https://bitbucket.org/support">Support</a></li>
			<li><a class="blog" href="http://blog.bitbucket.org">Blog</a></li>
			<li><a class="forums" href="http://groups.google.com/group/bitbucket-users">Forums</a></li>
		</ul>
		<a href="/" id="logo">Bitbucket by Atlassian</a>

		<div id="main-nav" class="clearfix">
		
			<ul class="clearfix">
				<li><a href="https://bitbucket.org/plans">Pricing &amp; Signup</a></li>
				<li><a href="https://bitbucket.org/repo/month">Explore Bitbucket</a></li>
				<li><a href="/account/signin/">Log in</a></li>
				<li class="search-box">
					<form action="/repo/all/" method="get">
						<input id="search" type="text" name="name" />
					</form>
				</li>
			</ul>
		
		</div>
		</div>
	</div>

	
	
		
		
		
	

    



		<div id="content">
			
	
  





  <script type="text/javascript">
    jQuery(function ($) {
        var cookieOptions, date,
            $content = $('#content'),
            $pane = $('#what-is-bitbucket'),
            $hide = $pane.find('[href="#hide"]').css('display', 'block').hide();

        date = new Date();
        date.setTime(date.getTime() + 365 * 24 * 60 * 60 * 1000);
        cookieOptions = { path: '/', expires: date };

        if ($.cookie('toggle_status') == 'hide') $content.addClass('repo-desc-hidden');

        $('#toggle-repo-content').click(function (event) {
            event.preventDefault();
            $content.toggleClass('repo-desc-hidden');
            $.cookie('toggle_status', $.cookie('toggle_status') == 'show' ? 'hide' : 'show', cookieOptions);
        });

        if (!$.cookie('hide_intro_message')) $pane.show();

        $hide.click(function (event) {
            event.preventDefault();
            $.cookie('hide_intro_message', true, cookieOptions);
            $pane.slideUp('slow');
        });

        $pane.hover(
            function () { $hide.fadeIn('fast'); },
            function () { $hide.fadeOut('fast'); });
    });
  </script>



  
  
  
  
  
    <div id="what-is-bitbucket">
      <h2>Olivier Grisel <span id="slogan">is sharing code with you</span></h2>
      <img src="https://bitbucket-assetroot.s3.amazonaws.com:443/c/photos/2008/Nov/11/tete_grisou_192x192_avatar.png" alt="" class="avatar" />
      <p>Bitbucket is a code hosting site. Unlimited public and private repositories. Free for small teams.</p>
      <div class="signup"><a href="https://bitbucket.org/account/signup/?utm_source=internal&utm_medium=banner&utm_campaign=what_is_bitbucket">Try Bitbucket free</a></div>
      <a href="#hide" title="Don't show this again">Don't show this again</a>
    </div>
  


<div id="tabs">
  <ul class="tabs">
    <li>
      <a href="/libsgd/overview">Overview</a>
    </li>

    <li>
      <a href="/libsgd/downloads">Downloads (0)</a>
    </li>

    

    

    <li class="selected">
      
        <a href="/libsgd/src/8f02c5f614c8">Source</a>
      
    </li>

    <li>
      <a href="/libsgd/changesets">Changesets</a>
    </li>

    
      
        <li class="dropdown">
          <a href="/libsgd/wiki">Wiki</a>
        </li>
      
    

    
      
        <li class="dropdown">
          <a href="/libsgd/issues?status=new&amp;status=open">Issues (13) &raquo;</a>
          <ul>
            <li><a href="/libsgd/issues?status=new">New issues</a></li>
            <li><a href="/libsgd/issues?status=new&amp;status=open">Open issues</a></li>
            <li><a href="/libsgd/issues?status=resolved&amp;status=invalid&amp;status=duplicate">Closed issues</a></li>
            
            <li><a href="/libsgd/issues">All issues</a></li>
            <li><a href="/libsgd/issues/query">Advanced query</a></li>
            <li><a href="/libsgd/issues/new">Create new issue</a></li>
          </ul>
        </li>
      
    

    
      
    

    <li class="secondary">
      <a href="/libsgd/descendants">Forks/Queues (0)</a>
    </li>

    <li class="secondary">
      <a href="/libsgd/zealots">Followers (<span id="followers-count">2</span>)</a>
    </li>
  </ul>
</div>

  <div class="repo-menu" id="repo-menu">
    <ul id="repo-menu-links">
      <li>
        <a href="/libsgd/rss" class="rss" title="RSS feed for libsgd">RSS</a>
      </li>
      <li>
        <a href="/libsgd/atom" class="atom" title="Atom feed for libsgd">Atom</a>
      </li>
      
        <li>
          <a href="/libsgd/pull" class="pull-request">
            pull request
          </a>
        </li>
      
      <li><a href="/libsgd/fork" class="fork">fork</a></li>
      
        <li><a href="/libsgd/hack" class="patch-queue">patch queue</a></li>
      
      <li>
        <a rel="nofollow" href="/libsgd/follow" class="follow">follow</a>
      </li>
      
        <li>
          <a class="source">get source</a>
          <ul class="downloads">
            
              <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.zip">zip</a></li>
              <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.tar.gz">gz</a></li>
              <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.tar.bz2">bz2</a></li>
            
          </ul>
        </li>
      
    </ul>

  
    <ul class="metadata">
    
      <li class="branches">branches
        <ul>
          <li><a href="/libsgd/src/1455000b8ce2">study-hyperparameter-stability</a></li>
          <li><a href="/libsgd/src/8a4d719ee2a7">semantic-hashing</a></li>
          <li><a href="/libsgd/src/c2fcbf481037">sample-regression</a></li>
          <li><a href="/libsgd/src/7aac8d1d30c9">rng</a></li>
          <li><a href="/libsgd/src/f3dd2f9b439d">python-copy</a></li>
          <li><a href="/libsgd/src/7548eb376c32">parallel</a></li>
          <li><a href="/libsgd/src/b7c2236aac74">numerical-precision</a></li>
          <li><a href="/libsgd/src/47f9e782016f">grid-search</a></li>
          <li><a href="/libsgd/src/0a232b053b5b">default</a></li>
          <li><a href="/libsgd/src/1fa28a971ef7">dataset-init-tools</a></li>
          <li><a href="/libsgd/src/1a55de402d15">commons-mediawiki-format</a></li>
        </ul>
      </li>
    
      <li class="tags">tags
        <ul>
          <li><a href="/libsgd/src/8a4d719ee2a7">tip</a></li>
        </ul>
      </li>
    </ul>
  
</div>
<div class="repo-menu" id="repo-desc">
  

    <ul id="repo-menu-links-mini">
      <li>
        <a href="/libsgd/rss" class="rss" title="RSS feed for libsgd"></a>
      </li>
      <li>
        <a href="/libsgd/atom" class="atom" title="Atom feed for libsgd"></a>
      </li>
      
        <li>
          <a href="/libsgd/pull" class="pull-request" title="Pull request"></a>
        </li>
      
      <li><a href="/libsgd/fork" class="fork" title="Fork"></a></li>
      
        <li><a href="/libsgd/hack" class="patch-queue" title="Patch queue"></a></li>
      
      <li>
        <a class="source" title="Get source"></a>
        <ul class="downloads">
          
            <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.zip">zip</a></li>
            <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.tar.gz">gz</a></li>
            <li><a rel="nofollow" href="/libsgd/get/8f02c5f614c8.tar.bz2">bz2</a></li>
          
        </ul>
      </li>
    </ul>

    <h3 id="repo-heading">
      <a href="">ogrisel</a> /
      <a href="/libsgd/wiki/Home">libsgd</a>
    
    </h3>

  <p class="repo-desc-description">libsgd is a SSE optimized C library with Python bindings (using ctypes)

The goal of libsgd is to provide an optimized implementation of
backpropagatable modules as a base for efficient machine learning
algorithms such as feed forward multi layer perceptron, stacked  
autoencoders, linear support vector machines solved in the primal and
potentially more.</p>

  <div id="repo-desc-cloneinfo">Clone this repository (size: 608.6 KB): <a href="https://bitbucket.org/ogrisel/libsgd" onclick="$('#clone-url-ssh').hide();$('#clone-url-https').toggle();return(false);"><small>HTTPS</small></a> / <a href="ssh://hg@bitbucket.org/ogrisel/libsgd" onclick="$('#clone-url-https').hide();$('#clone-url-ssh').toggle();return(false);"><small>SSH</small></a><br/>
    <pre id="clone-url-https">hg clone <a href="https://bitbucket.org/ogrisel/libsgd">https://bitbucket.org/ogrisel/libsgd</a></pre>

    <pre id="clone-url-ssh" style="display:none;">hg clone <a href="ssh://hg@bitbucket.org/ogrisel/libsgd">ssh://hg@bitbucket.org/ogrisel/libsgd</a></pre></div>

  <a href="#" id="toggle-repo-content"></a>

  

</div>



			




	<div id="source-summary">
		<dl class="relations">
			<dt>commit 146</dt>
			<dd>8f02c5f614c8</dd>
			<dt>parent 145</dt>
			<dd><a href="/libsgd/changeset/96b4df4507c6">96b4df4507c6</a></dd>
			<dt>branch</dt>
			<dd>semantic-hashing</dd>
		</dl>
		<p>testing semantic hashing on picture dataset</p>
                
<dl class="metadata">
  <dt>Who</dt>
  
  <dd><a href="">Olivier Grisel</a> / <a href="">ogrisel</a></dd>
  
  <dd><img alt="" src="https://bitbucket-assetroot.s3.amazonaws.com:443/c/photos/2008/Nov/11/tete_grisou_192x192_avatar.png" class="avatar" /></dd>
  
  
  <dt>When</dt>
  <dd title="2009-10-18T23:11:48Z">14 months ago</dd>
</dl>

	</div>



<div id="source-path" class="layout-box">
	<a href="/libsgd/src">libsgd</a> /
	
		
			
				<a href='/libsgd/src/8a4d719ee2a7/examples/'>
					examples
				</a>
			
		
		/
	
		
			
				semantic_hashing.py
			
		
		
	
</div>


<div id="source-view" class="scroll-x">
	<table class="info-table">
		<tr>
			<th>r146:8f02c5f614c8</th>
			<th>305 loc</th>
			<th>10.6 KB</th>
			<th class="source-view-links">
				<a id="embed-link" href="#" onclick="makeEmbed('#embed-link', 'https://bitbucket.org/libsgd/src/8f02c5f614c8/examples/semantic_hashing.py?embed=t');">embed</a> /
				<a href='/libsgd/history/examples/semantic_hashing.py'>history</a> / 
				<a href='/libsgd/annotate/8f02c5f614c8/examples/semantic_hashing.py'>annotate</a> / 
				<a href='/libsgd/raw/8f02c5f614c8/examples/semantic_hashing.py'>raw</a> / 
				<form action="#nrm" method="get" class="source-view-form">
					
					<input type="hidden" name="diff2" value="8f02c5f614c8"/>
						<select name="diff1" class="smaller">
							
								
									<option value="8a4d719ee2a7">
										r229:8a4d719ee2a7
									</option>
								
							
								
									<option value="4cf934a04f97">
										r178:4cf934a04f97
									</option>
								
							
								
									<option value="ad847fde3968">
										r171:ad847fde3968
									</option>
								
							
								
									<option value="9d9cb04d21a3">
										r148:9d9cb04d21a3
									</option>
								
							
								
									<option value="9f3f374becc8">
										r147:9f3f374becc8
									</option>
								
							
								
							
								
									<option value="1f439e4b51ab">
										r143:1f439e4b51ab
									</option>
								
							
								
									<option value="62582c8e5dcf">
										r142:62582c8e5dcf
									</option>
								
							
								
									<option value="893840727f5b">
										r141:893840727f5b
									</option>
								
							
								
									<option value="003e326c5a7e">
										r140:003e326c5a7e
									</option>
								
							
								
									<option value="057690e9a19b">
										r139:057690e9a19b
									</option>
								
							
								
									<option value="d39711052f4b">
										r138:d39711052f4b
									</option>
								
							
								
									<option value="bc96f39c4e18">
										r137:bc96f39c4e18
									</option>
								
							
								
									<option value="a5ba5d643653">
										r136:a5ba5d643653
									</option>
								
							
								
									<option value="af0e4a8e8440">
										r135:af0e4a8e8440
									</option>
								
							
								
									<option value="4bcb31769263">
										r133:4bcb31769263
									</option>
								
							
								
									<option value="2876e1d6d923">
										r132:2876e1d6d923
									</option>
								
							
								
									<option value="204c2baeae6c">
										r131:204c2baeae6c
									</option>
								
							
								
									<option value="54d3d770fe50">
										r130:54d3d770fe50
									</option>
								
							
								
									<option value="5ec6a13003f7">
										r127:5ec6a13003f7
									</option>
								
							
								
									<option value="dfcda597ea3e">
										r126:dfcda597ea3e
									</option>
								
							
								
									<option value="ccd31f68361a">
										r125:ccd31f68361a
									</option>
								
							
								
									<option value="5ab41921b759">
										r124:5ab41921b759
									</option>
								
							
								
									<option value="3d0ef7e200cb">
										r123:3d0ef7e200cb
									</option>
								
							
								
									<option value="375bc4aadece">
										r122:375bc4aadece
									</option>
								
							
								
									<option value="7aa76f9605d6">
										r121:7aa76f9605d6
									</option>
								
							
						</select>
						<input type="submit" value="diff" class="smaller"/>
					
				</form>
			</th>
		</tr>
	</table>
	
		
			<table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><a href="#cl-1">  1</a>
<a href="#cl-2">  2</a>
<a href="#cl-3">  3</a>
<a href="#cl-4">  4</a>
<a href="#cl-5">  5</a>
<a href="#cl-6">  6</a>
<a href="#cl-7">  7</a>
<a href="#cl-8">  8</a>
<a href="#cl-9">  9</a>
<a href="#cl-10"> 10</a>
<a href="#cl-11"> 11</a>
<a href="#cl-12"> 12</a>
<a href="#cl-13"> 13</a>
<a href="#cl-14"> 14</a>
<a href="#cl-15"> 15</a>
<a href="#cl-16"> 16</a>
<a href="#cl-17"> 17</a>
<a href="#cl-18"> 18</a>
<a href="#cl-19"> 19</a>
<a href="#cl-20"> 20</a>
<a href="#cl-21"> 21</a>
<a href="#cl-22"> 22</a>
<a href="#cl-23"> 23</a>
<a href="#cl-24"> 24</a>
<a href="#cl-25"> 25</a>
<a href="#cl-26"> 26</a>
<a href="#cl-27"> 27</a>
<a href="#cl-28"> 28</a>
<a href="#cl-29"> 29</a>
<a href="#cl-30"> 30</a>
<a href="#cl-31"> 31</a>
<a href="#cl-32"> 32</a>
<a href="#cl-33"> 33</a>
<a href="#cl-34"> 34</a>
<a href="#cl-35"> 35</a>
<a href="#cl-36"> 36</a>
<a href="#cl-37"> 37</a>
<a href="#cl-38"> 38</a>
<a href="#cl-39"> 39</a>
<a href="#cl-40"> 40</a>
<a href="#cl-41"> 41</a>
<a href="#cl-42"> 42</a>
<a href="#cl-43"> 43</a>
<a href="#cl-44"> 44</a>
<a href="#cl-45"> 45</a>
<a href="#cl-46"> 46</a>
<a href="#cl-47"> 47</a>
<a href="#cl-48"> 48</a>
<a href="#cl-49"> 49</a>
<a href="#cl-50"> 50</a>
<a href="#cl-51"> 51</a>
<a href="#cl-52"> 52</a>
<a href="#cl-53"> 53</a>
<a href="#cl-54"> 54</a>
<a href="#cl-55"> 55</a>
<a href="#cl-56"> 56</a>
<a href="#cl-57"> 57</a>
<a href="#cl-58"> 58</a>
<a href="#cl-59"> 59</a>
<a href="#cl-60"> 60</a>
<a href="#cl-61"> 61</a>
<a href="#cl-62"> 62</a>
<a href="#cl-63"> 63</a>
<a href="#cl-64"> 64</a>
<a href="#cl-65"> 65</a>
<a href="#cl-66"> 66</a>
<a href="#cl-67"> 67</a>
<a href="#cl-68"> 68</a>
<a href="#cl-69"> 69</a>
<a href="#cl-70"> 70</a>
<a href="#cl-71"> 71</a>
<a href="#cl-72"> 72</a>
<a href="#cl-73"> 73</a>
<a href="#cl-74"> 74</a>
<a href="#cl-75"> 75</a>
<a href="#cl-76"> 76</a>
<a href="#cl-77"> 77</a>
<a href="#cl-78"> 78</a>
<a href="#cl-79"> 79</a>
<a href="#cl-80"> 80</a>
<a href="#cl-81"> 81</a>
<a href="#cl-82"> 82</a>
<a href="#cl-83"> 83</a>
<a href="#cl-84"> 84</a>
<a href="#cl-85"> 85</a>
<a href="#cl-86"> 86</a>
<a href="#cl-87"> 87</a>
<a href="#cl-88"> 88</a>
<a href="#cl-89"> 89</a>
<a href="#cl-90"> 90</a>
<a href="#cl-91"> 91</a>
<a href="#cl-92"> 92</a>
<a href="#cl-93"> 93</a>
<a href="#cl-94"> 94</a>
<a href="#cl-95"> 95</a>
<a href="#cl-96"> 96</a>
<a href="#cl-97"> 97</a>
<a href="#cl-98"> 98</a>
<a href="#cl-99"> 99</a>
<a href="#cl-100">100</a>
<a href="#cl-101">101</a>
<a href="#cl-102">102</a>
<a href="#cl-103">103</a>
<a href="#cl-104">104</a>
<a href="#cl-105">105</a>
<a href="#cl-106">106</a>
<a href="#cl-107">107</a>
<a href="#cl-108">108</a>
<a href="#cl-109">109</a>
<a href="#cl-110">110</a>
<a href="#cl-111">111</a>
<a href="#cl-112">112</a>
<a href="#cl-113">113</a>
<a href="#cl-114">114</a>
<a href="#cl-115">115</a>
<a href="#cl-116">116</a>
<a href="#cl-117">117</a>
<a href="#cl-118">118</a>
<a href="#cl-119">119</a>
<a href="#cl-120">120</a>
<a href="#cl-121">121</a>
<a href="#cl-122">122</a>
<a href="#cl-123">123</a>
<a href="#cl-124">124</a>
<a href="#cl-125">125</a>
<a href="#cl-126">126</a>
<a href="#cl-127">127</a>
<a href="#cl-128">128</a>
<a href="#cl-129">129</a>
<a href="#cl-130">130</a>
<a href="#cl-131">131</a>
<a href="#cl-132">132</a>
<a href="#cl-133">133</a>
<a href="#cl-134">134</a>
<a href="#cl-135">135</a>
<a href="#cl-136">136</a>
<a href="#cl-137">137</a>
<a href="#cl-138">138</a>
<a href="#cl-139">139</a>
<a href="#cl-140">140</a>
<a href="#cl-141">141</a>
<a href="#cl-142">142</a>
<a href="#cl-143">143</a>
<a href="#cl-144">144</a>
<a href="#cl-145">145</a>
<a href="#cl-146">146</a>
<a href="#cl-147">147</a>
<a href="#cl-148">148</a>
<a href="#cl-149">149</a>
<a href="#cl-150">150</a>
<a href="#cl-151">151</a>
<a href="#cl-152">152</a>
<a href="#cl-153">153</a>
<a href="#cl-154">154</a>
<a href="#cl-155">155</a>
<a href="#cl-156">156</a>
<a href="#cl-157">157</a>
<a href="#cl-158">158</a>
<a href="#cl-159">159</a>
<a href="#cl-160">160</a>
<a href="#cl-161">161</a>
<a href="#cl-162">162</a>
<a href="#cl-163">163</a>
<a href="#cl-164">164</a>
<a href="#cl-165">165</a>
<a href="#cl-166">166</a>
<a href="#cl-167">167</a>
<a href="#cl-168">168</a>
<a href="#cl-169">169</a>
<a href="#cl-170">170</a>
<a href="#cl-171">171</a>
<a href="#cl-172">172</a>
<a href="#cl-173">173</a>
<a href="#cl-174">174</a>
<a href="#cl-175">175</a>
<a href="#cl-176">176</a>
<a href="#cl-177">177</a>
<a href="#cl-178">178</a>
<a href="#cl-179">179</a>
<a href="#cl-180">180</a>
<a href="#cl-181">181</a>
<a href="#cl-182">182</a>
<a href="#cl-183">183</a>
<a href="#cl-184">184</a>
<a href="#cl-185">185</a>
<a href="#cl-186">186</a>
<a href="#cl-187">187</a>
<a href="#cl-188">188</a>
<a href="#cl-189">189</a>
<a href="#cl-190">190</a>
<a href="#cl-191">191</a>
<a href="#cl-192">192</a>
<a href="#cl-193">193</a>
<a href="#cl-194">194</a>
<a href="#cl-195">195</a>
<a href="#cl-196">196</a>
<a href="#cl-197">197</a>
<a href="#cl-198">198</a>
<a href="#cl-199">199</a>
<a href="#cl-200">200</a>
<a href="#cl-201">201</a>
<a href="#cl-202">202</a>
<a href="#cl-203">203</a>
<a href="#cl-204">204</a>
<a href="#cl-205">205</a>
<a href="#cl-206">206</a>
<a href="#cl-207">207</a>
<a href="#cl-208">208</a>
<a href="#cl-209">209</a>
<a href="#cl-210">210</a>
<a href="#cl-211">211</a>
<a href="#cl-212">212</a>
<a href="#cl-213">213</a>
<a href="#cl-214">214</a>
<a href="#cl-215">215</a>
<a href="#cl-216">216</a>
<a href="#cl-217">217</a>
<a href="#cl-218">218</a>
<a href="#cl-219">219</a>
<a href="#cl-220">220</a>
<a href="#cl-221">221</a>
<a href="#cl-222">222</a>
<a href="#cl-223">223</a>
<a href="#cl-224">224</a>
<a href="#cl-225">225</a>
<a href="#cl-226">226</a>
<a href="#cl-227">227</a>
<a href="#cl-228">228</a>
<a href="#cl-229">229</a>
<a href="#cl-230">230</a>
<a href="#cl-231">231</a>
<a href="#cl-232">232</a>
<a href="#cl-233">233</a>
<a href="#cl-234">234</a>
<a href="#cl-235">235</a>
<a href="#cl-236">236</a>
<a href="#cl-237">237</a>
<a href="#cl-238">238</a>
<a href="#cl-239">239</a>
<a href="#cl-240">240</a>
<a href="#cl-241">241</a>
<a href="#cl-242">242</a>
<a href="#cl-243">243</a>
<a href="#cl-244">244</a>
<a href="#cl-245">245</a>
<a href="#cl-246">246</a>
<a href="#cl-247">247</a>
<a href="#cl-248">248</a>
<a href="#cl-249">249</a>
<a href="#cl-250">250</a>
<a href="#cl-251">251</a>
<a href="#cl-252">252</a>
<a href="#cl-253">253</a>
<a href="#cl-254">254</a>
<a href="#cl-255">255</a>
<a href="#cl-256">256</a>
<a href="#cl-257">257</a>
<a href="#cl-258">258</a>
<a href="#cl-259">259</a>
<a href="#cl-260">260</a>
<a href="#cl-261">261</a>
<a href="#cl-262">262</a>
<a href="#cl-263">263</a>
<a href="#cl-264">264</a>
<a href="#cl-265">265</a>
<a href="#cl-266">266</a>
<a href="#cl-267">267</a>
<a href="#cl-268">268</a>
<a href="#cl-269">269</a>
<a href="#cl-270">270</a>
<a href="#cl-271">271</a>
<a href="#cl-272">272</a>
<a href="#cl-273">273</a>
<a href="#cl-274">274</a>
<a href="#cl-275">275</a>
<a href="#cl-276">276</a>
<a href="#cl-277">277</a>
<a href="#cl-278">278</a>
<a href="#cl-279">279</a>
<a href="#cl-280">280</a>
<a href="#cl-281">281</a>
<a href="#cl-282">282</a>
<a href="#cl-283">283</a>
<a href="#cl-284">284</a>
<a href="#cl-285">285</a>
<a href="#cl-286">286</a>
<a href="#cl-287">287</a>
<a href="#cl-288">288</a>
<a href="#cl-289">289</a>
<a href="#cl-290">290</a>
<a href="#cl-291">291</a>
<a href="#cl-292">292</a>
<a href="#cl-293">293</a>
<a href="#cl-294">294</a>
<a href="#cl-295">295</a>
<a href="#cl-296">296</a>
<a href="#cl-297">297</a>
<a href="#cl-298">298</a>
<a href="#cl-299">299</a>
<a href="#cl-300">300</a>
<a href="#cl-301">301</a>
<a href="#cl-302">302</a>
<a href="#cl-303">303</a>
</pre></div></td><td class="code"><div class="highlight"><pre><a name="cl-1"></a><span class="c"># TODO: add MIT license header here</span>
<a name="cl-2"></a><span class="sd">&quot;&quot;&quot;Prototype implementation of deep autoencoders trained as semantic hasher</span>
<a name="cl-3"></a>
<a name="cl-4"></a><span class="sd">See Vincent, Pascal and Larochelle, Hugo and Bengio, Yoshua and Manzagol,</span>
<a name="cl-5"></a><span class="sd">Pierre-Antoine, &quot;Extracting and composing robust features with denoising</span>
<a name="cl-6"></a><span class="sd">autoencoders&quot; for the theory (bibtex in toplevel README.txt).</span>
<a name="cl-7"></a>
<a name="cl-8"></a><span class="sd">In the following, we do not yet use the denoising part of the</span>
<a name="cl-9"></a><span class="sd">algorithm. Adding it should further increase the ability of the</span>
<a name="cl-10"></a><span class="sd">autoencoders to identify semantically meaningful codes.</span>
<a name="cl-11"></a><span class="sd">&quot;&quot;&quot;</span>
<a name="cl-12"></a>
<a name="cl-13"></a><span class="kn">import</span> <span class="nn">os</span>
<a name="cl-14"></a><span class="kn">import</span> <span class="nn">random</span>
<a name="cl-15"></a><span class="kn">from</span> <span class="nn">numpy</span> <span class="kn">import</span> <span class="n">ones</span>
<a name="cl-16"></a><span class="kn">from</span> <span class="nn">numpy</span> <span class="kn">import</span> <span class="n">zeros</span>
<a name="cl-17"></a><span class="kn">from</span> <span class="nn">numpy</span> <span class="kn">import</span> <span class="n">asarray</span>
<a name="cl-18"></a><span class="kn">from</span> <span class="nn">numpy</span> <span class="kn">import</span> <span class="nb">long</span>
<a name="cl-19"></a><span class="kn">from</span> <span class="nn">numpy</span> <span class="kn">import</span> <span class="n">log</span>
<a name="cl-20"></a><span class="kn">from</span> <span class="nn">numpy.random</span> <span class="kn">import</span> <span class="n">rand</span>
<a name="cl-21"></a><span class="kn">from</span> <span class="nn">sgd.helpers</span> <span class="kn">import</span> <span class="n">make_autoencoder</span>
<a name="cl-22"></a><span class="kn">from</span> <span class="nn">sgd.helpers</span> <span class="kn">import</span> <span class="n">extract_encoder</span>
<a name="cl-23"></a><span class="kn">from</span> <span class="nn">nltk.corpus</span> <span class="kn">import</span> <span class="n">gutenberg</span>
<a name="cl-24"></a><span class="kn">from</span> <span class="nn">nltk.stem.porter</span> <span class="kn">import</span> <span class="n">PorterStemmer</span>
<a name="cl-25"></a><span class="kn">from</span> <span class="nn">leargist</span> <span class="kn">import</span> <span class="n">color_gist</span>
<a name="cl-26"></a><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<a name="cl-27"></a><span class="kn">from</span> <span class="nn">cPickle</span> <span class="kn">import</span> <span class="n">dump</span>
<a name="cl-28"></a><span class="kn">from</span> <span class="nn">cPickle</span> <span class="kn">import</span> <span class="n">load</span>
<a name="cl-29"></a>
<a name="cl-30"></a>
<a name="cl-31"></a><span class="k">class</span> <span class="nc">HashingTfIdfSampler</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="cl-32"></a>    <span class="sd">&quot;&quot;&quot;TF-log(IDF) estimator with a hashing representation of bag of words</span>
<a name="cl-33"></a>
<a name="cl-34"></a><span class="sd">    See the Hashing-trick related papers referenced by John Langford on this</span>
<a name="cl-35"></a><span class="sd">    page to get a grasp on the usefulness of this representation:</span>
<a name="cl-36"></a>
<a name="cl-37"></a><span class="sd">      http://hunch.net/~jl/projects/hash_reps/index.html</span>
<a name="cl-38"></a>
<a name="cl-39"></a><span class="sd">    size is the number of buckets, higher size means lower collision rate but</span>
<a name="cl-40"></a><span class="sd">    also higher memory requirements and higher processing times on the</span>
<a name="cl-41"></a><span class="sd">    resulting tfidf vectors.</span>
<a name="cl-42"></a>
<a name="cl-43"></a><span class="sd">    documents is a sequence of lists of tokens to initialize the DF estimates.</span>
<a name="cl-44"></a>
<a name="cl-45"></a><span class="sd">    TODO: write some doctest here instead of writing such a long TODO you lazy</span>
<a name="cl-46"></a><span class="sd">          coder!</span>
<a name="cl-47"></a><span class="sd">    &quot;&quot;&quot;</span>
<a name="cl-48"></a>
<a name="cl-49"></a>    <span class="n">_stemmer</span> <span class="o">=</span> <span class="n">PorterStemmer</span><span class="p">()</span>
<a name="cl-50"></a>
<a name="cl-51"></a>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10000</span><span class="p">,</span> <span class="n">documents</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="cl-52"></a>        <span class="sd">&quot;&quot;&quot;Initialize the TFIDF estimator with bucket size and documents&quot;&quot;&quot;</span>
<a name="cl-53"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span>
<a name="cl-54"></a>        <span class="c"># start counts at one to avoid zero division while</span>
<a name="cl-55"></a>        <span class="c"># computing IDF</span>
<a name="cl-56"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">df_counts</span> <span class="o">=</span> <span class="n">ones</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">long</span><span class="p">)</span>
<a name="cl-57"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">idf</span> <span class="o">=</span> <span class="bp">None</span>
<a name="cl-58"></a>        <span class="k">if</span> <span class="n">documents</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="cl-59"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">sample_documents</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span>
<a name="cl-60"></a>
<a name="cl-61"></a>    <span class="nd">@staticmethod</span>
<a name="cl-62"></a>    <span class="k">def</span> <span class="nf">tokenize</span><span class="p">(</span><span class="n">doc</span><span class="p">):</span>
<a name="cl-63"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">):</span>
<a name="cl-64"></a>            <span class="c"># TODO: use nltk word tokenizer instead</span>
<a name="cl-65"></a>            <span class="k">return</span> <span class="n">doc</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
<a name="cl-66"></a>        <span class="k">else</span><span class="p">:</span>
<a name="cl-67"></a>            <span class="c"># assume doc is already a sequence of tokens</span>
<a name="cl-68"></a>            <span class="k">return</span> <span class="n">doc</span>
<a name="cl-69"></a>
<a name="cl-70"></a>    <span class="k">def</span> <span class="nf">hash_token</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">token</span><span class="p">):</span>
<a name="cl-71"></a>        <span class="n">h</span> <span class="o">=</span> <span class="nb">hash</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="n">token</span><span class="o">.</span><span class="n">lower</span><span class="p">()))</span>
<a name="cl-72"></a>        <span class="k">return</span> <span class="nb">abs</span><span class="p">(</span><span class="nb">hash</span><span class="p">(</span><span class="n">token</span><span class="p">))</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">size</span>
<a name="cl-73"></a>
<a name="cl-74"></a>    <span class="k">def</span> <span class="nf">hash_sign_token</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">token</span><span class="p">):</span>
<a name="cl-75"></a>        <span class="n">h</span> <span class="o">=</span> <span class="nb">hash</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="n">token</span><span class="o">.</span><span class="n">lower</span><span class="p">()))</span>
<a name="cl-76"></a>        <span class="k">return</span> <span class="nb">abs</span><span class="p">(</span><span class="n">h</span><span class="p">)</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">h</span> <span class="o">%</span> <span class="mi">2</span> <span class="k">else</span> <span class="o">-</span><span class="mi">1</span>
<a name="cl-77"></a>
<a name="cl-78"></a>    <span class="k">def</span> <span class="nf">sample_documents</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">docs</span><span class="p">):</span>
<a name="cl-79"></a>        <span class="sd">&quot;&quot;&quot;Update the DF estimates with the tokens in the list of documents&quot;&quot;&quot;</span>
<a name="cl-80"></a>        <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">docs</span><span class="p">:</span>
<a name="cl-81"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">sample_document</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span>
<a name="cl-82"></a>
<a name="cl-83"></a>    <span class="k">def</span> <span class="nf">sample_document</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">doc</span><span class="p">):</span>
<a name="cl-84"></a>        <span class="sd">&quot;&quot;&quot;Update the DF estimates with the tokens in doc&quot;&quot;&quot;</span>
<a name="cl-85"></a>        <span class="k">for</span> <span class="n">token</span> <span class="ow">in</span> <span class="nb">set</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tokenize</span><span class="p">(</span><span class="n">doc</span><span class="p">)):</span>
<a name="cl-86"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">df_counts</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">hash_token</span><span class="p">(</span><span class="n">token</span><span class="p">)]</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="cl-87"></a>
<a name="cl-88"></a>    <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">token</span><span class="p">):</span>
<a name="cl-89"></a>        <span class="sd">&quot;&quot;&quot;Return the number (+1) of documents token occured at least once&quot;&quot;&quot;</span>
<a name="cl-90"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">df_counts</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">hash_token</span><span class="p">(</span><span class="n">token</span><span class="p">)]</span>
<a name="cl-91"></a>
<a name="cl-92"></a>    <span class="k">def</span> <span class="nf">tfidf</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">doc</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="cl-93"></a>        <span class="sd">&quot;&quot;&quot;Compute an estimate of tf-log(idf) based on the tokens of doc&quot;&quot;&quot;</span>
<a name="cl-94"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">idf</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="cl-95"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">idf</span> <span class="o">=</span> <span class="n">ones</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="s">&#39;f4&#39;</span><span class="p">)</span>
<a name="cl-96"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">idf</span> <span class="o">/=</span> <span class="bp">self</span><span class="o">.</span><span class="n">df_counts</span>
<a name="cl-97"></a>            <span class="n">log</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">idf</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">idf</span><span class="p">)</span>
<a name="cl-98"></a>
<a name="cl-99"></a>        <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="cl-100"></a>            <span class="n">tf</span> <span class="o">=</span> <span class="n">zeros</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="s">&#39;f4&#39;</span><span class="p">)</span>
<a name="cl-101"></a>        <span class="k">else</span><span class="p">:</span>
<a name="cl-102"></a>            <span class="n">tf</span> <span class="o">=</span> <span class="n">out</span>
<a name="cl-103"></a>
<a name="cl-104"></a>        <span class="k">for</span> <span class="n">token</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tokenize</span><span class="p">(</span><span class="n">doc</span><span class="p">):</span>
<a name="cl-105"></a>            <span class="n">h</span><span class="p">,</span> <span class="n">s</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash_sign_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
<a name="cl-106"></a>            <span class="n">tf</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">+=</span> <span class="n">s</span>
<a name="cl-107"></a>
<a name="cl-108"></a>        <span class="n">tf</span> <span class="o">*=</span> <span class="bp">self</span><span class="o">.</span><span class="n">idf</span>
<a name="cl-109"></a>        <span class="k">return</span> <span class="n">tf</span>
<a name="cl-110"></a>
<a name="cl-111"></a>    <span class="k">def</span> <span class="nf">tfidf_documents</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="cl-112"></a>        <span class="sd">&quot;&quot;&quot;Compute TFIDF in batch&quot;&quot;&quot;</span>
<a name="cl-113"></a>        <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="cl-114"></a>            <span class="nb">buffer</span> <span class="o">=</span> <span class="n">zeros</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">documents</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">size</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="s">&#39;f4&#39;</span><span class="p">)</span>
<a name="cl-115"></a>        <span class="k">else</span><span class="p">:</span>
<a name="cl-116"></a>            <span class="nb">buffer</span> <span class="o">=</span> <span class="n">out</span>
<a name="cl-117"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">doc</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">documents</span><span class="p">):</span>
<a name="cl-118"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">tfidf</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="nb">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
<a name="cl-119"></a>        <span class="k">return</span> <span class="nb">buffer</span>
<a name="cl-120"></a>
<a name="cl-121"></a>
<a name="cl-122"></a><span class="k">def</span> <span class="nf">make_stacked_autoencoders</span><span class="p">(</span><span class="n">code_dims</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">4</span><span class="p">):</span>
<a name="cl-123"></a>    <span class="n">autoencoders</span> <span class="o">=</span> <span class="p">[]</span>
<a name="cl-124"></a>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">code_dims</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
<a name="cl-125"></a>        <span class="n">aec</span> <span class="o">=</span> <span class="n">make_autoencoder</span><span class="p">(</span><span class="n">code_dims</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">code_dims</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">],</span> <span class="n">batch_size</span><span class="p">,</span>
<a name="cl-126"></a>                               <span class="n">lambda_</span><span class="o">=</span><span class="mf">0.001</span><span class="p">)</span>
<a name="cl-127"></a>        <span class="n">autoencoders</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">aec</span><span class="p">)</span>
<a name="cl-128"></a>    <span class="k">return</span> <span class="n">autoencoders</span>
<a name="cl-129"></a>
<a name="cl-130"></a>
<a name="cl-131"></a><span class="k">def</span> <span class="nf">make_gutenberg_features</span><span class="p">(</span><span class="n">dim</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">1200</span><span class="p">,</span> <span class="n">sentences_per_doc</span><span class="o">=</span><span class="mi">100</span><span class="p">):</span>
<a name="cl-132"></a>    <span class="sd">&quot;&quot;&quot;Build a dataset tfidf feature vectors from the gutenberg corpus&quot;&quot;&quot;</span>
<a name="cl-133"></a>    <span class="n">cache_file</span> <span class="o">=</span> <span class="s">&quot;_gutenberg_</span><span class="si">%d</span><span class="s">_</span><span class="si">%d</span><span class="s">.cache&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">sentences_per_doc</span><span class="p">)</span>
<a name="cl-134"></a>
<a name="cl-135"></a>    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">cache_file</span><span class="p">):</span>
<a name="cl-136"></a>        <span class="n">features</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">h_sampler</span> <span class="o">=</span> <span class="n">load</span><span class="p">(</span><span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;rb&#39;</span><span class="p">))</span>
<a name="cl-137"></a>    <span class="k">else</span><span class="p">:</span>
<a name="cl-138"></a>        <span class="c"># ensure a minimal sample size so that DF counts are somewhat</span>
<a name="cl-139"></a>        <span class="c"># meaningful</span>
<a name="cl-140"></a>        <span class="n">sample_size</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>
<a name="cl-141"></a>        <span class="n">documents</span> <span class="o">=</span> <span class="p">[]</span>
<a name="cl-142"></a>        <span class="n">iter_sentences</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">gutenberg</span><span class="o">.</span><span class="n">sents</span><span class="p">())</span>
<a name="cl-143"></a>        <span class="k">for</span> <span class="n">sentence</span> <span class="ow">in</span> <span class="n">iter_sentences</span><span class="p">:</span>
<a name="cl-144"></a>            <span class="k">for</span> <span class="n">to_combine</span><span class="p">,</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span>
<a name="cl-145"></a>                <span class="n">iter_sentences</span><span class="p">,</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">sentences_per_doc</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)):</span>
<a name="cl-146"></a>                <span class="n">sentence</span> <span class="o">+=</span> <span class="n">to_combine</span>
<a name="cl-147"></a>            <span class="n">documents</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
<a name="cl-148"></a>            <span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">sample_size</span><span class="p">):</span>
<a name="cl-149"></a>                <span class="k">break</span>
<a name="cl-150"></a>
<a name="cl-151"></a>        <span class="c"># TODO: build traing set using omission noise in the input and use</span>
<a name="cl-152"></a>        <span class="c"># noiseless original document as label</span>
<a name="cl-153"></a>
<a name="cl-154"></a>        <span class="n">h_sampler</span> <span class="o">=</span> <span class="n">HashingTfIdfSampler</span><span class="p">(</span><span class="n">dim</span><span class="p">,</span> <span class="n">documents</span><span class="p">)</span>
<a name="cl-155"></a>
<a name="cl-156"></a>        <span class="c"># only keep the requested documents and matching feature vectors</span>
<a name="cl-157"></a>        <span class="n">documents</span> <span class="o">=</span> <span class="n">documents</span><span class="p">[:</span><span class="n">size</span><span class="p">]</span>
<a name="cl-158"></a>        <span class="n">features</span> <span class="o">=</span> <span class="n">h_sampler</span><span class="o">.</span><span class="n">tfidf_documents</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span>
<a name="cl-159"></a>        <span class="n">dump</span><span class="p">((</span><span class="n">features</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">h_sampler</span><span class="p">),</span> <span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">))</span>
<a name="cl-160"></a>
<a name="cl-161"></a>    <span class="k">return</span> <span class="n">h_sampler</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">features</span><span class="p">,</span> <span class="n">documents</span>
<a name="cl-162"></a>
<a name="cl-163"></a>
<a name="cl-164"></a><span class="k">def</span> <span class="nf">make_wikipedia_countries_features</span><span class="p">(</span><span class="n">dim</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">1200</span><span class="p">):</span>
<a name="cl-165"></a>    <span class="sd">&quot;&quot;&quot;Build a dataset tfidf feature vectors from the country categorized</span>
<a name="cl-166"></a><span class="sd">    wikipedia articles&quot;&quot;&quot;</span>
<a name="cl-167"></a>    <span class="n">source_folder</span> <span class="o">=</span> <span class="s">&quot;/home/ogrisel/data/semantic-countries&quot;</span>
<a name="cl-168"></a>    <span class="n">cache_file</span> <span class="o">=</span> <span class="s">&quot;_wikipedia_countries_</span><span class="si">%d</span><span class="s">.cache&quot;</span> <span class="o">%</span> <span class="n">size</span>
<a name="cl-169"></a>
<a name="cl-170"></a>    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">cache_file</span><span class="p">):</span>
<a name="cl-171"></a>        <span class="n">features</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">h_sampler</span><span class="p">,</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">load</span><span class="p">(</span><span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;rb&#39;</span><span class="p">))</span>
<a name="cl-172"></a>    <span class="k">else</span><span class="p">:</span>
<a name="cl-173"></a>        <span class="c"># ensure a minimal sample size so that DF counts are somewhat</span>
<a name="cl-174"></a>        <span class="c"># meaningful</span>
<a name="cl-175"></a>        <span class="n">sample_size</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
<a name="cl-176"></a>        <span class="n">documents</span> <span class="o">=</span> <span class="p">[]</span>
<a name="cl-177"></a>        <span class="n">titles</span> <span class="o">=</span> <span class="p">[]</span>
<a name="cl-178"></a>
<a name="cl-179"></a>        <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">source_folder</span><span class="p">):</span>
<a name="cl-180"></a>            <span class="n">filepath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">source_folder</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>
<a name="cl-181"></a>            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">file</span><span class="p">(</span><span class="n">filepath</span><span class="p">)):</span>
<a name="cl-182"></a>                <span class="n">documents</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">token</span> <span class="k">for</span> <span class="n">token</span> <span class="ow">in</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
<a name="cl-183"></a>                                  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">token</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">])</span>
<a name="cl-184"></a>                <span class="n">titles</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">:</span><span class="si">%03d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">i</span><span class="p">))</span>
<a name="cl-185"></a>                <span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">sample_size</span><span class="p">):</span>
<a name="cl-186"></a>                    <span class="k">break</span>
<a name="cl-187"></a>
<a name="cl-188"></a>        <span class="c"># TODO: build traing set using omission noise in the input and use</span>
<a name="cl-189"></a>        <span class="c"># noiseless original document as label</span>
<a name="cl-190"></a>
<a name="cl-191"></a>        <span class="n">h_sampler</span> <span class="o">=</span> <span class="n">HashingTfIdfSampler</span><span class="p">(</span><span class="n">dim</span><span class="p">,</span> <span class="n">documents</span><span class="p">)</span>
<a name="cl-192"></a>
<a name="cl-193"></a>        <span class="c"># only keep the requested documents and matching feature vectors</span>
<a name="cl-194"></a>        <span class="n">documents</span> <span class="o">=</span> <span class="n">documents</span><span class="p">[:</span><span class="n">size</span><span class="p">]</span>
<a name="cl-195"></a>        <span class="n">features</span> <span class="o">=</span> <span class="n">h_sampler</span><span class="o">.</span><span class="n">tfidf_documents</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span>
<a name="cl-196"></a>        <span class="n">dump</span><span class="p">((</span><span class="n">features</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">h_sampler</span><span class="p">,</span> <span class="n">titles</span><span class="p">),</span> <span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">))</span>
<a name="cl-197"></a>
<a name="cl-198"></a>    <span class="k">return</span> <span class="n">h_sampler</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">features</span><span class="p">,</span> <span class="n">titles</span>
<a name="cl-199"></a>
<a name="cl-200"></a>
<a name="cl-201"></a><span class="k">def</span> <span class="nf">make_gist_features</span><span class="p">(</span><span class="n">folder</span><span class="p">,</span> <span class="n">maxsize</span><span class="o">=</span><span class="mi">1000</span><span class="p">):</span>
<a name="cl-202"></a>    <span class="sd">&quot;&quot;&quot;Extract the GIST descriptor vectors of images in a folder&quot;&quot;&quot;</span>
<a name="cl-203"></a>    <span class="n">cache_file</span> <span class="o">=</span> <span class="s">&quot;_gist_</span><span class="si">%d</span><span class="s">.cache&quot;</span> <span class="o">%</span> <span class="n">maxsize</span>
<a name="cl-204"></a>
<a name="cl-205"></a>    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">cache_file</span><span class="p">):</span>
<a name="cl-206"></a>        <span class="n">features</span><span class="p">,</span> <span class="n">filenames</span> <span class="o">=</span> <span class="n">load</span><span class="p">(</span><span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;rb&#39;</span><span class="p">))</span>
<a name="cl-207"></a>    <span class="k">else</span><span class="p">:</span>
<a name="cl-208"></a>        <span class="c"># TODO: build traing set using omission noise in the input and use</span>
<a name="cl-209"></a>        <span class="c"># noiseless original document as label</span>
<a name="cl-210"></a>
<a name="cl-211"></a>        <span class="n">filenames</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">folder</span><span class="p">)[:</span><span class="n">maxsize</span><span class="p">]</span>
<a name="cl-212"></a>        <span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c"># reproducible feature extraction</span>
<a name="cl-213"></a>        <span class="n">random</span><span class="o">.</span><span class="n">shuffle</span><span class="p">(</span><span class="n">filenames</span><span class="p">)</span>
<a name="cl-214"></a>
<a name="cl-215"></a>        <span class="n">features</span> <span class="o">=</span> <span class="n">zeros</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">filenames</span><span class="p">),</span> <span class="mi">960</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="s">&#39;f4&#39;</span><span class="p">)</span>
<a name="cl-216"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">filename</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">filenames</span><span class="p">):</span>
<a name="cl-217"></a>            <span class="n">features</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">color_gist</span><span class="p">(</span><span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">folder</span><span class="p">,</span> <span class="n">filename</span><span class="p">)))</span>
<a name="cl-218"></a>        <span class="n">dump</span><span class="p">((</span><span class="n">features</span><span class="p">,</span> <span class="n">filenames</span><span class="p">),</span> <span class="nb">file</span><span class="p">(</span><span class="n">cache_file</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">))</span>
<a name="cl-219"></a>
<a name="cl-220"></a>    <span class="k">return</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">features</span><span class="p">,</span> <span class="n">filenames</span>
<a name="cl-221"></a>
<a name="cl-222"></a>
<a name="cl-223"></a><span class="k">def</span> <span class="nf">find_nearest</span><span class="p">(</span><span class="n">ref</span><span class="p">,</span> <span class="n">vectors</span><span class="p">,</span> <span class="n">n</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
<a name="cl-224"></a>    <span class="sd">&quot;&quot;&quot;find the n vector indices whose components match ref&quot;&quot;&quot;</span>
<a name="cl-225"></a>    <span class="n">mean_squared_distances</span> <span class="o">=</span> <span class="p">((</span><span class="n">vectors</span> <span class="o">-</span> <span class="n">ref</span><span class="p">)</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<a name="cl-226"></a>    <span class="k">return</span> <span class="n">mean_squared_distances</span><span class="o">.</span><span class="n">argsort</span><span class="p">()[:</span><span class="n">n</span><span class="p">]</span>
<a name="cl-227"></a>
<a name="cl-228"></a>
<a name="cl-229"></a><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
<a name="cl-230"></a>
<a name="cl-231"></a>    <span class="kn">import</span> <span class="nn">logging</span><span class="o">,</span> <span class="nn">sys</span>
<a name="cl-232"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">basicConfig</span><span class="p">(</span>
<a name="cl-233"></a>        <span class="n">stream</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="p">,</span> <span class="n">level</span><span class="o">=</span><span class="n">logging</span><span class="o">.</span><span class="n">DEBUG</span><span class="p">,</span>
<a name="cl-234"></a>        <span class="n">format</span><span class="o">=</span><span class="s">&#39;</span><span class="si">%(asctime)s</span><span class="s">: </span><span class="si">%(levelname)s</span><span class="s">: </span><span class="si">%(message)s</span><span class="s">&#39;</span><span class="p">)</span>
<a name="cl-235"></a>
<a name="cl-236"></a>    <span class="n">bs</span> <span class="o">=</span> <span class="mi">4</span>
<a name="cl-237"></a>    <span class="n">training_size</span> <span class="o">=</span> <span class="n">bs</span> <span class="o">*</span> <span class="mi">300</span>
<a name="cl-238"></a>    <span class="n">code_dims</span> <span class="o">=</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">400</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
<a name="cl-239"></a>
<a name="cl-240"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;building autoencoders chain for dimensions </span><span class="si">%r</span><span class="s">&quot;</span><span class="p">,</span>
<a name="cl-241"></a>                 <span class="n">code_dims</span><span class="p">)</span>
<a name="cl-242"></a>    <span class="n">autoencoders</span> <span class="o">=</span> <span class="n">make_stacked_autoencoders</span><span class="p">(</span><span class="n">code_dims</span><span class="p">,</span> <span class="n">bs</span><span class="p">)</span>
<a name="cl-243"></a>
<a name="cl-244"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;loading </span><span class="si">%d</span><span class="s"> training/validation sets from corpus&quot;</span><span class="p">,</span>
<a name="cl-245"></a>                 <span class="n">training_size</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
<a name="cl-246"></a>
<a name="cl-247"></a>    <span class="n">h_sampler</span><span class="p">,</span> <span class="n">documents</span><span class="p">,</span> <span class="n">features</span><span class="p">,</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">make_gist_features</span><span class="p">(</span>
<a name="cl-248"></a>        <span class="s">&#39;/home/ogrisel/data/spatial_envelope_256x256_static_8outdoorcategories&#39;</span><span class="p">,</span>
<a name="cl-249"></a>        <span class="n">training_size</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
<a name="cl-250"></a>
<a name="cl-251"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;loadded 2 x </span><span class="si">%d</span><span class="s"> documents as feature vectors of dim </span><span class="si">%d</span><span class="s">&quot;</span><span class="p">,</span>
<a name="cl-252"></a>                 <span class="n">training_size</span><span class="p">,</span> <span class="n">code_dims</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="cl-253"></a>
<a name="cl-254"></a>    <span class="n">current_training_set</span> <span class="o">=</span> <span class="n">features</span><span class="p">[:</span><span class="n">training_size</span><span class="p">]</span>
<a name="cl-255"></a>    <span class="n">current_validation_set</span> <span class="o">=</span> <span class="n">features</span><span class="p">[</span><span class="n">training_size</span><span class="p">:]</span>
<a name="cl-256"></a>
<a name="cl-257"></a>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">aec</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">autoencoders</span><span class="p">):</span>
<a name="cl-258"></a>
<a name="cl-259"></a>        <span class="n">tmse</span> <span class="o">=</span> <span class="n">aec</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">current_training_set</span><span class="p">,</span> <span class="n">current_training_set</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<a name="cl-260"></a>        <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;untrained model </span><span class="si">%d</span><span class="s"> training set MSE: </span><span class="si">%0.3f</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">tmse</span><span class="p">)</span>
<a name="cl-261"></a>
<a name="cl-262"></a>        <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span>
<a name="cl-263"></a>            <span class="s">&quot;untrained model </span><span class="si">%d</span><span class="s"> validation set MSE: </span><span class="si">%0.3f</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span>
<a name="cl-264"></a>            <span class="n">aec</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">current_validation_set</span><span class="p">,</span> <span class="n">current_validation_set</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>
<a name="cl-265"></a>
<a name="cl-266"></a>        <span class="n">epochs</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<a name="cl-267"></a>        <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">epochs</span><span class="p">:</span>
<a name="cl-268"></a>            <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span>
<a name="cl-269"></a>                <span class="s">&quot;training model </span><span class="si">%d</span><span class="s"> on the training set for </span><span class="si">%d</span><span class="s"> epochs&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
<a name="cl-270"></a>            <span class="n">t0</span> <span class="o">=</span> <span class="n">aec</span><span class="o">.</span><span class="n">get_current_t</span><span class="p">()</span>
<a name="cl-271"></a>            <span class="c">#if not t0 and i == 0:</span>
<a name="cl-272"></a>            <span class="c">#    t0 = 1000000000</span>
<a name="cl-273"></a>            <span class="n">aec</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">current_training_set</span><span class="p">,</span> <span class="n">current_training_set</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="n">e</span><span class="p">,</span>
<a name="cl-274"></a>                      <span class="n">t0</span><span class="o">=</span><span class="n">t0</span><span class="p">)</span>
<a name="cl-275"></a>
<a name="cl-276"></a>            <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;model </span><span class="si">%d</span><span class="s"> density: </span><span class="si">%0.2f</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">aec</span><span class="o">.</span><span class="n">get_density</span><span class="p">())</span>
<a name="cl-277"></a>
<a name="cl-278"></a>            <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span>
<a name="cl-279"></a>                <span class="s">&quot;trained model </span><span class="si">%i</span><span class="s"> training set MSE: </span><span class="si">%0.3f</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span>
<a name="cl-280"></a>                <span class="n">aec</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">current_training_set</span><span class="p">,</span> <span class="n">current_training_set</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>
<a name="cl-281"></a>
<a name="cl-282"></a>            <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span>
<a name="cl-283"></a>                <span class="s">&quot;trained model </span><span class="si">%i</span><span class="s"> validation set MSE: </span><span class="si">%0.3f</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span>
<a name="cl-284"></a>                <span class="n">aec</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">current_validation_set</span><span class="p">,</span> <span class="n">current_validation_set</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>
<a name="cl-285"></a>
<a name="cl-286"></a>        <span class="n">enc</span> <span class="o">=</span> <span class="n">extract_encoder</span><span class="p">([</span><span class="n">aec</span><span class="p">])</span>
<a name="cl-287"></a>
<a name="cl-288"></a>        <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;forwarding training set&quot;</span><span class="p">)</span>
<a name="cl-289"></a>        <span class="n">current_training_set</span> <span class="o">=</span> <span class="n">enc</span><span class="p">(</span><span class="n">current_training_set</span><span class="p">)</span>
<a name="cl-290"></a>
<a name="cl-291"></a>        <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;forwarding validation set&quot;</span><span class="p">)</span>
<a name="cl-292"></a>        <span class="n">current_validation_set</span> <span class="o">=</span> <span class="n">enc</span><span class="p">(</span><span class="n">current_validation_set</span><span class="p">)</span>
<a name="cl-293"></a>
<a name="cl-294"></a>    <span class="c"># saving the trained models</span>
<a name="cl-295"></a>    <span class="n">filename</span> <span class="o">=</span> <span class="s">&quot;autoencoders_</span><span class="si">%s</span><span class="s">.pickle&quot;</span> <span class="o">%</span> <span class="s">&quot;_&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">code_dims</span><span class="p">)</span>
<a name="cl-296"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;saving trained models to file: &quot;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
<a name="cl-297"></a>    <span class="n">dump</span><span class="p">(</span><span class="n">autoencoders</span><span class="p">,</span> <span class="nb">file</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">&quot;wb&quot;</span><span class="p">))</span>
<a name="cl-298"></a>
<a name="cl-299"></a>    <span class="c"># extract global encoder and codes</span>
<a name="cl-300"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;hashing features using the global encoder&quot;</span><span class="p">)</span>
<a name="cl-301"></a>    <span class="n">encoder</span> <span class="o">=</span> <span class="n">extract_encoder</span><span class="p">(</span><span class="n">autoencoders</span><span class="p">)</span>
<a name="cl-302"></a>    <span class="n">codes</span> <span class="o">=</span> <span class="n">encoder</span><span class="p">(</span><span class="n">features</span><span class="p">)</span>
<a name="cl-303"></a>    <span class="n">logging</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;done&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
		
	
</div>



		</div>

	</div>

	<div id="footer">
		<ul id="footer-nav">
			<li>Copyright Â© 2010 <a href="http://atlassian.com">Atlassian</a></li>
			<li><a href="http://www.atlassian.com/hosted/terms.jsp">Terms of Service</a></li>
			<li><a href="http://www.atlassian.com/about/privacy.jsp">Privacy</a></li>
			<li><a href="//bitbucket.org/site/master/issues/new">Report a Bug</a></li>
			<li><a href="http://status.bitbucket.org/">Server Status</a></li>
		</ul>
		<ul id="social-nav">
			<li class="blog"><a href="http://blog.bitbucket.org">Bitbucket Blog</a></li>
			<li class="twitter"><a href="http://www.twitter.com/bitbucket">Twitter</a></li>
		</ul>
		<h5>We run</h5>
		<ul id="technologies">
			<li><a href="http://www.djangoproject.com/">Django 1.2.3</a></li>
			<li><a href="//bitbucket.org/jespern/django-piston/">Piston 0.2.3rc1</a></li>
			<li><a href="http://www.selenic.com/mercurial/">Hg 1.7.2</a></li>
			<li><a href="http://www.python.org">Python 2.7.0</a></li>
			<li>r5012:f9ba141be0fb | bitbucket02</li>
		</ul>
	</div>

	<script src="http://assets.bitbucket.org/d87293a71cf4/js/lib/global.js" id="globaljs"></script>






	<script src="//cdn.optimizely.com/js/4079040.js"></script>
	<script type="text/javascript">
		var _gaq = _gaq || [];
		_gaq.push(['_setAccount', 'UA-2456069-3'], ['_trackPageview']);
	
		_gaq.push(['atl._setAccount', 'UA-6032469-33'], ['atl._trackPageview']);

        

		(function () {
		    var ga = document.createElement('script');
		    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		    ga.setAttribute('async', 'true');
		    document.documentElement.firstChild.appendChild(ga);
		}());
	</script>

</body>
</html>
