<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
  <title>python-jabberbot: A simple Jabber Bot for Python (thp.io)</title>
<!-- <meta name="category" content="software python jabber xmpp bot" />
        <meta name="description" content="A simple, Python-based Jabber bot framework, using xmpppy. You can use this framework to easily implement your own bots." />
        <meta name="pageicon" content="/2007/python-jabberbot/jabberbot-screenshot.png" /> -->
  <style type="text/css">
            body { margin: 0px; background-color: rgb( 30%, 30%, 30%); font-family: sans-serif; font-size: 10pt; }
            h1 { font-size: 16px; }
            h2 { font-size: 15px; }
            h3 { font-size: 14px; }
            a { text-decoration: none; color: rgb( 24%, 24%, 24%); }
            a:hover { text-decoration: underline; color: #333; background-color: rgb( 95%, 95%, 95%); }
            img { border-width: 0px; }
            .nav { padding: 10px; margin: 0px; background-color: rgb( 10%, 10%, 10%); color: rgb( 80%, 80%, 80%); letter-spacing: 3px; font-size: 11px; border-bottom: 1px rgb( 10%, 10%, 10%) solid; font-family: sans-serif; }
            .nav a { color: rgb( 40%, 40%, 40%); background-color: inherit; font-weight: bold; }
            .taglinks a { color: gray; }
            address { text-align: right; color: #666; }
            code, pre { background-color: rgb( 95%, 95%, 95%); }
            pre { overflow: auto; max-height: 500px; }
            hr { border: 0px; height: 1px; background-image: url(/2007/archive/dotted.gif); margin-top: 6px; margin-bottom: 6px; clear: both; }
            table.main { z-index: 200; margin-top: 20px; margin-left: auto; margin-right: auto; border-width: 0px; }
            table.main td { z-index: 200; padding: 10px; vertical-align: top;}
            table.main div.cont, table.main div.sidebar { background-color: rgb(98%, 98%, 98%); border: 1px rgb( 20%, 20%, 20%) solid; padding: 5px; }
            table.main div.cont { width: 660px; }
            div.important { border: 3px green solid; background-color: lightgreen; margin: 10px; padding: 10px; }
            p.quote { font-style: italic; text-align: center; padding-left: 20%; padding-right: 20%; color: rgb( 20%, 0%, 20%); }
            p.quote:after { font-size: 8pt; font-style: normal; content: attr(title); display: block; text-align: right; padding-right: 10%; padding-top: 5px; }
        </style>
</head>
<body>
<p style="text-align: right;" class="nav"> <a href="/" rel="home">home</a>
&#8226; <a href="/about">contact</a> &#8226; thp.io </p>
<table class="main">
  <tbody>
    <tr>
      <td>
      <div class="cont">
      <div style="padding: 0px 30px 15px;">
      <p style="font-size: 10px; color: rgb(204, 204, 204);"> <a
 href="/2007/">2007</a> / <strong>python-jabberbot: A simple Jabber
Bot for Python</strong> </p>
<!-- BEGIN CONTENT -->
      <h1>jabberbot: A simple Jabber Bot for Python</h1>
      <p> Programming your own Jabber bot can be fun and helpful. This
is <code>python-jabberbot</code>, a Jabber bot framework for Python
that enables you to easily write simple Jabber bots. You can use your
Jabber bots to provide information about your running systems, to make
your website interact with your visitors or notify you about updates or
changes you monitor with your Python scripts. </p>
<!-- marketing blurb :) -->
      <p class="quote" title="John Martinez"> <q>[...] now I have the
'bot bug' and I want to write bots for all kinds of things, since it's
so easy to do. Thanks again!</q> </p>
      <p> This Jabber bot is partly inspired by the <a
 href="http://xmpppy.sourceforge.net/examples/bot.py">xmpppy example
bot.py</a>, but designed to be re-usable and to make it easy to write
small Jabber bots that do one thing and do it well.<br>
      </p>
      <p> License: <strong>GNU General Public License, Version 3 or
later</strong> (<a href="http://www.gnu.org/licenses/gpl-3.0.html">GPLv3</a>)
      </p>
      <ul>
          <li><a href="http://freshmeat.net/projects/python-jabberbot/">Freshmeat.net
              project page</a></li>
          <li><a href="http://pypi.python.org/pypi/jabberbot">Python Package
              Index / CheeseShop</a></li>
      </ul>
      <h2>Dependencies</h2>
      <ul>
        <li><a href="http://xmpppy.sourceforge.net/">xmpppy</a>
(packaged as <code>python-xmpp</code> in <a
 href="http://www.debian.org/">Debian</a>)</li>
      </ul>
      <h2>Documentation</h2>
      <ul>
        <li><a href="http://xmpppy.sourceforge.net/apidocs/">xmpppy API
documentation</a> (dependency)</li>
        <li><a href="http://www.xmpp.org/">XMPP Standards Foundation</a>
(protocol documentation)</li>
      </ul>
      <h2>Debian Package</h2>
      <p>Thanks to Carl Chenet, python-jabberbot is now available as a Debian
      package for easy installation on Debian and derived systems:</p>
      <ul>
          <li><a href="http://packages.debian.org/python-jabberbot">python-jabberbot</a> in Debian
      </ul>
      <h2>Download</h2>
      <ul>
        <li>Current version: <a href="jabberbot-0.10.tar.gz">jabberbot-0.10.tar.gz</a>
(Released: 2010-07-30)</li>
      </ul>
      <h2>Development repository (Git)</h2>
      <p>You can get the latest and greatest code via Git:</p>
      <p><code>git clone git://repo.or.cz/jabberbot.git</code></p>
      <h2>Release history</h2>
      <p> </p>
      <ul>
        <li>2007-07-28: Initial release</li>
        <li>2007-09-17: Merged patch from <a
 href="mailto:jvm@axiometric.com">John Martinez</a></li>
        <li>2007-10-19: Merged patch from <a href="http://ified.ca/">Dan
Sanders</a></li>
        <li>2008-07-12: Add setup.py, prepare for CheeseShop, tarball<br>
        </li>
        <li>2008-11-26: Add TwitterBot example</li>
        <li>2009-01-25: Fix dependency checking</li>
        <li>2009-11-01: JabberBot 0.7 released with patches from <a href="http://github.com/patnotz">Pat Notz</a></li>
        <li>2009-11-06: JabberBot 0.8 released (fixed code examples on website + <code>examples/</code> in the source)</li>
        <li>2009-12-23: JabberBot 0.9 released (better help display; adding missing COPYING file)</li>
        <li>2010-07-30: JabberBot 0.10 released (XMMP TUNE support, XHTML support, command name overriding, suppressed default response and custom MUC usernames)</li>
      </ul>
      <p>The <strong>current</strong> ChangeLog can always be found on
      <a href="http://repo.or.cz/w/jabberbot.git">repo.or.cz/w/jabberbot.git</a>
      and the <a href="ChangeLog">old ChangeLog</a> is still available.</p>
      <h2>Usage</h2>
      <ol>
        <li>Import the class: <code>from jabberbot import JabberBot, botcmd</code></li>
        <li>Subclass the <code>JabberBot</code> class</li>
        <li>Add methods and decorate them with "@botcmd". The signature
        of the methods should look like this: <code>def somecommand(self, mess, args)</code>
        - the methods should return the message sent back to the user as string
        (or <code>None</code> if the command gives no reply)</li>
        <li>Create an instance of your bot, supplying username and password</li>
        <li>Call the <code>serve_forever()</code> method of your instance</li>
        <li>You can call the <code>send()</code> method on your bot to send messages to specific users</li>
      </ol>
      <h2>Example code</h2>
      <pre>from jabberbot import JabberBot, botcmd<br>import datetime<br><br>class SystemInfoJabberBot(JabberBot):<br>    @botcmd<br>    def serverinfo( self, mess, args):<br>        """Displays information about the server"""<br>        version = open('/proc/version').read().strip()<br>        loadavg = open('/proc/loadavg').read().strip()<br><br>        return '%s\n\n%s' % ( version, loadavg, )<br>    <br>    @botcmd<br>    def time( self, mess, args):<br>        """Displays current server time"""<br>        return str(datetime.datetime.now())<br><br>    @botcmd<br>    def rot13( self, mess, args):<br>        """Returns passed arguments rot13'ed"""<br>        return args.encode('rot13')<br><br>    @botcmd<br>    def whoami( self, mess, args):<br>        """Tells you your username"""<br>        return mess.getFrom()<br> <br>username = 'my-jabberid@jabberserver.example.org'<br>password = 'my-password'<br>bot = SystemInfoJabberBot(username,password)<br>bot.serve_forever()<br></pre>
      <h3>More examples</h3>
      <p>Starting with version 0.7, more examples can be found in the
      <code>examples/</code> subdirectory of the source distribution.</p>
      <h3>Screenshot</h3>
      <p style="text-align: center;"> <a
 href="jabberbot-screenshot.png"><img src="jabberbot-screenshot.png"
 alt="Screenshot" title=""
 style="border: 1px solid black; max-width: 100%;"></a> </p>
      <h3>Related projects</h3>
      <p> <a href="http://yoan.dosimple.ch/">Yoan Blanc</a> has done a
similiar project using Python and the Twisted framework: <a
 href="http://yoan.dosimple.ch/blog/2007/11/11/">A IM bot as an user
interface (kind of)</a>. </p>
      <h3>Projects using python-jabberbot</h3>
      <ul>
        <li>Hubert Chathi's <a
 href="http://www.uhoreg.ca/programming/jabber/systembot">System status
bot</a></li>
        <li>John Sullivan's <a
 href="http://wiki.wjsullivan.net/collaboration.cgi/SnakeBot">SnakeBot</a>
        </li>
        <li>Jay Parlar's <a href="http://github.com/parlarjb/prowl-jabberbots/tree/master">Prowl (iPhone) Jabberbots</a>
        </li>
        <li>Vicent Tamarit's <a href="http://notenones.com/wordpress/rincon-informatico/tvbot-programing-the-tv-with-jabber/">TVBot</a> (using natural language processing)
        <li>Gareth Rushgrove's <a href="https://github.com/garethr/lastbot">LastBot</a> (Personal LastFM search bot)
      </ul>
<!-- END CONTENT -->
      <hr style="margin-top: 30px;">
      <address>Friday, July 30th 2010</address>
      </div>
      </div>
      </td>
      <td> <br>
      </td>
    </tr>
  </tbody>
</table>
</body>
</html>
