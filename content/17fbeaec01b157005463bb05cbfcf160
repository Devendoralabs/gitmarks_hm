<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
  <head>
        <title>JavaScript Tips for Novices, Acolytes, and Gurus</title>


  <!-- Begin CSS -->
  <link rel="stylesheet" type="text/css" href="http://static.arstechnica.net//public/v6/styles/light/light.c.css?1292345428" media="screen" />
  <link rel="stylesheet" type="text/css" href="http://static.arstechnica.net//public/v6/styles/print/print.css?1292345428" media="print" />
  <!-- End CSS -->

  <link rel="apple-touch-icon" href="http://static.arstechnica.net/apple-touch-icon.png" />
  <link rel="canonical" href="http://arstechnica.com/open-source/news/2007/08/javascript-for-all-ages.ars" /> 
    <link rel="shorturl" href="" />
  <link rel="shortlink" href="" />
  <link rev="canonical" href="" />

    <link rel="shortcut icon" href="http://static.arstechnica.net/favicon.ico" />
  <link rel="icon" type="image/x-icon" href="http://static.arstechnica.net/favicon.ico" />

  <!-- Begin Feeds -->
    
    <link rel="alternate" type="application/rss+xml" title="All Articles " href="http://feeds.arstechnica.com/arstechnica/everything" />
    <!-- End Feeds -->

  <!-- C-razy IE9 stuff -->
  <meta name="application-name" content="Ars Technica"/>
  <meta name="msapplication-starturl" content="http://arstechnica.com/"/>
  <meta name="msapplication-tooltip" content="Ars Technica: Serving the technologist for 1.2 decades"/>
  <meta name="msapplication-task" content="name=News;action-uri=http://arstechnica.com/;icon-uri=http://arstechnica.com/favicon.ico"/>
  <meta name="msapplication-task" content="name=Features;action-uri=http://arstechnica.com/features/;icon-uri=http://static.arstechnica.net/ie-jump-menu/jump-features.ico"/>
  <meta name="msapplication-task" content="name=OpenForum;action-uri=http://arstechnica.com/civis/;icon-uri=http://static.arstechnica.net/ie-jump-menu/jump-forum.ico"/>
  <meta name="msapplication-task" content="name=One Microsoft Way;action-uri=http://arstechnica.com/microsoft/;icon-uri=http://static.arstechnica.net/ie-jump-menu/jump-omw.ico"/>
  <meta name="msapplication-task" content="name=Subscribe;action-uri=http://arstechnica.com/subscriptions/;icon-uri=http://static.arstechnica.net/ie-jump-menu/jump-subscribe.ico"/>

  
  <!-- Begin Metadata -->
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=1000" />
    <meta name="description" content="Some tidbits of scripting advice for people who know Javascript or want to know Javascript coming from Java, C, Python, Perl, or PHP." />
      <meta name="keywords" content="javascript, programming" />
      <meta name="title" content="JavaScript Tips for Novices, Acolytes, and Gurus" />
  <link rel="image_src" href="http://static.arstechnica.net/brief_icons/open-source-brief.png" />
  <meta name="medium" content="news" />
  
  <meta property="og:title" content="JavaScript Tips for Novices, Acolytes, and Gurus"/>
  <meta property="og:site_name" content="Ars Technica"/>
  <meta property="og:image" content="http://static.arstechnica.net/brief_icons/open-source-brief.png"/>
  
    <meta name="advertising" content="ask" />
  <!-- End Metadata -->

      <script type="text/javascript" src="/public/shared/scripts/da-1.5.js"></script>
    <script type="text/javascript">
    try {
			      cnp.ad.dart.setSite("ars.dart");
			      cnp.ad.dart.setZone('itbiz_general_computing');
      //cnp.ad.dart.addParameterString('kw=javascript-for-all-ages;kw=08;kw=2007;kw=news;kw=open-source;');
      cnp.ad.dart.addParameterString('mtfIFPath=/mt-static/plugins/ArsTheme/ad-campaigns/doubleclick/');
      cnp.ad.emptyFrameSrc="/public/shared/scripts/empty.html";
      cnp.ad.loaderFrameSrc="/public/shared/scripts/ad-loader-frame.html";
    } catch(e) {}
    </script>
     
  <!-- Entry - itbiz_general_computing -->
<style type="text/css" id="resource-styles">  </style>
 
  </head>
  <body class="individual">
    <div id="page" class="">
      
<div id="masthead" class="">
      <div id="logo"><a href="/"><img src="http://static.arstechnica.net//public/v6/styles/light/images/masthead/logo.png?1292345428" alt="Ars Technica: The Art of Technology" width="110" height="81" /></a></div>      
    <div id="ebc51ce07629d0e14d2fbc4236e44067" >
<script type="text/javascript">
  var pbanner_start = new Date();
  try {
    var pbanner = cnp.ad.create(cnp.ad.refreshable, false);
    pbanner.addParameter({'dcopt':'ist'});
    pbanner.addParameterString('kw=javascript-for-all-ages;kw=08;kw=2007;kw=news;kw=open-source;');
    pbanner.addParameter({'sz': '728x90' });
  } catch(e) {}
</script>
</div>
  </div>
      
<div id="search-navigation">
  <div id="search">
    <form action="http://www.google.com/cse" id="search-form">
      <div>
        <input type="hidden" value="011835048811694782689:7zpko-isndo" name="cx"/>
        <input type="hidden" value="UTF-8" name="ie"/>
        <input type="text" id="search-form-text" value="Search Ars" name="q"/>
        <input type="image" id="search-form-button" value="Search" src="http://static.arstechnica.net//public/v6/styles/light/images/search/button-bg.png?1292345428" name="sa"/>
      </div>
    </form>
  </div>
  <div id="navigation">
    <ul id="primary-navigation">
          <li class=""><a href="/">All</a></li>
          <li class="apple"><a href="/apple/">Apple</a></li>
          <li class="business"><a href="/business/">Business</a></li>
          <li class="gadgets"><a href="/gadgets/">Gadgets</a></li>
          <li class="gaming"><a href="/gaming/">Gaming</a></li>
          <li class="microsoft"><a href="/microsoft/">Microsoft</a></li>
          <li class="open-source selected"><a href="/open-source/">Open Source</a></li>
          <li class="science"><a href="/science/">Science</a></li>
          <li class="tech-policy"><a href="/tech-policy/">Tech Policy</a></li>
          <li id="primary-navigation-more" style="display:none;">
        More
        <ul >
                  <li><a href="/hardware/">Hardware</a></li>
                  <li><a href="/media/">Media</a></li>
                  <li><a href="/security/">Security</a></li>
                  <li><a href="/software/">Software</a></li>
                  <li><a href="/staff/">Staff</a></li>
                  <li><a href="/telecom/">Telecom</a></li>
                  <li><a href="/web/">Web</a></li>
                  <li style="padding:0;"><span style="display:inline;background-color: #920404; padding: 3px; color:white; -webkit-border-radius: 4px;">New</span> <a style="display:inline;" href="/site/tv.ars" title="Ars Technica TV">Ars.TV</a></li>
        </ul>
      </li>
    </ul>
   
    <ul id="secondary-navigation" class="open-source">
                            <li class="news selected"><a href="/open-source/news/">News</a></li>
                                          <li class="guides"><a href="/open-source/guides/">Guides</a></li>
                                          <li class="reviews"><a href="/open-source/reviews/">Reviews</a></li>
                      </ul>
    <ul id="auxiliary-navigation">
        <li class="subscribe"><a href="/subscriptions/">Upgrade to a Premier Subscription</a>
         
    </li>
    <li class="customize" style="display:none;">
      <a href="#">Customize â–¾</a>
      <ul>
        <li>
          <p>Site Theme:</p>
          <label><input type="radio" checked="checked" value="light.css" class="site-style" name="site-style" /> White</label>
          <label><input type="radio" value="dark.css" class="site-style" name="site-style" /> Black</label>
        </li>
        <li>
          <p>Choose body font:</p>
          <label><input type="radio" checked="checked" value="arial" class="body_font" name="body_font" /> Arial</label>
          <label><input type="radio" value="helvetica" class="body_font" name="body_font" /> Helvetica</label>
        </li>
        <li>
          <p>Layout (beta):</p>
          <label><input type="radio" checked="checked" value="normal" class="fp_layout" name="fp_layout" /> Normal</label>
          <label><input type="radio" value="compact" class="fp_layout" name="fp_layout" /> Compact</label>
        </li>
      </ul>
    </li>
    
    <li class="openforum"><a href="http://arstechnica.com/civis/">OpenForum</a></li>
    
    <li class="login-join"><a href="/civis/ucp.php?mode=login&amp;return_to=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars">Login/Join</a></li>
      </ul>
  </div>
</div>
      
                  <div id="main">
        
<div id="silo-header" class="">
  <h1 class="open-source"><a href="/open-source/" title="Go to Open Ended">Open Ended</a></h1>
</div>
        
        <div id="content" class="normal">   <div id="content-inner">
             <div id="story">
                <h2 class="title">JavaScript Tips for Novices, Acolytes, and Gurus</h2>
        <div class="byline"><span class="author">By <a href="/author/kris-kowal/">Kris Kowal</a></span> | <span class="posted">Last updated <abbr class="timeago datetime" title="2007-08-27T21:48:00Z">August 27, 2007 4:48 PM</abbr></span></div>
        
      


              <div id="" class="body" style="">          
        <!--body--><p>JavaScript, with its death grip on the Interwebs and every AJAX developer's language of <i>only</i> choice, is getting hot.  With roll-overs, pop-ups, and menus either solved or relegated to CSS behaviors, <tt>XMLHttpRequest</tt>s have made JavaScript once again a language of innovation.  This article is meant to offer a tidbit of idiomatic advice for people who know JavaScript or want to know JavaScript coming from Java, C, Python, Perl, or PHP.</p>

<h3>Novice: objects and associative arrays</h3>
<p>Coming from Java, you might expect JavaScript to provide a base type, like <tt>Object</tt>.  Coming from most languages, you might expect JavaScript to provide a dictionary, hash-table, or associative array type like Perl's <tt>%hash</tt> type, Python's <tt>dict</tt> type, PHP's <tt>array</tt> type, or Java's <tt>Map</tt> interface.  JavaScript kills two birds with one stone, and I mean knocks them both <i>dead</i>.  <tt>Object</tt> is the common, ancestral prototype of most instances.  They are also used for <tt>String</tt> to <tt>Object</tt> mappings.</p>

<p>JavaScript provides a shorthand syntax for <tt>Object</tt> initialization, much like Perl and Python associative arrays.</p>

<pre class="Code">
<span class="Identifier">var</span> foo = <span class="Statement">new</span> <span class="Type">Object</span>();
<span class="Identifier">var</span> foo = <span class="Identifier">{}</span>;</pre>
<p>Also, item indexing and member selection are equivalent.</p>

<pre class="Code">foo.a == foo<span class="Identifier">[</span><span class="Constant">'a'</span><span class="Identifier">]</span>;</pre>
<p>Since you can only use <tt>String</tt>s as keys, indexing an <tt>Object</tt> on another <tt>Object</tt> implies that JavaScript will convert the index to a string using <tt>toString</tt>.</p>

<pre class="Code">foo<span class="Identifier">[</span>1<span class="Identifier">]</span> == foo<span class="Identifier">[</span>(1).toString()<span class="Identifier">]</span> == foo<span class="Identifier">[</span><span class="Constant">'1'</span><span class="Identifier">]</span>;</pre>
<p>If you need a real hash mapping like Python or Java, you should find a library that provides one.  Since JavaScript implementations don't all provide a mechanism for overloading item indexing (nor an equivalent property system like Python's or Ruby's) and no JavaScript implementation provides a default hash algorithm for objects, a good library will provide an associative array type that includes functions like <tt>getItem</tt>, <tt>setItem</tt>, <tt>hasItem</tt>, and <tt>delItem</tt>, and a general <tt>hash</tt> algorithm that returns good default hashes for every built-in type and uses polymorphic <tt>hash</tt> member functions.</p>

<more />

<h3>Novice: cute type conversions</h3>
<p>JavaScript provides <tt>valueOf</tt> and <tt>toString</tt> member functions for all objects.  However, literal numbers, booleans, strings, undefined, and null are distinct from their object counterparts.  For example, <tt>typeof new Number(1) == 'object'</tt> whereas <tt>typeof 1 == 'number'</tt>.  However, there are some cute ways to implicitly and reliably convert any object to a literal number, literal boolean, or literal string.</p>

<p>You can convert any object to a number by adding it to zero.</p>

<pre class="Code">0 + foo</pre>
<p>You can convert any object to a string by adding it to a null string.</p>

<pre class="Code"><span class="Constant">''</span> + foo</pre>
<p>However, strings and numbers are special.  If you add a string and a number, the resultant type depends on whether the string is empty.  An empty string gets coerced to the number zero.  Otherwise, the zero gets coerced to a string and the addition performs concatenation.</p>

<pre class="Code">
0 + <span class="Constant">''</span> == 0
<span class="Constant">''</span> + 0 == 0
1 + <span class="Constant">''</span> == 1
<span class="Constant">''</span> + 1 == 1
0 + <span class="Constant">'a'</span> == <span class="Constant">'0a'</span>
<span class="Constant">'a'</span> + 0 == <span class="Constant">'a0'</span>
</pre>
<p>You can convert any object to a boolean, true or false value by negating it twice.</p>

<pre class="Code">!!foo</pre>


<h3>Novice: iteration</h3>
<p>Coming from Java or C, JavaScript has a fun variation on the <tt>for</tt> loop.  Coming from Perl, PHP, or Python, the familiar <tt>for</tt> loop has a subtle quirk. You can use a <tt>for</tt> loop to run a block repeatedly, once through for each member (items.member) and item (items['item']) of an <tt>Object</tt>.  The iterand will be the index of the item, not the item itself.</p>

<pre class="Code">
<span class="Statement">for</span> (<span class="Identifier">var</span> index <span class="Statement">in</span> items) <span class="Identifier">{</span>
  <span class="Identifier">var</span> item = items<span class="Identifier">[</span>index<span class="Identifier">]</span>;
  ...
<span class="Identifier">}</span></pre>
<p>You should use a traditional, C-style for-loop for iterating <tt>Array</tt> objects.  Bearing in mind that, in JavaScript, members and items are equivalent, the <tt>for</tt> loop will iterate over both numeric indices and  named members, with the exception of built-in members like <tt>toString</tt> or <tt>exec</tt>.  <a href="http://dev.rubyonrails.org/browser/spinoffs/prototype/trunk/src/array.js?rev=7293">Some libraries</a> controversially add member functions to the <tt>Array</tt> prototype.  Sometimes this causes the <tt>for (var i in array)</tt> to iterate on these member functions in addition to the numbers.  This is the pattern you should use to avoid getting member functions when you iterate on an <tt>Array</tt>:</p>

<pre class="Code">
<span class="Statement">for</span> (<span class="Identifier">var</span> i = 0; i &lt; items.length; i++) <span class="Identifier">{</span>
  <span class="Identifier">var</span> item = items<span class="Identifier">[</span>i<span class="Identifier">]</span>;
  ...
<span class="Identifier">}</span></pre>
<p>Of course, these libraries and new browsers also provide alternate iteration mechanisms that are arguably more elegant.  With recent versions of Firefox and libraries like Prototype, you get <tt>forEach</tt> iteration, which involves an anonymous function.</p>

<pre class="Code">
items.forEach(<span class="Identifier">function</span> (item) <span class="Identifier">{</span>
  ...
<span class="Identifier">}</span>);</pre>


<h3>Acolyte: anonymous functions</h3>
<p>The redeeming grace of JavaScript is its provision of anonymous functions with full closures.  In JavaScript, functions are objects.  Programmers can pass functions as arguments.  Furthermore, the function's scope includes all of the names in the scope in which it was declared.  Coupled with the facts that functions are declared at run time and that local variables can stick around long after a function returns, closures provide a wealth of options for programmers.  An exhaustive compendium of all the fun uses for closures would be far beyond the scope of this article, so here's a canonical example for you to ponder: a range generator.</p>

<pre class="Code">
<span class="Identifier">var</span> range = <span class="Identifier">function</span> (start, stop, step) <span class="Identifier">{</span>
  <span class="Statement">return</span> <span class="Identifier">function</span> () <span class="Identifier">{</span>
    <span class="Identifier">var</span> at = start;
    start += step;
    <span class="Statement">if</span> (at &lt; stop) <span class="Statement">return</span> at;
    <span class="Statement">else</span> <span class="Statement">throw</span> <span class="Statement">new</span> Error();
  <span class="Identifier">}</span>;
<span class="Identifier">}</span>;
<span class="Identifier">var</span> next = range(0, 10, 2); <span class="Comment">/* range returns a function */</span>
</pre>
<p>The first call of <tt>next</tt> returns 0.  The following times you call <tt>next</tt> it returns 2, 4, 6, and 8.  Thereafter, calling <tt>next</tt> will throw an <tt>Error</tt>.  This is because the local variables of <tt>range</tt>, the one time you've called it, remain in memory as long as <tt>next</tt> exists.  The anonymous function that <tt>range</tt> returns is a closure: both the code of the function and a reference to the scope in which the function was declared.  The returned function object effectively holds the <tt>range</tt> "function allocation record" in memory.  Thus, the value of <tt>start</tt> persists across calls to <tt>next</tt>.</p>


<h3> Acolyte: enclosure </h3>
<p>In JavaScript's top scope, variables you declare with <tt>var</tt> are members of the <tt>window</tt>.  To get a bit more privacy with your variables, you should use a closure by declaring an anonymous function and immediately calling it.  Since calling functions can have unfortunate side-effect of switching your context object to the global context, use <tt>call</tt> to send <tt>this</tt> into your closure.</p>

<pre class="Code">
(<span class="Identifier">function</span> () <span class="Identifier">{</span>
  ...
<span class="Identifier">}</span>).call(<span class="Identifier">this</span>);</pre>
<p>Another handy use for enclosures is to make using <tt>with</tt> and <tt>var</tt> behave deterministically and intuitively.  The <tt>with</tt> block pushes an <tt>Object</tt> onto the scope chain.  That is, members of a given object become local variables in the given block.</p>

<pre class="Code">
<span class="Statement">with</span> (<span class="Identifier">{</span><span class="Constant">'a'</span>: 10<span class="Identifier">}</span>) <span class="Identifier">{</span>
  a == 10;
<span class="Identifier">}</span></pre>
<p>However, when you declare variables with <tt>var</tt> inside a <tt>with</tt> block, the variables should be declared in the function block scope and a variable by the same name should be initialized in the with block scope.  However, all bets are off depending on what browser runs the script.  Using an enclosure inside all <tt>with</tt> blocks will force <tt>var</tt> declarations to operate in the innermost scope.</p>

<pre class="Code">
<span class="Statement">with</span> (<span class="Identifier">{</span><span class="Constant">'a'</span>: 10<span class="Identifier">}</span>) <span class="Identifier">{</span>
<span class="Identifier">function</span> () <span class="Identifier">{</span>
  <span class="Identifier">var</span> a = 20;
<span class="Identifier">}</span>).call(<span class="Identifier">this</span>);
<span class="Identifier">}</span></pre>


<h3> Acolyte: context object manipulation </h3>
<p>JavaScript provides a context object, <tt>this</tt>.  In the global context, <tt>this</tt> is the <tt>window</tt>.  Also, by default, <tt>this</tt> is the <tt>window</tt> when you call a function.</p>

<pre class="Code">
<span class="Identifier">var</span> bar = <span class="Identifier">function</span> () <span class="Identifier">{</span><span class="Statement">return</span> <span class="Identifier">this</span><span class="Identifier">}</span>;
bar() == <span class="Statement">window</span>;</pre>
<p>There are two ways to send other objects as the context object into a function.  The first is to call a function as a member of an object.</p>

<pre class="Code">
<span class="Identifier">var</span> foo = <span class="Identifier">{</span><span class="Constant">'bar'</span>: bar<span class="Identifier">}</span>;
foo.bar() == foo;</pre>
<p>The second way to send an object to a function as its context object is explicit.  You can use the <tt>Function.call</tt> method's first argument to send in an arbitrary object.  <tt>call</tt> accepts the context object followed by any arguments you want to pass in normally.</p>

<pre class="Code">bar.call(foo, 0, 1, 2, ...);</pre>


<h3> Acolyte: variadic arguments </h3>
<p>Coming from C, variadic arguments are the <tt>va_arg</tt> and <tt>...</tt> syntax trick left over from ANSI C that allow functions like <tt>printf</tt> to accept an arbitrary number of arguments.  In Python, you get variadic arguments and keywords using <tt>*</tt> and <tt>**</tt> in your declarations and invocations.  In JavaScript, like Perl, functions implicitly accept any number of arguments.  You can access these variadic argument lists using the <tt>arguments</tt> variable inside your functions.</p>

<p>Consider a trivial <tt>max</tt> function that returns the largest of two numbers.</p>

<pre class="Code">
<span class="Identifier">this</span>.max = <span class="Identifier">function</span> (a, b) <span class="Identifier">{</span>
  <span class="Statement">if</span> (a &gt; b) <span class="Statement">return</span> a;
  <span class="Statement">else</span> <span class="Statement">return</span> b;
<span class="Identifier">}</span>;</pre>
<p><tt>max</tt> can use the <tt>arguments</tt> to read any number of arguments.</p>

<pre class="Code">
<span class="Identifier">this</span>.max = <span class="Identifier">function</span> () <span class="Identifier">{</span>
  <span class="Identifier">var</span> items = <span class="Identifier">arguments</span>;
  <span class="Identifier">var</span> basis;
  <span class="Statement">for</span> (<span class="Identifier">var</span> member <span class="Statement">in</span> items) <span class="Identifier">{</span>
    <span class="Identifier">var</span> item = items<span class="Identifier">[</span>member<span class="Identifier">]</span>;
    <span class="Statement">if</span> (basis === <span class="Statement">undefined</span> || item &gt; basis) <span class="Identifier">{</span>
      basis = item;
    <span class="Identifier">}</span>
  <span class="Identifier">}</span>;
  <span class="Statement">return</span> basis;
<span class="Identifier">}</span>;</pre>
<p>If you want to pass variadic arguments to a function from an arbitrary number of items in an <tt>Array</tt>, you can use the <tt>Function.apply</tt> function.  Like <tt>call</tt>, <tt>apply</tt> accepts the context object as its first argument, followed by a single <tt>Array</tt> containing whatever arguments to you want to pass.</p>

<pre class="Code">max.apply(<span class="Identifier">this</span>, <span class="Identifier">[</span>10, 30, 20<span class="Identifier">]</span>) == 30;</pre>


<h3> Guru: binding </h3>
<p>You've likely noticed that the context object a function receives depends on the invocation syntax.  Binding a function to an object assures that you receive a particular object.  Here's a sample <tt>bind</tt> function.</p>

<pre class="Code">
<span class="Identifier">var</span> bind = <span class="Identifier">function</span> (context, functor) <span class="Identifier">{</span>
  <span class="Statement">return</span> <span class="Identifier">function</span> () <span class="Identifier">{</span>
    <span class="Statement">return</span> functor.apply(context, <span class="Identifier">arguments</span>);
  <span class="Identifier">}</span>;
<span class="Identifier">}</span>;</pre>


<h3> Guru: lazy function definition </h3>
<p><a href="http://peter.michaux.ca/article/3556">Peter Michaux</a> recently documented and named the "Lazy Function Definition Pattern" wherein you determine the behavior of a function the first time the user calls it.  This is handy for choosing among cross-platform code paths.  Consider this function that gets the value of PI by calculating it once, then simply returning it after each successive call.</p>

<pre class="Code">
<span class="Identifier">var</span> getPi = <span class="Identifier">function</span> () <span class="Identifier">{</span>
  <span class="Identifier">var</span> pi = calculatePi();
  getPi = <span class="Identifier">function</span> () <span class="Identifier">{</span>
    <span class="Statement">return</span> pi;
  <span class="Identifier">}</span>
  <span class="Statement">return</span> pi;
<span class="Identifier">}</span>;</pre>


<h3> Guru: polymorphic callable objects </h3>
<p>Supposing you were writing a type system, you might want objects of all your types to have the option of being callable, and for the call behavior to be redefinable in sub-types.  One fun way to do this is to always use <tt>Function</tt> instead of <tt>Object</tt> as your base type.</p>

<pre class="Code">
<span class="Identifier">var</span> callableType = <span class="Identifier">function</span> (constructor) <span class="Identifier">{</span>
  <span class="Statement">return</span> <span class="Identifier">function</span> () <span class="Identifier">{</span>
    <span class="Identifier">var</span> callableInstance = <span class="Identifier">function</span> () <span class="Identifier">{</span>
      <span class="Statement">return</span> callableInstance.callOverload.apply(callableInstance, <span class="Identifier">arguments</span>);
    <span class="Identifier">}</span>;
    constructor.apply(callableInstance, <span class="Identifier">arguments</span>);
    <span class="Statement">return</span> callableInstance;
  <span class="Identifier">}</span>;
<span class="Identifier">}</span>;</pre>


<h3> Conclusion </h3>
<p>JavaScript is a simple, powerful language made complex by a lack of guarantees, subtle variations of its implementation, and a propensity for silently ignoring errors.  However, for the time being, JavaScript is the only language we have for cross-browser web development.  By subscribing to some simple patterns, we can avoid some unfortunate surprises and build power-tools using power-tools in our collective JavaScript programming adventure.</p>
        
        
                
        </div>
        
        
       
        
    

    </div>



    <noscript>
    <img style="position: absolute; bottom: 0px; right: 0px; width: 1px; height: 1px;" src="http://arstechnica.com/dragons/breath.gif?id=19479&901753296" alt="" />
    </noscript>
    <script type="text/javascript">
    document.write('<img style="position: absolute; bottom: 0px; right: 0px; width: 1px; height: 1px;" src="http://arstechnica.com/dragons/breath.gif?id=19479&' + (parseInt(Math.random()*99999999)).toString() + '" alt="" />');
    </script>
            <a name="comments"></a>  
    <div id="comments-bar" class="with-bubble">
    <h2>User comments</h2>
    <div class="comments-link"><a href="http://episteme.arstechnica.com/eve/forums?a=tpc&amp;s=50009562&amp;f=503005616831&amp;m=131003996831&amp;r=131003996831">Click here to view comments on this story</a></div>
  </div>

  <!-- Discussion Starts Here -->
  <div id="comments-loading-indicator">
    <h4>Loading Comments: <img src="http://static.arstechnica.com/mt-static/plugins/ArsTheme/style/themes/light/images/ajax-loader.gif" /></h4>
  </div>

  <div id="comments" style="display:none;">
  </div>

  <a name="reply"></a>
  <div id="comment-form" style="display:none;">
    <h2>Leave your comment</h2>     
    <p id="comment-login-message">You must be logged in to comment.  <a href="http://episteme.arstechnica.com/eve/login?ORIGINAL_REFERRER_URL=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars%3Fcomments%3D1">Log in</a> to your account, or you can <a href="http://civis.arstechnica.com/users/register?return_to=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars%3Fcomments%3D1">register</a> for a new account.</p>
    <form id="groupee-reply" action="http://episteme.arstechnica.com/eve/forums" method="post" target="groupee-response">
      <div>
      <input type="hidden" name="a" value="AJAX_UPDATE_MESSAGE" />
      <input type="hidden" name="IS_EXISTING_MESSAGE" value="N" />
      <input type="hidden" name="f" value="" id="reply-forum-oid" />
      <input type="hidden" name="TOPIC_MESSAGE_OID" value="" class="reply-topic-oid" />
      <input type="hidden" name="x_id" value="" class="reply-topic-oid" />
      <input type="hidden" name="RESULT_URL" value="http://arstechnica.com/public/full/comment-results.txt" />
      <input type="hidden" name="m" value="" />
      <textarea name="MESSAGE_BODY" class="new-reply-body" id="comment-form-textarea" rows="10" cols="20"></textarea>
      <p><input id="comment-form-submit" value="Please login..." type="submit" disabled="disabled" class="disabled" />

      <span id="comment-logout-profile" style="display:none;"><a href="http://episteme.arstechnica.com/eve/logout?ORIGINAL_REFERRER_URL=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars%3Fcomments%3D1">Logout, </a> | <a href="http://civis.arstechnica.com/users/edit/" title="Update your Ars Technica account profile">Edit Profile</a> | <a href="http://arstechnica.com/old/content/2000/01/postguide.ars" title="Read these or else!">Posting Guidelines</a></span>
</p>
      </div>
    </form>
  </div>

  <iframe name="groupee-response" style="width: 0px;height:0px;border:0px solid black;"></iframe>
                <div id="links-bar">
  <ul>
    
    
        <li class="facebook">
      <iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars&amp;layout=button_count&amp;show_faces=false&amp;width=85&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:85px; height:21px;" allowTransparency="true"></iframe>
    </li>
        
    
        
    <li class="reddit">
        <iframe src="http://www.reddit.com/static/button/button1.html?width=120&url=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars&amp;title=JavaScript%20Tips%20for%20Novices%2C%20Acolytes%2C%20and%20Gurus&amp;bgcolor=fff&amp;bordercolor=eee" width="120" height="20" scrolling="no" frameborder="0"></iframe>
        </li>
    
    <li class="share">
      <a class="a2a_dd" href="http://www.addtoany.com/share_save?linkname=JavaScript%20Tips%20for%20Novices%2C%20Acolytes%2C%20and%20Gurus&amp;linkurl=http%3A%2F%2Farstechnica.com%2Fopen-source%2Fnews%2F2007%2F08%2Fjavascript-for-all-ages.ars"><img src="http://static.addtoany.com/buttons/favicon.png" width="16" height="16" border="0" alt="Share/Bookmark" style="display:inline;vertical-align:middle;"/> Share/Email</a>
      <script type="text/javascript">
        var a2a_linkname="JavaScript Tips for Novices, Acolytes, and Gurus",
        a2a_linkurl="http://arstechnica.com/open-source/news/2007/08/javascript-for-all-ages.ars",
        a2a_onclick=1,
        a2a_show_title=1,
        a2a_hide_embeds=0,
        a2a_num_services=8,
        a2a_color_main="989EA3",
        a2a_color_border="989EA3",
        a2a_color_link_text="FF5B00",
        a2a_color_link_text_hover="ffffff",
        a2a_track_links='ga',
        a2a_prioritize= [
          "yahoo_buzz",
          "stumbleupon",
          "instapaper",
          "slashdot",
          "linkedin",
          "delicious",
          "google_reader",
          "tumblr",
          "posterous"
          ];
        var a2a_config = a2a_config || {};
        a2a_config.no_3p = 1;
      </script>
      <style type="text/css">#a2apage_BROWSER { display:none !important; }</style>
    </li>

  </ul>
</div>
              <div id="read-more-stories">
<h2>Read more stories</h2>
  <div class="story-navigation">
      <a href="/apple/news/2007/08/leopard-builds-edging-ever-closer-to-gm.ars" title="Read the previously published article">&lt; Older Story</a> 
    
   |   
      <a href="/hardware/news/2007/08/iomega-launches-home-network-hard-drives.ars" title="Read the next newest article">Newer Story &gt;</a>
    </div>
  <ul>
  <!--googleoff: index-->
  
  <li>
    <div class="image">
      <a href="/open-source/reviews/2010/12/nothing-but-net-hands-on-test-of-the-cr-48-chrome-os-laptop.ars"><img width="140" height="78" src="http://static.arstechnica.net/assets/2010/12/chrome-cr-49-handson-list-thumb-140x78-18356-f.jpg" alt="Nothing but 'Net: hands-on with the Cr-48 Chrome OS laptop" /></a>
    </div>
    <div class="title"><h3><a href="/open-source/reviews/2010/12/nothing-but-net-hands-on-test-of-the-cr-48-chrome-os-laptop.ars">Nothing but 'Net: hands-on with the Cr-48 Chrome OS laptop</a> </h3></div>
  </li>
  <li>
    <div class="image">
      <a href="/open-source/news/2010/12/fbi-accused-of-planting-backdoor-in-openbsd-ipsec-stack.ars"><img width="140" height="78" src="http://static.arstechnica.net/assets/2009/06/spy_eavesdrop_keyhole_ars-thumb-140x78-6225-f.jpg" alt="FBI accused of planting backdoor in OpenBSD IPSEC stack" /></a>
    </div>
    <div class="title"><h3><a href="/open-source/news/2010/12/fbi-accused-of-planting-backdoor-in-openbsd-ipsec-stack.ars">FBI accused of planting backdoor in OpenBSD IPSEC stack</a> </h3></div>
  </li>
  <li>
    <div class="image">
      <a href="/open-source/news/2010/12/apache-resigns-from-jcp-in-protest-of-oracle-governance-failures.ars"><img width="140" height="78" src="http://static.arstechnica.net/assets/2010/11/brokenjava-thumb-140x78-17741-f.jpg" alt="Apache quits Java governance group in protest of Oracle abuses" /></a>
    </div>
    <div class="title"><h3><a href="/open-source/news/2010/12/apache-resigns-from-jcp-in-protest-of-oracle-governance-failures.ars">Apache quits Java governance group in protest of Oracle abuses</a> </h3></div>
  </li>
  <li>
    <div class="image">
      <a href="/open-source/news/2010/12/kataspace-browser-based-virtual-world-built-with-webgl-and-html5.ars"><img width="140" height="78" src="http://static.arstechnica.net/assets/2009/04/3d_web-thumb-140x78-4617-f.jpg" alt="Kataspace: browser-based virtual worlds built with WebGL and HTML5" /></a>
    </div>
    <div class="title"><h3><a href="/open-source/news/2010/12/kataspace-browser-based-virtual-world-built-with-webgl-and-html5.ars">Kataspace: browser-based virtual worlds built with WebGL and HTML5</a> </h3></div>
  </li>
  <!--googleon: index-->
  </ul>
</div>
      
  </div>   
</div>
        <!--googleoff: index-->
<div id="sidebar">
      
<div id="article-links" class="with-divider" style="display:none;">
  
  <ul>
    <li class="enlarge-text"><a href="#">Increase text size</a></li>
    <li class="shrink-text"><a href="#">Reduce text size</a></li>
        <li class="print"><a href="#">Print this story</a></li>
        
    <li class="comment"><a href="http://episteme.arstechnica.com/eve/forums?a=tpc&amp;amp;s=50009562&amp;amp;f=503005616831&amp;amp;m=131003996831&amp;amp;r=131003996831">Leave a comment</a></li>
  </ul>

  </div>

 
            <kjaskjas></kjaskjas>
      <kjaskjas></kjaskjas>
      <blah></blah>
  <div id="b61a2a39f917b27cfdde56ac7b10c41b">

<noscript>
<div id="help-by-subscribing">
<a href="/tech-policy/news/2010/12/is-a-un-internet-takeover-looming-not-quite.ars/2"><img src="/tech-policy/news/2010/12/is-a-un-internet-takeover-looming-not-quite.ars/4" alt="Please subscribe" /></a></div>
</noscript>

<script type="text/javascript">
try {
  var ppanel = cnp.ad.create(cnp.ad.refreshable, false);
  ppanel.addParameter({'sz':'300x250'});
  ppanel.addParameterString('kw=top;kw=javascript-for-all-ages;kw=08;kw=2007;kw=news;kw=open-source;');
  ppanel.load();
} catch(e) {}
</script>
</div>
  <div id="journals-box" class="with-divider">
  <h2 class="title">Latest Top Stories</h2>
  <ul class="category">
        <li class="all selected">
      <span class="tab-inner">
        <a href="/" title="All">All</a>
      </span>
    </li>
        <li class="apple">
      <span class="tab-inner">
        <a href="/apple/" title="Apple">Apple</a>
      </span>
    </li>
        <li class="gaming">
      <span class="tab-inner">
        <a href="/gaming/" title="Gaming">Gaming</a>
      </span>
    </li>
        <li class="microsoft">
      <span class="tab-inner">
        <a href="/microsoft/" title="Microsoft">Microsoft</a>
      </span>
    </li>
        <li class="gadgets">
      <span class="tab-inner">
        <a href="/gadgets/" title="Gadgets">Gadgets</a>
      </span>
    </li>
        <li class="open-source">
      <span class="tab-inner">
        <a href="/open-source/" title="Open Source">Open Source</a>
      </span>
    </li>
        <li class="business">
      <span class="tab-inner">
        <a href="/business/" title="Business">Business</a>
      </span>
    </li>
        <li class="science">
      <span class="tab-inner">
        <a href="/science/" title="Science">Science</a>
      </span>
    </li>
        <li class="tech-policy">
      <span class="tab-inner">
        <a href="/tech-policy/" title="Tech Policy">Tech Policy</a>
      </span>
    </li>
        <li class="staff">
      <span class="tab-inner">
        <a href="/staff/" title="Staff">Staff</a>
      </span>
    </li>
      </ul>
  <ul class="stories">
    <li id="journal-box-0" class="tech-policy">
    <a href="/tech-policy/news/2010/12/is-a-un-internet-takeover-looming-not-quite.ars">Is a UN Internet takeover looming? Not quite</a>
      </li>
    <li id="journal-box-1" class="web">
    <a href="/web/news/2010/12/do-illegal-downloaders-boost-music-concerts.ars">Illegal file-sharers: friend of the struggling musician?</a>
      </li>
    <li id="journal-box-2" class="tech-policy">
    <a href="/tech-policy/reviews/2010/12/ars-book-review-the-master-switch-by-tim-wu.ars">Ars book review: "The Master Switch" by Tim Wu</a>
      </li>
    <li id="journal-box-3" class="gaming">
    <a href="/gaming/news/2010/12/what-gran-turismo-and-forza-can-learn-from-each-other.ars">What <em>Gran Turismo</em> and <em>Forza</em> can learn from one another</a>
      </li>
    <li id="journal-box-4" class="science">
    <a href="/science/news/2010/12/weird-science-gets-hammered-the-old-fashioned-way.ars">Weird Science gets hammered the old-fashioned way</a>
      </li>
    <li id="journal-box-5" class="tech-policy">
    <a href="/tech-policy/news/2010/12/history-of-computingin-handy-graph-form.ars">A history of computing flamewars&mdash;in handy graph form!</a>
      </li>
    <li id="journal-box-6" class="apple">
    <a href="/apple/news/2010/12/week-in-apple-airplay-to-your-mac-new-ipad-rumors-and-more.ars">Week in Apple: AirPlay to your Mac, new iPad rumors, and more</a>
      </li>
    <li id="journal-box-7" class="gadgets">
    <a href="/gadgets/news/2010/12/week-in-tech-all-about-android-and-chrome.ars">Week in tech: all about Android (and Chrome)</a>
      </li>
    <li id="journal-box-8" class="gaming">
    <a href="/gaming/news/2010/12/week-in-gaming-is-making-a-list-checking-it-twice.ars">Week in gaming is making a list, checking it twice</a>
      </li>
    <li id="journal-box-9" class="science">
    <a href="/science/news/2010/12/week-in-science-fox-on-climate-and-sex-among-the-neurotics.ars">Week in science: Fox on climate and sex among the neurotics</a>
      </li>
    <li id="journal-box-10" class="gaming">
    <a href="/gaming/news/2010/12/playstation-app-for-ios-android-is-social-doesnt-play-games.ars">PlayStation app for iOS, Android is social, doesn't play games</a>
      </li>
    <li id="journal-box-11" class="science">
    <a href="/science/news/2010/12/googles-digitized-books-provide-verbal-culturome.ars">Database of Google Books shows the half-life of celebrity</a>
      </li>
    <li id="journal-box-12" class="tech-policy">
    <a href="/tech-policy/news/2010/12/canada-we-might-be-americas-hat-but-we-dont-like-caps.ars">Canada: We might be America's hat, but we don't like caps</a>
      </li>
    <li id="journal-box-13" class="gaming">
    <a href="/gaming/news/2010/12/xbox-live-marketplace-holiday-sale-starts-december-21.ars">XBox Live Marketplace holiday sale starts December 21</a>
      </li>
    <li id="journal-box-14" class="microsoft">
    <a href="/microsoft/news/2010/12/mse-20-arrives-with-heuristic-scanning-network-traffic-inspection.ars">MSE 2.0 arrives with heuristic scanning, network traffic inspection</a>
      </li>
    </ul>
</div>
    <div class="with-divider" id="fb">
    <iframe scrolling="no" frameborder="0" src="http://www.facebook.com/connect/connect.php?id=19374573752&amp;connections=10&amp;stream=0&amp;css&amp;locale=en_US&amp;logobar=0" allowtransparency="true" style="border: none; width: 300px; height: 250px;"></iframe>  

      <p><a href="#" class="anonymous">Do not show me this box</a></p>
      </div>
            <ars></ars>
  <div id="eb80a9535d856b09b5e3040b3b5d4204">

<noscript>
<div id="help-by-subscribing">
<a href="/tech-policy/news/2010/12/is-a-un-internet-takeover-looming-not-quite.ars/2"><img src="/tech-policy/news/2010/12/is-a-un-internet-takeover-looming-not-quite.ars/4" alt="Please subscribe" /></a></div>
</noscript>

<script type="text/javascript">
try {
  var ppanel = cnp.ad.create(cnp.ad.refreshable, false);
  ppanel.addParameter({'sz':'300x250'});
  ppanel.addParameterString('kw=bottom;kw=javascript-for-all-ages;kw=08;kw=2007;kw=news;kw=open-source;');
  ppanel.load();
} catch(e) {}
</script>
</div>
  <div class="dont-miss with-divider">
    <h2 class="title">
      <span class="title">Don't Miss</span>:
      <span class="sub-title">Promos &amp; Insight</span>
    </h2>
    <div class="body">
      <a href="http://arstechnica.com/gadgets/future-of-tv/"><img src="http://static.arstechnica.com/public/shared/images/future-tv-xrail.jpg" width="300" height="100" alt="Promo image!" /></a>
      <div class="bubble">
        <div class="bubble-inner">
                    <span class="promo">Promo</span>:
                    <a href="http://arstechnica.com/gadgets/future-of-tv/">Ars explores the future of TV, minus the DeLorean</a>
        </div>
      </div>
    </div>
  </div>
  <div class="dont-miss with-divider">
    <h2 class="title">
      <span class="title">Don't Miss</span>:
      <span class="sub-title">Promos &amp; Insight</span>
    </h2>
    <div class="body">
      <a href="http://arstechnica.com/site/explorers-of-light.ars"><img src="http://static.arstechnica.com/public/shared/images/canon-ex-light-x-rail.jpg" width="300" height="100" alt="Promo image!" /></a>
      <div class="bubble">
        <div class="bubble-inner">
                    <span class="promo">Sponsored video</span>:
                    <a href="http://arstechnica.com/site/explorers-of-light.ars">Explorers of Light from Canon - Crescenzo Notarile, ASC</a>
        </div>
      </div>
    </div>
  </div>
  <div id="jobs-ars" class="with-divider">
    <h2 class="title">
      <span class="title">Job.Ars</span>:
      <span class="subtitle">looking for a new job?</span>
    </h2>
    <div class="body">
      <ul>
      <div id="jobs-ars-content">
  <ul>
    
    <li>
      <div class="job-title"><a href="http://jobs.arstechnica.com/list/796/">Web Developer</a> at New York Institute of Technology </div>
      <div class="job-location">Old Westbury, New York </div>
    </li>
    
    <li>
      <div class="job-title"><a href="http://jobs.arstechnica.com/list/795/">Early/Lead Web App &amp; Browser Add-on Developer</a> at scrible</div>
      <div class="job-location">San Francisco Bay Area</div>
    </li>
    
    <li>
      <div class="job-title"><a href="http://jobs.arstechnica.com/list/794/">Sr. Operations Engineer</a> at Box.net</div>
      <div class="job-location">Palo Alto, CA</div>
    </li>
    
    <li>
      <div class="job-title"><a href="http://jobs.arstechnica.com/list/793/">Solutions Architect</a> at www.hugeinc.com</div>
      <div class="job-location">Los Angeles, CA</div>
    </li>
    
  </ul>
  <div id="more-jobs"><a href="http://jobs.arstechnica.com">More Job Listings</a></div>
</div>      </ul>
    </div>
  </div>

</div>
<!--googleon: index-->
      </div>
      <div id="footer">
        <div id="slogan">Serving the technologist for <span id="decades">1</span> &#x00d7; 10<sup>-1</sup> centuries</div>
        <iframe src="http://static.arstechnica.net//public/v6/footer.html?1292345428" frameborder="0" scrolling="no" width="1000" height="350"></iframe>
      </div>
    </div> 
    <script type="text/javascript">

  var page_class = 'individual',
    site_root = "",
    site_root_rel = '/',
        discussion_url = "http://episteme.arstechnica.com/eve/forums?a=tpc&amp;s=50009562&amp;f=503005616831&amp;m=131003996831&amp;r=131003996831",
        entry_author = {
          "kris kowal":true,
      "kris kowal":true,
      "boviberitus":true
        },
    entry_id = 19479,
        fp_layout = 'normal',
    syntaxhighlighter = "http://arstechnica.com/public/full/scripts/syntaxhighlighter.js",
    gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."),
    new_comments = false,
    disable_fb = 'false';
    document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
   
<script type="text/javascript">
  try {
    var pageTracker = _gat._getTracker("UA-31997-1");
    pageTracker._trackPageview();
  } catch(err)  {}
</script>

  <script src="http://static.arstechnica.net//public/v6/scripts/site.min.js?1292345428" type="text/javascript" charset="utf-8"></script>
  <script type="text/javascript">
    if(window.run_later){
      for(var i = 0; i < window.run_later.length; i++){
        $(window.run_later[i]);
      }
    }
  </script>
<!-- lotame -->
<script type="text/javascript">
$(function(){
  $.getScript('http://tags.crwdcntrl.net/c/313/cc.js');
  $.getScript('http://ad.crwdcntrl.net/4/to=y|p=1686|out=json|var=ccauds', function(){
    var i=0,
        len,
        aud,
        tags = (typeof ccauds!=='undefined' ? ccauds : false);

    if(!tags) {
      return false;
    }

    if(tags.Profile){
      aud=tags.Profile.Audiences.Audience,
      len=aud.length;
      for(; i< len;i++){
        try{
          cnp.ad.dart.addParameterString('kw='+aud[i].abbr+';');
        }catch(e){}
      }
    }
  });
});
</script>
<!-- Begin comScore Tag -->
<script type="text/javascript">
$(document).ready(function(){
  var cs_url = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js?c1=2&c2=6035094&c3=&c4=&c5=&c6=&c15=";
  $.getScript(cs_url, function(){ return });
  if(typeof(___testing) != "undefined"){
    if(___testing === true) {
      ars.event('Interactions', 'Presented Next Page Leader', window.location.href);
    }
  }  
});
</script>
<noscript>
<img src="http://b.scorecardresearch.com/b?c1=2&c2=6035094&c3=&c4=&c5=&c6=&c15=&cv=1.3&cj=1" style="position:absolute; bottom: 0px; right:0px;"
width="1" height="1" alt="" />
</noscript>
<!-- End comScore Tag -->
<span style="display: none" id="ArsTechnicaNews" class="hslice">
  <span style="display: none" class="entry-title">Ars Technica News</span>
  <a style="display: none" href="http://www.ieaddons.com/en/ie8slice/Content.ashx?id=330" rel="entry-content"></a>
</span>
          </body>
</html>
