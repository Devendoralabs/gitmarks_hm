<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<title>NEVERFEAR.org - Simpletons guide to git</title>
		<link rel="stylesheet" href="/style.css">
		<link rel="stylesheet" href="/members.css">
		<link rel="stylesheet" href="/markdown/geshi.css">
		<link rel="alternate" type="application/rss+xml" title="Weblog RSS feed" href="/rss/weblog/">
		<link rel="alternate" type="application/rss+xml" title="Weblog RSS feed for post comments" href="/rss/comments/">
		<link rel="icon" type="image/vnd.microsoft.icon" href="/favicon.ico">
		<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
		<script language="Javascript" type="text/javascript" src="/javascript/ticktock.js"></script>
		<script language="Javascript" type="text/javascript" src="/javascript/browser.js"></script>
		<script language="Javascript" type="text/javascript" src="/javascript/toc.js"></script>
		<script language="Javascript" type="text/javascript" src="/javascript/xmlhttp.js"></script>
		<meta name="description" content="A software programming and technology social community."> 
		<meta name="keywords" content="C,Python,PHP,Lisp,Scheme,DSSSL,XML,XSLT,PIC,ICMP,TCP,IP,HTML,CSS,Microcode,Cryptography,Development,Technology,Source code,JavaScript,JavaScript canvas element,How-to,IRC,MySQL,tvnamer,Git,Ascii,GPG,Geeks,Nerds,Programmers,Developers,Telephony">
	</head>
	<body onload="DoClockTick('time'); CheckBrowser();">
		
		<div id="page">
			
			<div id="banner">
				<table id="banner-table">
					<tr>
						<td id="rss-container">
							<a href="/rss/weblog/" id="rss-link" class="rss"><img alt="RSS" title="RSS Feed" src="/res/icons/rssorange.png" class="rss-icon"></a>
						</td> <!-- /rss-container -->
					</tr>
				</table> <!-- /banner-table -->
			</div> <!-- /banner -->
		
			<div id="page-body">
			
				<div id="navigation">
					<a href="/blog/">Weblog</a> <a href="/archive/">Article Index</a> <a href="/search/">Search</a> <a href="/projects/">Projects</a> <a href="/members/list/">Members</a> <a href="http://twitter.com/NeverfearOrg">Twitter</a> <a href="/rss/">RSS</a> <a href="/login/">Login</a> 					
				</div> <!-- /navigation -->
	               		
				<div id="associates">
					See also: <a href="http://imagepaste.nullnetwork.net/">Image paste bin</a> <a href="http://wol.nullnetwork.net/">Wake-On-Lan client</a> <a href="http://cork.nullnetwork.net/">Corkboard</a> 				</div>
				 
				<div id="page-content">
	
	
				<div id="post-container-72" class="post-container">
					<div id="post-title-72" class="post-title">
						<h1><a href="/blog/view/72/Simpletons_guide_to_git" id="post-title-link-72" class="post-title-link">Simpletons guide to git</a></h1>
					</div>
					<div id="post-header-72" class="post-header">
						<div id="post-author-72" class="post-author">
							Author: <a href="/profile/ben">ben</a>
						</div>
						<div id="post-date-72" class="post-date">
							Wed, 19th Aug 2009 15:33:01							
						</div>
						<div id="post-tags-72" class="post-tags">
							Tags: <a href="/blog/tag/tutorial/">tutorial</a>, <a href="/blog/tag/git/">git</a>							
						</div>
												
					</div>
					
					<!--
					<div class="MemberAvatar_ben GenericAvatar"></div>
					-->
					
					<div id="post-toc-72" class="post-toc"></div>
					<!-- Including advert -->
<div style="float: right; margin: 6px;">
<script type="text/javascript"><!--
google_ad_client = "pub-4627728740189107";
/* 160x600, neverfear.org */
google_ad_slot = "4194685306";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
					
					<div id="post-content-72" class="post-content">
						<p>Simpletons guide to git</p>

<p>This is simply a "click these buttons" guide to git. See the last section of the article for more advanced/better guides and resources.</p>

<h2>Installing</h2>

<p>First, you need to install git. This differs platform to platform..</p>

<h3>Linux</h3>

<p>On UNIX-like systems, use your package manager to install <code>git-core</code>. You may wish to install <code>git-svn</code> also</p>

<p>For example, on <a href="http://www.debian.org/">Debian</a> (and Debian based distributions such as <a href="http://www.ubuntu.com/">Ubuntu</a>):</p>

<pre class="text" style="font-family:monospace;">sudo apt-get install git-core</pre>

<p>For Red Hat based distros like <a href="http://fedoraproject.org/">Fedora</a>, just change <code>apt-get</code> to <code>yum</code>.</p>

<p>For other distros I'm sure you can figure it out!</p>

<h3>Mac OS X, using Mac Ports or fink:</h3>

<p>After installing <a href="http://www.macports.org/">Mac Ports</a> run..</p>

<pre class="text" style="font-family:monospace;">sudo port install git-core</pre>

<p>..or for <a href="http://www.finkproject.org/">fink</a> run</p>

<pre class="text" style="font-family:monospace;">fink install git-core</pre>

<p>Alternatively, you can use the <a href="http://code.google.com/p/git-osx-installer/">Git for OS X</a> installer.</p>

<h3>Windows</h3>

<p>Download and install <a href="http://code.google.com/p/msysgit/">mysysgit</a></p>

<p>This install a Cygwin terminal with the <code>git</code> commands available, it also installs <code>git gui</code> but I shall assume you are using Cygwin for this tutorial.</p>

<h3>From source:</h3>

<p>Assuming you have the required development tools (<code>sudo apt-get install build-essential</code> on Ubuntu, or the <a href="http://developer.apple.com/Tools/">Developer Tools</a> on OS X), git is simple to compile from source.</p>

<p>Download source code from <a href="http://git-scm.com/">git-scm.com</a>, extract it. In a terminal <code>cd</code> to the extracted directory and run..</p>

<pre class="text" style="font-family:monospace;">./configure --prefix=/usr/local/git &amp;&amp; make &amp;&amp; sudo make install</pre>

<p>Add <code>/usr/local/git/bin</code> to your $PATH</p>

<p>..alternatively, use the script <a href="http://www.simplicidade.org/notes/archives/2008/09/updated_xgitupd.html">x-git-update-to-latest-version</a> which uses the latest development version (which I've never had a problem with) - it also deals with installing the man pages, creating symlinks and so on.</p>

<h2>Configuration</h2>

<p>Now git is setup, there is a few configuration options you should set.</p>

<pre class="text" style="font-family:monospace;">git config --global user.email me@example.com
git config --global user.name 'Alice McBob'</pre>

<p>Those are used to identify who made each commit. The email is also used by sites like <a href="http://github.com">Github</a> to tie commits to your account.</p>

<p>Final option, to get colours in <code>diffs</code> and the <code>git status</code> output, run the following:</p>

<pre class="text" style="font-family:monospace;">git config --global color.diff auto
git config --global color.status auto</pre>

<h2>Basics and help</h2>

<p>All git commands are of the format:</p>

<pre class="text" style="font-family:monospace;">git [sub command] [arguments]</pre>

<p>All sub-commands have their own help, for example:</p>

<pre class="text" style="font-family:monospace;">git add -h</pre>

<p>Also, most commands have their own man-page, which can be accessed using <code>--help</code>:</p>

<pre class="text" style="font-family:monospace;">git add --help</pre>

<p>This covers the usage of the command in more detail than <code>-h</code></p>

<h2>New repository</h2>

<p>Either navigate to your projects folder, or make a new one, <code>cd</code> into it and run:</p>

<pre class="text" style="font-family:monospace;">git init</pre>

<p>That is it. This makes the current folder into a git repository (as it now contains a <code>.git/</code> folder).</p>

<h2>Setting up ignores</h2>

<p>Make a file named <code>.gitignore</code> - to this file add the files/folders you wish to ignore, one per line. A good base ignore file for Python projects:</p>

<pre class="text" style="font-family:monospace;">*.pyc
.DS_Store
Thumb.db
desktop.ini</pre>

<p>That ignores all <code>.pyc</code> files, and a few meta-data files created by OS X and Windows.</p>

<p><em>Note:</em> The ignore file should be committed to your repository. If you wish to ignore files in your local repository <em>only</em>, use the <code>.git/info/exclude</code> file instead. It's generally best to use <code>.gitignore</code> as this is synced and version-controlled along with your project.</p>

<h2>Initial commit</h2>

<p>If you run <code>git status</code> you will see all your files are currently "Untracked"</p>

<p>To track all the files (except those excluded by <code>.gitignore</code>), use the <code>git add</code> command on the folder:</p>

<pre class="text" style="font-family:monospace;">git add .</pre>

<p>This simply marks the files as "Changes to be committed" - nothing is actually written to the repository, yet.</p>

<p>To commit them into the revision history, run:</p>

<pre class="text" style="font-family:monospace;">git commit</pre>

<p>..this will launch your <code>$EDITOR</code> asking for a commit message. You can alternatively specify this on the command line using the <code>-m</code> flag:</p>

<pre class="text" style="font-family:monospace;">git commit -m &quot;Initial commit&quot;</pre>

<h2>Make changes, see status, commit again</h2>

<p>Edit your code. To see what files have changed:</p>

<pre class="text" style="font-family:monospace;">git status</pre>

<p>Example output:</p>

<pre class="text" style="font-family:monospace;"># On branch master
# Changed but not updated:
#   (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
#   (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)
#
#       modified:   tvnamer_exceptions.py
#       modified:   utils.py</pre>

<p>To see a diff of what has changed, run:</p>

<pre class="text" style="font-family:monospace;">git diff</pre>

<p>As mentioned in the <code>git status</code> output, to stage the changes in <code>utils.py</code> simply run:</p>

<pre class="text" style="font-family:monospace;">git add utils.py</pre>

<p>Running <code>git status</code> again will now show:</p>

<pre class="text" style="font-family:monospace;"># On branch master
# Changes to be committed:
#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)
#
#       modified:   main.py
#
# Changed but not updated:
#   (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
#   (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)
#
#       modified:   tvnamer_exceptions.py</pre>

<p>As before, to commit the changes just run:</p>

<pre class="text" style="font-family:monospace;">git commit</pre>

<h2>That's (sort of) it</h2>

<p>That's it. To use git as a local version control system, that's all you need. In summary:</p>

<pre class="text" style="font-family:monospace;">mkdir my_project    # make project folder
cd my_project
git init            # make new repository
# edit your files
git add .           # track all files or changes
git commit          # commit files to revision history
# edit your files more
git add myfile.py   # stage a single file for commiting
git commit          # commit any staged file</pre>

<h2>Collaboration</h2>

<p>To setup a simple "git server" on a remote linux machine, first <code>ssh</code> to it. You then need to create a "bare" repository (basically the contents of the <code>.git</code> folder, without the working copy), to do this run:</p>

<pre class="text" style="font-family:monospace;">mkdir myrepo.git
cd myrepo.git
git init --bare</pre>

<p>Naming the folder <code>myrepo.git</code> is just a convention to signify it's a bare repository, it can be named anything.</p>

<p>Now, back on your local machine - you need to tell git where your remote repository is, to do this add a "remote":</p>

<pre class="text" style="font-family:monospace;">git remote add origin myusername@example.com:/some/dir/myrepo.git</pre>

<p>To push your changes to this remote you use <code>git push</code>:</p>

<pre class="text" style="font-family:monospace;">git push origin master</pre>

<p><code>master</code> is the default branch name, <code>origin</code> is the server name. Once you have done this once, in future you can simple run</p>

<pre class="text" style="font-family:monospace;">git push</pre>

<p>You can have multiple remotes, for example, <code>origin</code> could be your server, you could have a <code>github</code> remote, a <code>mylaptop</code> remote and so on.</p>

<p>If you are pushing to a remote that is not <code>origin</code> you must specify it:</p>

<pre class="text" style="font-family:monospace;">git push github</pre>

<p>Now, say someone else has pushed changed to your example.com server, to get these updates you use <code>git pull</code>:</p>

<pre class="text" style="font-family:monospace;">git pull origin master</pre>

<p>Once this has been done once, you should be able to simply run <code>git pull</code>.</p>

<p><em>Note:</em> <code>git fetch</code> is similar to <code>pull</code>, but fetch does not apply changes to your branch. Generally you will want to use <code>git pull</code> (unless you know otherwise)</p>

<h2>Github</h2>

<p>Setting up your own server is fine, but <a href="http://github.com">Github</a> has many advantages, such as a nice repository browser, built-in wiki and issue tracking tools, but the most important thing is the community that surrounds it.</p>

<p>It's extremely simple and self-explanatory to use. Signup for an account (the free one allows you any number of public repositories).</p>

<p>Once logged in, click "create a new repository", enter a project name (and an optional description and homepage URL)</p>

<p>When you click the "Create Repository" button, it presents you with a condensed version of the above guide, showing you how to configure your username/email, make a new (local) repository, add the github remote and push your changes to it!</p>

<h2>Additional resources</h2>

<ul>
<li><p><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/">Git Magic</a>
Good general guide covering many "How do I.." subjects, such as rewriting revision history, reverting changes and so on. Covers the basics too</p></li>
<li><p><a href="http://gitcasts.com/">Gitcasts</a>
A series of screencasts covering various topics, including basic setup and workflow, using <code>git log</code>, merging and branching and some more advanced topics like browsing raw git objects (the stuff in the <code>.git</code> folder)</p></li>
<li><p><a href="http://book.git-scm.com/">The Git Community Book</a> - a community-written book</p></li>
<li><p><a href="http://progit.org/">"Pro Git" book</a> - a creative-commons licensed book, written by one of the Github creators</p></li>
<li><p><a href="http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide">"Git for beginners: The definitive practical guide"</a> on StackOverflow
Various simple guides created by members of the StackOverflow community. Contains links to other Git resources</p></li>
<li><p><a href="http://stackoverflow.com/questions/tagged/git">The git tag on StackOverflow</a>
Several "why use git?" discussions, many obscure problems and issues solved, some guides to using git. If you have problems not covered by Git Magic or a quick web-search, StackOverflow is a good place to ask for help!</p></li>
<li><p><a href="http://peepcode.com/products/git">Peepcode Git episode</a>
Costs $9USD. Covers basically everything about git</p></li>
<li><p><a href="http://www.lostechies.com/blogs/jason_meridth/archive/2009/06/01/git-for-windows-developers-git-series-part-1.aspx">"Git For Windows Developers" series (part 1)</a> (also <a href="http://www.lostechies.com/blogs/jason_meridth/archive/2009/06/04/git-for-windows-developers-git-series-part-2.aspx">part 2,</a> and <a href="http://www.lostechies.com/blogs/jason_meridth/archive/2009/06/07/git-for-windows-developers-git-series-part-3.aspx">part 3</a>)</p>

<p>Covers using git on Windows. After the initial setup, much of this will apply to any platform.</p></li>
<li><p><a href="http://github.com/guides/home">Github Guides</a>
Guides created by Github users. Obviously some are Github-oriented, but covers many generalised git topics</p></li>
<li><p>Utilities:</p>

<ul>
<li><a href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way">gitosis</a>
Best way to host multi-user git repositories on your own server. Simplifies configuration, authentication and so on.</li>
<li><a href="http://gitx.frim.nl/">GitX</a> - "a git GUI specifically for Mac OS X. It currently features a history viewer much like gitk and a commit GUI like git gui. But then in silky smooth OS X style!"</li>
</ul></li>
<li><p>Git hosting:</p>

<ul>
<li><a href="http://github.com">Github</a> - the most popular git hosting site, hosts projects such as <a href="http://github.com/rails/rails/">Ruby on Rails</a>, <a href="http://github.com/digg">some of Digg's open-source porjects</a> and many others. unlimited open-source repositories for free (upto 300MB space), paid accounts have private repositories, good collaboration tools.</li>
<li><a href="http://gitorious.org/">Gitorious</a> - free, for open-source projects (no private repositories), the site itself <a href="http://gitorious.org/gitorious">is open source</a></li>
<li><a href="http://repo.or.cz/">repo.or.cz</a> - the more-or-less official git hosting. A bit archiac looking compared to Github/Gitorious</li>
<li><a href="http://unfuddle.com/">Unfuddle</a> - Subversion and Git hosting, free account allows one project. Has various project management tools</li>
</ul></li>
</ul>
					</div>
					
										
					<div class="share-social-media">



	<span class="share-facebook">
		<a title="Share link on Facebook" target="_blank"
			href="http://www.facebook.com/sharer.php?u=http%3A%2F%2Fneverfear.org%2Fblog%2Fview%2F72%2FSimpletons_guide_to_git&amp;t=Simpletons%20guide%20to%20git"><img
			src="/res/icons/shareFacebook_32x32.png" alt="Share link on Facebook" title="Share link on Facebook" border="0"></a>
	</span>
	<span class="share-twitter">
		<a title="Share link on Twitter" target="_blank"
			href="http://twitter.com/home?status=Simpletons%20guide%20to%20git: http%3A%2F%2Fneverfear.org%2Fblog%2Fview%2F72%2FSimpletons_guide_to_git"><img
			src="/res/icons/shareTwitter_32x32.png" alt="Share link on Twitter" title="Share link on Twitter" border="0"></a>
	</span>
	<span class="share-digg">
		<a title="Share link on Digg" target="_blank"
			href="http://digg.com/submit?url=http%3A%2F%2Fneverfear.org%2Fblog%2Fview%2F72%2FSimpletons_guide_to_git&amp;title=Simpletons%20guide%20to%20git"><img
			src="/res/icons/shareDigg_32x32.png" alt="Share link on Digg" title="Share link on Digg" border="0"></a>
	</span>
	<span class="share-buzz">
		<a title="Share link on Yahoo Buzz" target="_blank"
			href="http://buzz.yahoo.com/buzz?targetUrl=http%3A%2F%2Fneverfear.org%2Fblog%2Fview%2F72%2FSimpletons_guide_to_git&amp;headline=Simpletons%20guide%20to%20git&amp;summary=Simpletons%20guide%20to%20git"><img
			src="/res/icons/shareBuzz_32x32.png" alt="Share link on Yahoo Buzz" title="Share link on Yahoo Buzz" border="0"></a>
	</span>
	
</div>
					
					<div id="post-comments-footer-72" class="post-comments-footer">
						<a href="/blog/view/72/Simpletons_guide_to_git/comments">There are 2 comments on this post.</a>
						<a href="/blog/view/72/Simpletons_guide_to_git/comments#new"><img src="/res/icons/comment_new.png" alt="" title="Make a new comment">Make a comment</a>.
					
					</div>
				</div>
				<script language="Javascript" type="text/javascript">
				SetAdjustedPostTime("post-date-72", 1250695981);
				SetAdjustedPostTime("post-date-last-edited-72", 0);
				</script>
				
				<!--<hr/>-->

				</div> <!-- /page-content -->
				<div id="footnote">
											
						<a href="/irc/">IRC</a>
												
						<a href="/rss/">RSS</a>
											
				</div> <!-- /footnote -->
			</div> <!-- /page-body -->
			<div id="bottom-strip"></div>
		</div> <!-- /page -->
		
		<div id="poweredby">
			<div id="poweredby-top-strip"></div>
			Powered by Debian, Jack Daniels, Guinness, and excessive quantities of caffeine and sugar.
		</div> <!-- /poweredby -->
		
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-10119883-1");
pageTracker._trackPageview();
} catch(err) {}
</script>
	</body>
</html>
<!-- Generated in 0.095334 -->
<!-- Output was cached -->
